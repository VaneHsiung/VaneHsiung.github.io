<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>vBlog</title>
  
  <subtitle>Vane Hsiung&#39;s Blog</subtitle>
  <link href="https://vanehsiung.netlify.app/atom.xml" rel="self"/>
  
  <link href="https://vanehsiung.netlify.app/"/>
  <updated>2021-02-22T04:23:01.792Z</updated>
  <id>https://vanehsiung.netlify.app/</id>
  
  <author>
    <name>vane</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android 移动开发基础案例教程</title>
    <link href="https://vanehsiung.netlify.app/2020/12/14/Android/"/>
    <id>https://vanehsiung.netlify.app/2020/12/14/Android/</id>
    <published>2020-12-14T04:29:55.000Z</published>
    <updated>2021-02-22T04:23:01.792Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Android-基础入门"><a href="#Android-基础入门" class="headerlink" title="Android 基础入门"></a>Android 基础入门</h3><h5 id="Android-简介"><a href="#Android-简介" class="headerlink" title="Android 简介"></a>Android 简介</h5><p>Android 是一款基于 Linux 平台的开源操作系统，主要用于移动设备中，由 Google 公司和开放手机联盟领导及开发。Android 一词最早出现于法国作家利尔亚当在 1886 年发表的科幻小说《未来夏娃》中，将外表像人的机器起名为 Android。从 Android 1.5 版本开始， Android 用甜点作为系统版本的代号。</p><a id="more"></a><p>Android 系统采用分层架构，由高到低分为 4 层，依次是应用程序层、应用程序框架层 、核心类库层和 Linux 内核层：</p><ul><li>应用程序层是一个应用程序的集合，所有安装在手机上的应用程序都属于这一层。</li><li>应用程序框架层主要提供了构建应用程序时用到的各种 API。</li><li>核心类库中包含了系统库及 Android 运行时库，系统库主要是通过 C/C++ 库来为 Android 系统提供主要的特性支持；Android 运行时库主要提供了一些核心库，能够允许开发者使用 Java 语言来编写 Android 应用程序，Android 运行时库中还包括了 Dalvik 虚拟机。</li><li>Linux 内核层为 Android 设备的各种硬件提供了底层的驱动。</li></ul><p>Dalvik 是 Google 公司自己设计用于 Android 平台的虚拟机，它可以简单地完成进程隔离和线程管理，并且可以提高内存的使用效率。每一个 Android 应用程序在底层都会对应一个独立的 Dalvik 虚拟机实例，其代码在虚拟机的解析下得以执行。Java 虚拟机和 Dalvik 虚拟机区别：Java 虚拟机运行的是 .class 字节码文件 ，而 Dalvik 虚拟机运行的则是其专有的 .dex 文件；Java 虚拟机是基于栈的架构，而 Dalvik 是基于寄存器的架构。</p><p>ART 模式英文全称为 Android Runtime，是谷歌 Android 4.4 系统增加的一种应用运行模式。ART 模式与 Dalvik 模式最大的不同在于，在启用 ART 模式后，系统在安装应用的时候会进行一次预编译，在安装应用程序时会先将代码转换为机器语言存储在本地，这样在运行程序时就不会每次都进行编译了，执行效率也大大提升。</p><h5 id="Android-开发环境搭建"><a href="#Android-开发环境搭建" class="headerlink" title="Android 开发环境搭建"></a>Android 开发环境搭建</h5><p>Android Studio 是 Google 提供的一个 Android 开发环境，基于 lntelliJ IDEA。</p><p>DDMS：在使用模拟器或者手机进行程序测试时，通常会查看设备的内存使用情况，或者查看正在运行的进程等，这时就需要使用 Android Studio 提供的 DDMS（Dalvik Debug Monitor Service）（已分解为不同部分）。</p><p>ADB ( Android Debug Bridge ) 调试桥：ADB 调试桥位于 SDK 的 platform-tools 目录中，它与 DDMS 工具的作用相同，只不过是通过命令行的方式管理模拟器和真机的调试。</p><h5 id="开发第一个-Android-程序"><a href="#开发第一个-Android-程序" class="headerlink" title="开发第一个 Android 程序"></a>开发第一个 Android 程序</h5><p>Android 程序在创建时，Android Studio 就为其构建了基本结构，设计者可以在此结构上开发应用程序：</p><ul><li>manifests: 用于存放 <code>AndroidManifest.xml</code> 文件。在清单文件中配置的信息会添加到 Android 系统中，当程序运行时，系统会找到清单文件中的配置信息，然后根据配置信息打开相应组件。</li><li>java：用于存放所有的 Java 代码， 在该文件夹中可以创建多个包， 每个包中可以存放不同的文件或 Activity。</li><li>res: 用于存放 Android 程序所用到的资源。drawable 目录用于存放图片及 XML 文件，layout 目录用于存放布局文件，mipmap 目录通常用于存放应用程序图标，values 目录用于放置定义的字符串。</li><li>Gradle Scripts: 用于存放项目创建的相关文件。</li></ul><p>当项目创建成功后，Android Studio 会自动生成布局文件 <code>.xml</code> 和 Activity 文件 <code>.java</code>，布局文件主要用于展示 Android 项目的界面， Activity 文件主要用于完成界面的交互功能。</p><p>Activity 继承自 AppCompatActivity，当 Activity 执行时会调用 <code>onCreate()</code> 方法，在该方法中通过 <code>setContentView(R.layout.activity_main)</code> 将布局文件转换成 View 对象，显示在界面上。</p><p>清单文件 AndroidManifest.xml，是整个项目的配置文件，程序中定义的四大组 Activity 、BroadcastReceiver 、Service 、ContentProvider 都需要在该文件中进行注册。<code>&lt;activity android:name=&quot;.MainActivity&quot; &gt;</code> 标签用于注册—个 Activity。</p><p>在 Android Studio 开发工具中更强调 Project 中项目的关联性，关联性比较大的项目就放在一起，关联性不大的项 目就单独放在一个 Project 中；一个 Project 可以包含多个 Module, 并且在 Project 创建时会默认创建一个名为 App 的 Module。</p><p>Android 程序开发完成后 ，如果要发布到互联网上供别人使用，就需要将自己的程序打包成正式的 Android 安装包 ( Android Package 简称 APK )。</p><h3 id="Android-UI-开发"><a href="#Android-UI-开发" class="headerlink" title="Android UI 开发"></a>Android UI 开发</h3><h5 id="布局的创建"><a href="#布局的创建" class="headerlink" title="布局的创建"></a>布局的创建</h5><p>Layout File Name 只能包含小写字母 a ~ z，数字 0~9 或下划线 ”_＂。</p><h5 id="布局的类型"><a href="#布局的类型" class="headerlink" title="布局的类型"></a>布局的类型</h5><ul><li><p>线性布局 (LinearLayout)</p><p>orientation 属性用于控制控件的排列方向，值 vertical 表示线性布局垂直显示，值 horizontal 表示线性布局水平显示。</p></li><li><p>相对布局 (RelativeLayout)</p><p>通过相对定位的方式指定控件位置，即以其他控件或父容器为参照物，摆放控件位置。在设计相对布局时要遵循控件之间的依赖关系，后放入控件的位置依赖于先放入的控件。</p></li><li><p>帧布局 (Framelayout)</p><p>为每个加入其中的控件创建一个空白区域（称为—帧，每个控件占据—帧）。所有控件都默认显示在屏幕左上角，并按照先后放入的顺序重叠摆放，先放入的控件显示在最底层，后放入的控件显示在最顶层。前景图片是通过 FrameLayout 标签中的 foreground 属性设置的，并使用 foregroundGravity 属性设置图片居左，前景图片始终保持在最上层 。</p></li><li><p>表格布局 (TableLayout)</p><p>以表格形式排列控件，表格布局每一行都由 TableRow 对象组成，每个单元格都是控件。在 TableRow 标签中设置 layout_width 和 layout_height 属性是没有作用的， 其宽度 layout_width 和高度 layout_height 会自动根据单元格控件决定。 如果其他控件在 TableRow 标签外，会自成一行。</p></li><li><p>绝对布局 (Absolutelayout)</p><p>通过指定 X, y坐标来控制每—个控件位置的。此类已弃用。</p></li></ul><p>@+id 新增一个资源 id，@id 引用现有资源。</p><p>控件 layout_width 属性，值 <code>wrap_content</code> 包裹内容让当前控件根据控件内容大小自动伸缩，值 <code>match_parent</code> 填充父窗体由父容器大小决定控件大小。</p><p>控件 <code>layout_weight</code> 属性称为权重，通过比例调整布局中所有控件的大小。原理是 Android 先会把布局内所有控件 layout_weight 属性值相加得到总值，然后用该控件 layout_weight 属性值除以总值，得到每个控件的占比，根据占比分配控件所占大小。当标签中使用 layout _weight 时，控件宽度不再由 layout_width 来决定，指定为 0dp 是一种规范。</p><p><code>dp</code>: 一种基于屏幕密度的抽象单位。不同设备有不同的显示效果，它是根据设备分辨率的不同来确定控件的尺寸。</p><p><code>sp</code>: 代表可伸缩像素，采用与 dp 相同的设计理念。设置文字大小时使用，原因是当修改系统字体大小时，字体大小以dp为单位时，大小不变；当修改系统字体大小时，字体大小以sp为单位时，大小跟随变化。</p><h5 id="常用控件"><a href="#常用控件" class="headerlink" title="常用控件"></a>常用控件</h5><ul><li><p>TextView</p><table><thead><tr><th>控件属性</th><th>功能描述</th></tr></thead><tbody><tr><td>android:text</td><td>设置显示文本</td></tr><tr><td>android:textColor</td><td>设置文本的颜色</td></tr><tr><td>android:textSize</td><td>设置文字大小</td></tr></tbody></table><p>  layout_width、 laylout_height 和 widhth、height 属性的区别：带 “layout” 前缀的属性通常是相对父控件而言的， 而 width、height 属性是相对于控件本身而言的。</p></li><li><p>EditText</p><table><thead><tr><th>控件属性</th><th>功能描述</th></tr></thead><tbody><tr><td>android:hint</td><td>设置 EditText 没有输入内容时显示的提示文本</td></tr><tr><td>android:maxlines</td><td>设置最大行数</td></tr><tr><td>android:password</td><td>设置文本以密码形式 “.” 显示</td></tr><tr><td>android:phoneNumber</td><td>设置文本以电话号码方式输入</td></tr><tr><td>android:editable</td><td>设置是否可编辑</td></tr><tr><td>EditText 高度设置为 wrap_content，如果输入内容过多， EditText 会被拉伸，使用 maxlines 属性，如果输入的内容超过了，文本就会出现上下滚动的效果。</td><td></td></tr></tbody></table></li><li><p>Button 点击事件</p><ul><li>在布局中指定 <code>onClick=&quot;click&quot;</code> 属性，然后再 Acitivity 添加 click() 方法。布局代码中 onClick 属性的值( click ) 必须与 Activity 代码中定义的方法名保持一致， 否则 Android系统找不到绑定的点击事件。</li><li>使用匿名内部类。 通过 <code>findViewById()</code> 方法初始化控件，使用 <code>setOnClickListener(new View.OnclickListener()&#123; public void onClick(View v) &#123;...&#125;&#125;）</code>方法对控件进行绑定同时实现 onClick(）方法。</li><li>在当前 Activity 中实现 OnClickListener 接口并重写 onClick(）方法。然后使用 <code>setOnClickListener(this)</code> 方法对控件进行绑定。</li><li>创建内部类。 </li></ul></li><li><p>RadioButton</p><p>RadioButton 为单选按钮，它需要与 RadioGroup 配合使用，提供两个或多个互斥的选项集。RadioButton checked 属性值如果设置为 true, 按钮会默认选中。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">RadioGroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RadioButton</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RadioButton</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RadioGroup</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>ImageView</p><p>ImageView 是视图控件，它继承自 View， 其功能是在屏幕中显示图像。引用图片属性的区别在于 background 属性是背景，会根据 ImageView 控件大小进行伸缩，而 src 属性是前景，以原图大小显示。</p></li></ul><h5 id="常见对话框"><a href="#常见对话框" class="headerlink" title="常见对话框"></a>常见对话框</h5><p>对话框—般以小窗口的形式展示在 Activity 之上，当对话框显示时，处在下层的 Activity 失去焦点，对话框便可以接收用户的交互信息。</p><ul><li><p>普通对话框</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">AlertDialog dialog;</span><br><span class="line"><span class="comment">// 在 AlertDialog.Builder() 中参数是 context ( 上 下 文 ） 类型，指向当前 Acitivity</span></span><br><span class="line">dialog = <span class="keyword">new</span> AlertDialog.Builder(<span class="keyword">this</span>)</span><br><span class="line">    .setTitle(<span class="string">&quot;Dialog&quot;</span>)</span><br><span class="line">    .setMessage(<span class="string">&quot;Quit?&quot;</span>)</span><br><span class="line">    .setIcon(R.mipmap.ic_launcher)</span><br><span class="line">    .setPositiveButton(<span class="string">&quot;Yes&quot;</span>, <span class="keyword">null</span>)<span class="comment">// 第二个参数为是否设置监听， 没有则设为 &quot;null&quot;</span></span><br><span class="line">    .setNegativeButton(<span class="string">&quot;NO&quot;</span>, <span class="keyword">null</span>)</span><br><span class="line">    .create();</span><br><span class="line">dialog.show();</span><br></pre></td></tr></table></figure></li><li><p>单选对话框：setSingleChoiceItems()</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> AlertDialog.Builder(<span class="keyword">this</span>)</span><br><span class="line">    .setTitle(<span class="string">&quot;Select&quot;</span>)</span><br><span class="line">    .setIcon(R.mipmap.ic_launcher)</span><br><span class="line"><span class="comment">// 第 1 个参数建立数组，用于显示选项内容</span></span><br><span class="line"><span class="comment">// 第 2 个参数设置是否默认选中， “O&quot; 表示默认选中第一个选项， 如果默认未选中，参数填写－1</span></span><br><span class="line"><span class="comment">// 第 3 个参数是设立监听</span></span><br><span class="line">    .setSingleChoiceItems(<span class="keyword">new</span> String[] &#123; <span class="string">&quot;Male&quot;</span>, <span class="string">&quot;Female&quot;</span>&#125;, <span class="number">0</span>,</span><br><span class="line">        <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;&#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    .setPositiveButton(<span class="string">&quot;Sure&quot;</span>, <span class="keyword">null</span>);</span><br><span class="line">    .show();</span><br></pre></td></tr></table></figure></li><li><p>多选对话框：setMultiChoiceItems()</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> AlertDialog.Builder(<span class="keyword">this</span>)</span><br><span class="line">    .setTitle(<span class="string">&quot;Hobby&quot;</span>)</span><br><span class="line">    .setIcon(R.mipmap.ic_launcher)</span><br><span class="line"><span class="comment">// 第 1 个参数建立数组，用于显示选项内容</span></span><br><span class="line"><span class="comment">// 第 2 个参数是 boolean 数组，用来判断哪个选项需要勾选，如果没有选项选中则用 “null&quot;。定义的长度要对应第 1 个参数设置的选项个数,如 new boolean[]&#123;true, true, true, true)</span></span><br><span class="line"><span class="comment">// 第 3 个参数是建立监听</span></span><br><span class="line">    .setMultiChoiceItems(<span class="keyword">new</span> String[]&#123;<span class="string">&quot;Travle&quot;</span>, <span class="string">&quot;Food&quot;</span>, <span class="string">&quot;Car&quot;</span>, <span class="string">&quot;Pet&quot;</span>&#125;), <span class="keyword">null</span>, <span class="keyword">null</span>)</span><br><span class="line">    .setPositiveButton(<span class="string">&quot;Sure&quot;</span>, <span class="keyword">null</span>)</span><br><span class="line">    .show();</span><br></pre></td></tr></table></figure></li><li><p>进度条对话框</p><p>  Deprecated, to <code>&lt;ProgressBar&gt;</code></p></li><li><p>消息对话框：Toast</p><p>  消息对话框 ( Toast ) 是 Android 系统提供的轻量级信息提醒机制，用于向用户提示即时消息，Toast 对话显示在应用程序界面的最上层，显示—段时间后自动消失，不会打断当前操作，也不获得焦点。</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第 1 个参数为当前类的 Context( 上下文 ）对象</span></span><br><span class="line"><span class="comment">//第 2 个参数为文本显示内容</span></span><br><span class="line"><span class="comment">//第 3 个参数为 Toast 显示的时间，有Toast.LENGTH_SHORT 和 ToastLENGTH_LONG</span></span><br><span class="line">Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;Hello, Toast&quot;</span>, Toast.LENGTH_SHORT).show();</span><br></pre></td></tr></table></figure></li><li><p>自定义对话框</p><ul><li>创建自定义对话框布局</li><li>创建自定义对话框：创建—个类继承自 Dialog 类，引入自定义对话框布局</li><li>使用自定义对话框</li></ul></li></ul><h5 id="样式和主题"><a href="#样式和主题" class="headerlink" title="样式和主题"></a>样式和主题</h5><p>样式 ( style ) 是包含一种或多种控件的属性集合。Android 中的样式类似于网页中 CSS 样式，可以让设计与内容分离。</p><ul><li><p>创建样式：在 <code>res\values\style</code> 目录创建 <code>.xml</code> 文件，<code>&lt;resource&gt;</code> 是根标签；<code>&lt;style&gt;</code> 标签定义样式，它包含多个 <code>&lt;item&gt;</code> 来声明样式名称和属性，parent 属性表示继承某个样式</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;textStyle_one&quot;</span>&gt;</span> </span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:layout_width&quot;</span>&gt;</span>match_parent<span class="tag">&lt;/<span class="name">item</span>&gt;</span> </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:layout_height&quot;</span>&gt;</span>wrap_content<span class="tag">&lt;/<span class="name">item</span>&gt;</span> </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:textColor&quot;</span>&gt;</span>#999999<span class="tag">&lt;/<span class="name">item</span>&gt;</span> </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:textSize&quot;</span>&gt;</span>35sp<span class="tag">&lt;/<span class="name">item</span>&gt;</span> </span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;textStyle_two&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;@style/textStyle_one&quot;</span>&gt;</span> </span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:textSize&quot;</span>&gt;</span>25sp<span class="tag">&lt;/<span class="name">item</span>&gt;</span> </span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>引用样式：以 <code>style=&quot;@style/xxx&quot;</code> 引用</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span> </span></span><br><span class="line"><span class="tag"><span class="attr">style</span>=<span class="string">&quot;@style/textStyle_one&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>主题 (theme) 是应用到整个 Activity 和 Application 的样式，当主题和样式中的属性发生冲突时，样式的优先级要高于主题。</p></li><li><p>创建主题：主题与样式在代码结构上是一样的，在定义主题时，需要用 parent 属性继承 <code>ThemeAppCompat.Light.DarkActionBar</code> 保证它的兼容性，否则运行时会出现异常</p>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;grayTheme&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;ThemeAppCompat.Light.DarkActionBar&quot;</span>&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>= <span class="string">&quot;android:background&quot;</span>&gt;</span>#999999<span class="tag">&lt;/<span class="name">item</span>&gt;</span> </span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>引用主题：</p><ul><li><p>在 AndroidManifest.xml 文件中引用自定义主题：</p><ul><li><p>在 <code>&lt;activity&gt;</code> 标签中添加 <code>android:theme=&quot;@style/xxxx&quot;</code> 属性，此处是改变当前界面的主题样式 </p>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">activity</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">&quot;.MainActivity&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">&quot;@style/grayTheme&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>改变 <code>&lt;application&gt;</code> 标签 <code>android:theme</code> 属性，此处是整个应用程序主题的样式</p></li></ul></li><li><p>在 Activity 代码中引用自定义主题：在 onCreate() 方法内 setContentView() 方法之后添加 setTheme() 方法，</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setTheme(R.style.grayTheme);</span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="国际化（i18n）"><a href="#国际化（i18n）" class="headerlink" title="国际化（i18n）"></a>国际化（i18n）</h5><p>国际化的应用具备支持多种语言功能，能被不同国家或地区用户访问，提供符合访问者阅读习惯的页面和数据。</p><p>实现国际化：</p><ul><li><p>在程序的 <code>res/values/</code> 目录下创建用于国际化的文件 <code>strings.xml</code>，单击右键，选择 New -&gt; Values resource file 选项，在 Available qualifiers 区域中选择 Locale, 单击中间的向右图标，在 Language 语言区域中选择语言， 在 Specific Region Only 中选择区域，此时 Directory name 名称会根据选择的语言以及区域自动变化，其命名规则为 <code>values­-语言代码－r国家或地区代码</code>。由于每个程序都自带一个 strings.xml 文件，Android Studio 会自动创建一个文件夹存放这些同名文件，并且会根据语言和地区区分这些文件。</p></li><li><p>来在创建好的 strings.xml 文件中编写支持的语言内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;l.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;app_name&quot;</span>&gt;</span>安卓＿il8n<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;hello_world&quot;</span>&gt;</span>你好，世界！&lt;／string&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>通过 <code>android:text=&quot;@string/xxxx&quot;</code> 引用 strings.xml 中定义的文本信息</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span> </span></span><br><span class="line"><span class="tag"><span class="attr">android:text</span>=<span class="string">&quot;@string/hello_world&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>改变模拟器语言为对应的语言，即可实现国际化。其原理是，当用 <code>＠string/xxxx</code> 方式引用一个文本资源时，Android 系统会首先判断手机设置的语言和地区，然后通过这些信息寻找 values 目录下对应的 strings.xml 文件，引用其中的内容。</p></li></ul><h5 id="程序调试"><a href="#程序调试" class="headerlink" title="程序调试"></a>程序调试</h5><ul><li>单元测试：是指在应用程序开发过程中对最小的功能模块进行测试，可以在完成某个功能之后对该功能进行单独测试， 而不需要把应用程序安装到手机或启动模拟器再对各项功能进行测试，这样会提高开发效率和质量。在项目创建时 Android Studio 就巳经默认创建了一个androidTest 包和 ApplicationTest 类，所有测试的功能模块写入此类即可。所有的测试方法必须以 test 开头。</li><li>LogCat：是 Android 中的命令行工具，用于获取程序从启动到关闭的日志信息。Android 采用 <code>android.util.Log</code> 类的静态方法实现输出程序信息。Log 类所输出的日志内容级别由低到高分别是 Verbose、Debug 、Info、 Warning、Error、Assert，分别对应 Log 类中的 Log.v()、Log.d()、Log.i()、Log.w()、Log.e() 静态方法，Assert 没有对应的静态方法。</li><li>Debug：是跟踪程序流程的一种模式，可以通过在代码处设置断点， 再利用 Debug 窗口查看。所谓断点是在代码行加入停止点，当程序执行到该行时会暂停。</li></ul><h3 id="Activity"><a href="#Activity" class="headerlink" title="Activity"></a>Activity</h3><h5 id="Activity-的创建"><a href="#Activity-的创建" class="headerlink" title="Activity 的创建"></a>Activity 的创建</h5><p>一个应用程序通常包含多个 Activity, 每个 Activity 负责管理一个用户界面。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Activity 需要在 AndroidManifest.xml 文件（清单文件）中注册，添加一行 <code>&lt;activity android:name=&quot; .MainActivity&quot;/&gt;</code> 代码。</p><h5 id="Activity-的生命周期"><a href="#Activity-的生命周期" class="headerlink" title="Activity 的生命周期"></a>Activity 的生命周期</h5><p>Activity 的生命周期分为 5 种状态：</p><ul><li>启动状态：Activity 的启动状态很短暂<ul><li>onCreate() 方法</li><li>onStart() 方法</li><li>onRestart() 方法</li></ul></li><li>运行状态：Activity 在此状态时处于屏幕最前端，它是可见、有焦点的，可以与用户进行交互<ul><li>onResume() 方法</li></ul></li><li>暂停状态：无法获取焦点，用户对它操作没有响应，此时就处于暂停状态<ul><li>onPause() 方法</li></ul></li><li>停止状态：当 Activity 完全不可见时<ul><li>onStop() 方法</li></ul></li><li>销毁状态：被清理出内存<ul><li>onDestroy() 方法</li></ul></li></ul><p>横竖屏切换时的生命周期会有不同。</p><h5 id="Activity-的启动模式"><a href="#Activity-的启动模式" class="headerlink" title="Activity 的启动模式"></a>Activity 的启动模式</h5><p>Android 中，采用任务栈的形式来管理 Activity。这个栈又被称为返回栈，栈中 Activity 的顺序就是按照它们被打开的顺序依次存放。用户操作的永远是栈顶的 Activity。</p><p>Activity 启动模式：在 AndroidManifest.xml 中通过 <code>&lt;activity&gt;</code> 标签 android:launchMode 属性设置启动模式 </p><ul><li>standard 模式：每启动一个 Activity 就会在栈顶创建一个新的实例</li><li>singleTop 模式：判断要启动的 Activity 实例是否位于栈顶，如果位于栈顶则直接复用，否则创建新的实例</li><li>singleTask 模式：则每次启动 Activity 时，系统首先会检查栈中是否存在当前 Activity 实例，如果存在 则直接使用，并把当前 Activity 之上的所有实例全部出栈，否则重新创建一个实例</li><li>singlelnstance 模式： 每一个 Activity 独占一个任务栈。一种是要启动的 Activity 不存在，则系统会<br>先创建一个新的任务栈，然后再创建 Activity 实例； 一种是要启动的 Activity 已存在，则直接复用（<span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vRVgzMi9wLzQ2MjM3NjQuaHRtbA==">ref<i class="fa fa-external-link-alt"></i></span>）</li></ul><h5 id="Activity-之间的跳转"><a href="#Activity-之间的跳转" class="headerlink" title="Activity 之间的跳转"></a>Activity 之间的跳转</h5><p>Activity 之间的跳转通过 Intent 实现：</p><ul><li><p>显式意图：目标 Activity 需在 AndroidManifest.xml 注册了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 其中第1个参数为当前的 Activity 对象， 第2个参数为启动的目标 Activity</span></span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, ActivityName.class);</span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure></li><li><p>隐式意图：系统通过分析指定的属性信息，寻找目标 Activity</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(); </span><br><span class="line"><span class="comment">// 设置 action 动作，该动作要和清单文件中设置的一样</span></span><br><span class="line">intent.setAction(<span class="string">&quot;example.START_ACTIVITY&quot;</span>); </span><br><span class="line">startActivity(intent); </span><br></pre></td></tr></table></figure><p>在目标 Activity 的清单文件中配置 <code>&lt;intent-filter&gt;</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;example.MainActivity&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;example.START_ACTIVITY&quot;</span>/&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="Activity-中的数据传递"><a href="#Activity-中的数据传递" class="headerlink" title="Activity 中的数据传递"></a>Activity 中的数据传递</h5></li><li><p>数据传递：Intent 提供了一系列重载的 putExtra(String name, String value)方法，通过该方法可以将要传递的数据暂存到 Intent 中，然后从目标 Activity 中取出。</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, ActivityName.class); </span><br><span class="line">intent.putExtra(<span class="string">&quot;extra_key&quot;</span>, <span class="string">&quot;extra_data&quot;</span>); </span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = getIntent(); </span><br><span class="line">String extra_data = intent.getStringExtra(<span class="string">&quot;extra_key&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p>数据回传：startActivityForResult(Intent intent, int requestCode)方法在目标 Activity 销毁时返回一个结果给调用 Activity。</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, ActivityName.class); </span><br><span class="line"><span class="comment">// 第1个参数是 Intent 对象；第2个参数是请求码，用于判断数据的来源，输入一个唯一值即可</span></span><br><span class="line">startActivityForResult(intent, <span class="number">1</span>);</span><br></pre></td></tr></table></figure>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(); </span><br><span class="line">intent.putExtra(<span class="string">&quot;extra_key&quot;</span>, <span class="string">&quot;extra_data&quot;</span>); </span><br><span class="line"><span class="comment">// setResult(int resultCode, Intent intent)，resultCode 一般是 0 或 1</span></span><br><span class="line">setResult(l, intent) ;</span><br></pre></td></tr></table></figure><p>  在目标 Activity 被销毁之后会回调调用 Activity 的 onActivityResult()方法</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent intent)</span> </span>&#123; </span><br><span class="line">    <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, intent); </span><br><span class="line">    <span class="keyword">if</span> (requestCode == <span class="number">1</span>) &#123; </span><br><span class="line">        <span class="keyword">if</span> (resultCode == <span class="number">1</span>) &#123; </span><br><span class="line">            String string = intent.getStringExtra(<span class="string">&quot;extra_key&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  在一个 Activity 中可能多个调用 startActivityForResult()方法，每一个 Activity 返回的数据都会回调onActivityResult()方法，因此，要通过 requestCode 的值来判断数据来源。</p></li></ul><h3 id="数据存储"><a href="#数据存储" class="headerlink" title="数据存储"></a>数据存储</h3><h5 id="数据存储方式"><a href="#数据存储方式" class="headerlink" title="数据存储方式"></a>数据存储方式</h5><ul><li>文件存储：存储大数据，如文本、图片、音频等。</li><li>SharedPreferences：存储应用程序的各种配置信息，如用户名、密码等。</li><li>SOLite 数据库：作为复杂数据的存储引擎，可以存储用户信息等。</li><li>ContentProvider：用于应用程序之间的数据交换。</li><li>网络存储：通过网络提供的存储空间来存储／获取数据信息。</li></ul><h5 id="文件存储"><a href="#文件存储" class="headerlink" title="文件存储"></a>文件存储</h5><ul><li><p>内部存储：将应用程序数据以文件方式存储到设备的内部（默认位于 <code>data/data/&lt;packagename&gt;/files／</code> 下），文件为其所创建的应用程序私有，其他应用程序访问需要权限。应用程序卸载时，其内部存储文件也随之被删除。</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FileOutputStream fos = openFileOutput(String name, <span class="keyword">int</span> mode); </span><br><span class="line">FileinputStream fis = openFileInput(String name);</span><br></pre></td></tr></table></figure><p>  “mode” 是读写文件的方式：默认情况下任何应用创建的文件都是私有的</p><ul><li><p>MODE_PRIVATE: 该文件只能被当前程序读写</p></li><li><p>MODE_APPEND: 该文件的内容可以追加</p></li><li><p>MODE_WORLD_READABLE: 该文件的内容可以被其他程序读</p></li><li><p>MODE_WORLD_WRITEABLE: 该文件的内容可以被其他程序写</p><p>存储数据：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">String fileName = <span class="string">&quot;data.txt&quot;</span>;<span class="comment">// 文件名称</span></span><br><span class="line">String content = <span class="string">&quot;helloworld&quot;</span>;<span class="comment">// 保存数据</span></span><br><span class="line">FileOutputStream fos; </span><br><span class="line"><span class="keyword">try</span> &#123; </span><br><span class="line">    fos = openFileOutput(fileName, MODE_PRIVATE); </span><br><span class="line">    fos.write(content.getBytes());<span class="comment">// 将了数据写入文件中</span></span><br><span class="line">    fas.close(); <span class="comment">// 关闭输出流</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123; </span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>取出数据：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">String content = <span class="string">&quot;&quot;</span>; </span><br><span class="line">FileinputStream fis; </span><br><span class="line"><span class="keyword">try</span> &#123; </span><br><span class="line">    fis = openFileinput(<span class="string">&quot;data.txt&quot;</span>);<span class="comment">// 获得文件输入流对象</span></span><br><span class="line">    <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[fis.available()];<span class="comment">// 创建缓冲区，并获取文件长度</span></span><br><span class="line">    fis.read(buffer);<span class="comment">// 将文件内容读取到 buffer 缓冲区</span></span><br><span class="line">    content = <span class="keyword">new</span> String(buffer );<span class="comment">// 转换成字符串</span></span><br><span class="line">    fis.close();<span class="comment">// 关闭输入流</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123; </span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>外部存储：将文件存储到外部设备上，如 SD 卡（该文件通常位于 <code>mnt/sdcard</code> 下）。外部存储的文件被其他应用程序共享。</p><p>  向 SD 卡存储数据：</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">String state = Environment.getExternalStorageState();<span class="comment">// 获取外部设备</span></span><br><span class="line"><span class="keyword">if</span> (state.equals(Environment.MEDIA_MOUNTED)) &#123;<span class="comment">// 判断外部设备是否可用</span></span><br><span class="line">    File SDPath = Environment.getExternalStorageDirectory();<span class="comment">// 获取 SD 卡目录，deprecated</span></span><br><span class="line">    File file = <span class="keyword">new</span> File(SDPath, <span class="string">&quot;data.txt&quot;</span>); </span><br><span class="line">    String data = <span class="string">&quot;HelloWorld&quot;</span>; </span><br><span class="line">    FileOutputStream fos; </span><br><span class="line">    <span class="keyword">try</span> &#123; </span><br><span class="line">        fos = <span class="keyword">new</span> FileOutputStream(file); </span><br><span class="line">        fos.write(data.getBytes()); </span><br><span class="line">        fos.close();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123; </span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  从 SD卡 读取数据:</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">String state = Environment.getExternalStorageState(); </span><br><span class="line"><span class="keyword">if</span> (state.equals(Environment.MEDIA_MOUNTED)) &#123; </span><br><span class="line">    File SDPath = Environment.getExternalStorageDirectory(); </span><br><span class="line">    File file = <span class="keyword">new</span> File(SDPath, <span class="string">&quot;data.txt&quot;</span>); </span><br><span class="line">    FileinputStream fis; </span><br><span class="line">    <span class="keyword">try</span> &#123; </span><br><span class="line">        fis = <span class="keyword">new</span> FileinputStream(file); </span><br><span class="line">        BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(fis)); </span><br><span class="line">        String data = br.readLine();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123; </span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  读取 SD 卡需要在清单文件的 <code>&lt;manifest&gt;</code> 节点中添加读写权限：</p>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_EXTERNAL_STORAGE&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h5 id="XML-解析"><a href="#XML-解析" class="headerlink" title="XML 解析"></a>XML 解析</h5></li></ul><p>在 Android 中最常用的解析方式是 PULL 解析。</p><p>XmlPullParser 解析器的常用属性：</p><ul><li>XmlPullParser.START_DOCUMENT: XML 文档的开始</li><li>XmlPullParser.END_DOCUMENT: XML 文档的结束</li><li>XmlPullParser.START_TAG: 开始节点，带有 <code>＜ ＞</code> 的都是开始节点</li><li>XmlPullParser.END_TAG：结束节点，带有 <code>&lt;/ &gt;</code> 的都是结束节点</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">XmlPullParser parser = Xml.newPullParser();</span><br><span class="line">parser.setinput(is, <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line"><span class="keyword">int</span> type = parser.getEventType();</span><br><span class="line"><span class="keyword">while</span> (type != XmlPullParser.END_DOCUMENT) &#123;</span><br><span class="line">    <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">        <span class="keyword">case</span> XmlPullParser.START_TAG:</span><br><span class="line">            String temp = parser.nextText();<span class="comment">// 得到该 tag 节点中的内容</span></span><br><span class="line">            ...</span><br><span class="line">        <span class="keyword">case</span> XmlPullPaser.END_TAG:</span><br><span class="line">            ...</span><br><span class="line">    &#125;</span><br><span class="line">    type = parser.next();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="JSON-解析"><a href="#JSON-解析" class="headerlink" title="JSON 解析"></a>JSON 解析</h5><p>JSON 即 Java Script Object Notation，JSON 有两种数据结构：</p><ul><li><p>对象结构：以 “{“ 开始，以 “}” 结束。中间部分由 0 个或多个以 “,” 分隔的 key:value 对构成</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">key1:value1,</span><br><span class="line">key2:value2,</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>数组结构：以 “[“ 开始，以 “]” 结束。中间部分由 0 个或多个以 “,” 分隔的值组成</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    value1,</span><br><span class="line">    value2,</span><br><span class="line">    ...</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>JSON 解析：</p></li><li><p>使用内置的 org.json 包解析 JSON 数据</p><ul><li><p>使用 JSONObject 解析 JSON 对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">JSONObject jsonObj = new JSONObject(json);# json 是字符串</span><br><span class="line">String name = jsonObj.optString(<span class="string">&quot;name&quot;</span>); </span><br><span class="line"><span class="keyword">int</span> age = jsonObj.optInt(<span class="string">&quot;age&quot;</span>); </span><br><span class="line"><span class="keyword">boolean</span> married = jsonObj.optBoolean(<span class="string">&quot;married&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p>使用 JSONArray 解析 JSON 数组</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">JSONArray jsonArray = <span class="keyword">new</span> JSONArray(json); </span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = O; i &lt; jsonArray.length(); i++) &#123;</span><br><span class="line"><span class="keyword">int</span> age = jsonArray.optInt (i) ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>使用开源的 Gson 库解析 JSON 数据：需将 gson.jar 添加到项目中</p><ul><li><p>使用 Gson 解析 JSON 对象：需创建 JSON 数据对应的实体类，实体类中的成员名称与 JSON 数据的 key 值一致</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Gson gson = <span class="keyword">new</span> Gson(); </span><br><span class="line">Person person = gson.fromJson(json, Person.class);<span class="comment">// Person 为对应实体类</span></span><br></pre></td></tr></table></figure></li><li><p>使用 Gson 解析 JSON 数组</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[is.available()]; </span><br><span class="line">is.read(buffer); </span><br><span class="line">String json = <span class="keyword">new</span> String(buffer, <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">Gson gson = <span class="keyword">new</span> Gson(); </span><br><span class="line">Type listType = <span class="keyword">new</span> TypeToken&lt;List&lt;Interger&gt;&gt;()&#123;&#125;.getType();</span><br><span class="line">List&lt;Integer&gt; ages = gson.fromJson(json, listType);</span><br></pre></td></tr></table></figure><h5 id="SharedPreferences"><a href="#SharedPreferences" class="headerlink" title="SharedPreferences"></a>SharedPreferences</h5></li></ul></li></ul><p>SharedPreferences 通过 key/value 的形式将数据保存在 XML 文件中，该文件位于 <code>data/data/</code><br><code>&lt;packagename&gt;/shared_prefs</code> 文件夹中。value 值只能是 Float、Int、Long、Boolean、String、StringSet 类型数据。</p><ul><li><p>存储数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 参数 data 表示文件名， MODE_PRIVATE 表示文件操作模式</span></span><br><span class="line">SharedPreferences sp = getSharedPreferences(<span class="string">&quot;data&quot;</span>, MODE_PRIVATE); </span><br><span class="line">SharedPreferences.Editor editor = sp.edit ();<span class="comment">// 获取编辑器</span></span><br><span class="line">editor.putString(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;value&quot;</span>);<span class="comment">// 存入 String 类型数据</span></span><br><span class="line">editor.putlnt(<span class="string">&quot;age&quot;</span>, <span class="number">8</span>);<span class="comment">// 存入 Int 类型数据</span></span><br><span class="line">editor.remove(<span class="string">&quot;name&quot;</span>);<span class="comment">// 删除一条数据</span></span><br><span class="line">editor.clear();<span class="comment">// 删除所有数据</span></span><br><span class="line">editor.commit();<span class="comment">// 提交修改</span></span><br></pre></td></tr></table></figure></li><li><p>获取数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SharedPreferences sp = getSharedPreferences(<span class="string">&quot;data&quot;</span>, MODE_PRIVATE); </span><br><span class="line">String data = sp.getString(<span class="string">&quot;name&quot;</span>, <span class="string">&quot; &quot;</span>);<span class="comment">// 第二个参数为缺省值，如果不存在该 key, 将返回缺省值</span></span><br></pre></td></tr></table></figure><h3 id="SQLite-数据库"><a href="#SQLite-数据库" class="headerlink" title="SQLite 数据库"></a>SQLite 数据库</h3></li></ul><h5 id="SQLite-数据库简介"><a href="#SQLite-数据库简介" class="headerlink" title="SQLite 数据库简介"></a>SQLite 数据库简介</h5><p>SQLite 是 D.Richard Hipp 建立的公有领域项目，它的设计目标是嵌入式的。SQLite 是遵守 ACID 的关系型数据库管理系统。</p><p>SQLite 没有服务器进程，它通过文件保存数据，该文件是跨平台的。支持 null（零）、integer（整数）、real（浮点数字）、text（字符串文本）和 blob（二进制对象）5 种数据类型，其他数据类型在运算或保存时会转换成对应的 5 种数据类型。</p><h5 id="数据库的创建"><a href="#数据库的创建" class="headerlink" title="数据库的创建"></a>数据库的创建</h5><p>Android 系统推荐使用 SOLiteOpenHelper 的子类创建数据库</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyHelper</span> <span class="keyword">extends</span> <span class="title">SQLiteOpenHelper</span> </span>&#123; </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyHelper</span><span class="params">(Context context)</span> </span>&#123; </span><br><span class="line">        <span class="comment">// 分别为上下文对象、数据库名称、游标工厂（通常是 null）、数据库版本</span></span><br><span class="line"><span class="keyword">super</span>(context, <span class="string">&quot;example.db&quot;</span>, <span class="keyword">null</span>, <span class="number">2</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 数据库第一次被创建时调用该方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(SQLiteDatabase db)</span> </span>&#123; </span><br><span class="line"><span class="comment">// 初始化数据库的表结构， 执行一条建表的 SQL 语句</span></span><br><span class="line">db.execSQL(<span class="string">&quot;CREATE TABLE information(_id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(20), price INTEGER)&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 当数据库的版本号增加时调用</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onUpgrade</span><span class="params">(SQLiteDatabase db, <span class="keyword">int</span> oldVersion, <span class="keyword">int</span> newVersion)</span> </span>&#123; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="数据库的使用"><a href="#数据库的使用" class="headerlink" title="数据库的使用"></a>数据库的使用</h5><ul><li><p>SQLite 的基本操作</p><ul><li><p>增加一条数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(String name, String price)</span> </span>&#123; </span><br><span class="line">SQLiteDatabase db = helper.getWritableDatabase();</span><br><span class="line">ContentValues values = <span class="keyword">new</span> ContentValues();</span><br><span class="line">values.put(<span class="string">&quot;name&quot;</span>, name);</span><br><span class="line">values.put(<span class="string">&quot;price&quot;</span>, price); </span><br><span class="line">    <span class="comment">// 第一个参数表名，第二个参数为缺省值 null，第三个参数为 ContentValues 对象</span></span><br><span class="line"><span class="keyword">long</span> id = db.insert(<span class="string">&quot;information&quot;</span>, <span class="keyword">null</span>, values);</span><br><span class="line">db.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改一条数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">update</span><span class="params">(String name, String price)</span> </span>&#123; </span><br><span class="line">SQLiteDatabase db = helper.getWritableDatabase(); </span><br><span class="line">ContentValues values = <span class="keyword">new</span> ContentValues(); </span><br><span class="line">values.put(<span class="string">&quot;price&quot;</span>, price); </span><br><span class="line">    <span class="comment">// 第一个参数表名，第二个参数 ContentValues 对象，第三个参数 where 语句，第四个参数字符串会替换掉 where 条件中的 &quot;?&quot;</span></span><br><span class="line"><span class="keyword">int</span> number = db.update(<span class="string">&quot;information&quot;</span>, values, <span class="string">&quot;name =?&quot;</span>, <span class="keyword">new</span> String[]&#123; name &#125;); </span><br><span class="line">db.close () ; </span><br><span class="line"><span class="keyword">return</span> number;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>删除一条数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(<span class="keyword">long</span> id)</span> </span>&#123; </span><br><span class="line">SQLiteDatabase db = helper.getWritableDatabase(); </span><br><span class="line"><span class="keyword">int</span> number = db.delete(<span class="string">&quot;information&quot;</span>, <span class="string">&quot;_id=?&quot;</span>, <span class="keyword">new</span> String[]&#123; id+<span class="string">&quot;&quot;</span> &#125;); </span><br><span class="line">db.close(); </span><br><span class="line"><span class="keyword">return</span> number;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>查询一条数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">find</span><span class="params">(<span class="keyword">long</span> id)</span> </span>&#123; </span><br><span class="line">SQLiteDatabase db = helper.getReadableDatabase();</span><br><span class="line">    <span class="comment">// 第一个参数表名，第二个参数查询的列名，第三个参数查询条件子句，第四个参数查询子句对应的条件值，第五个参数分组方式，第六个参数 having 条件，第七个参数排序方式</span></span><br><span class="line">Cursor cursor = db.query(<span class="string">&quot;information&quot;</span>, <span class="keyword">null</span>, <span class="string">&quot;_id=?&quot;</span>, <span class="keyword">new</span> String[]&#123; id+<span class="string">&quot;&quot;</span> &#125;, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>); </span><br><span class="line"><span class="keyword">boolean</span> result = cursor.moveToNext(); </span><br><span class="line">cursor.close();</span><br><span class="line">db.close(); </span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用 SQL 语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 增加一条数据</span></span><br><span class="line">db.execSQL(<span class="string">&quot;insert into information(name, price) values (?, ?)&quot;</span>, <span class="keyword">new</span> Object[]&#123; name, price &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改一条数据</span></span><br><span class="line">db.execSQL(<span class="string">&quot;update information set name= ? where price = ?&quot;</span>, <span class="keyword">new</span> Object[]&#123; name , price &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除一条数据</span></span><br><span class="line">db.execSQL(<span class="string">&quot;delete from information where _id = 1&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行查询的 SQL 语句</span></span><br><span class="line">Cursor cursor = db.rawQuery(<span class="string">&quot;select * from person where name= ?&quot;</span>, <span class="keyword">new</span> String[]&#123; name &#125;);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>SQLite 中的事务：事务由一条或多条 SQL 语句组成，如果其中有一条语句无法执行，那么所有的语句都不会执行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">MyHelper helper = <span class="keyword">new</span> MyHelper(getContext());</span><br><span class="line">SQLiteDatabase db = helper.getWritableDatabase(); </span><br><span class="line"><span class="comment">// 开始数据库的事务</span></span><br><span class="line">db.beginTransaction(); </span><br><span class="line"><span class="keyword">try</span> &#123; </span><br><span class="line">db.execSQL(<span class="string">&quot;update person set account = account-1000 where name = ?&quot;</span>, <span class="keyword">new</span> Object[]&#123; <span class="string">&quot;zhangsan&quot;</span> &#125;); </span><br><span class="line">db.execSQL(<span class="string">&quot;update person set account = account+lOOO where name = ?&quot;</span>, <span class="keyword">new</span> Object[]&#123; <span class="string">&quot;wangwu&quot;</span> &#125;) ; </span><br><span class="line"><span class="comment">// 标记数据库事务执行成功</span></span><br><span class="line">db.setTransactionSuccessful(); </span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123; </span><br><span class="line">Log.i( <span class="string">&quot;事务处理失败&quot;</span>, e.toString());</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="comment">// 检查是否有事务执行成功标记，有则提交数据，无则回滚数据</span></span><br><span class="line">db.endTransaction(); </span><br><span class="line">db.close(); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="数据展示控件"><a href="#数据展示控件" class="headerlink" title="数据展示控件"></a>数据展示控件</h5></li></ul><p>ListView 是一个列表视图，由很多 Item（条目）组成，每个 Item 的布局都相同，这个 Item 布局会单独使用一个 XML 进行定义。</p><p>常用数据适配器：使用 ListView 控件需要进行数据适配，在进行数据适配时会用到数据适配器，数据适配器将复杂的数据转换成用户可以接受的方式呈现</p><ul><li><p>BaseAdapter：是一个抽象类</p><table><thead><tr><th>方法名称</th><th>功能描述</th></tr></thead><tbody><tr><td>public int getCount()</td><td>得到 Item 条目的总数</td></tr><tr><td>public Object getltem(int position)</td><td>根据 position（ 位置 ）得到某个 Item 的对象</td></tr><tr><td>public long getItemId(int position)</td><td>根据 position（ 位置 ）得到某个 Item 的 id</td></tr><tr><td>public View getView(int position, View convertView, ViewGroup parent)</td><td>得到相应 position 对应的 Item 视图，position 是当 Item 的位置，conbertView 用于复用旧视图，parent 用于加载 XML 布局</td></tr></tbody></table></li><li><p>SimpleAdapter：SimpleAdapter 继承自 BaseAdapter，使用 SimpleAdapter 只需要在构造方法里传入相应的参数即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SimpleAdapter</span><span class="params">(Context context, List&lt;? extends Map&lt;String, ?&gt;&gt; data, <span class="keyword">int</span> resource , String[] from, <span class="keyword">int</span>[] to)</span></span>;</span><br></pre></td></tr></table></figure><ul><li>Context context: Context 上下文对象</li><li><code>List&lt;? extends Map&lt;String, ?&gt;&gt;</code> data：data 中的每一项对应着 ListView 中的每一项的数据</li><li>int resource: Item 布局的资源 id</li><li>String[] from: Map 集合里面的 key 值</li><li>int[] to： Item 布局相应的控件 id</li></ul></li><li><p>ArrayAdapter：与 SimpleAdapte 类似</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ArrayAdapter</span><span class="params">(Context context, <span class="keyword">int</span> resource)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ArrayAdapter</span><span class="params">(Context context, <span class="keyword">int</span> resource, <span class="keyword">int</span> textViewResourceId)</span></span>; </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ArrayAdapter</span><span class="params">(Context context, <span class="keyword">int</span> resource, T[] objects)</span></span>; </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ArrayAdapter</span><span class="params">(Context context, <span class="keyword">int</span> resource, <span class="keyword">int</span> textViewResourceId, T[] objects)</span></span>; </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ArrayAdapter</span><span class="params">(Context context, <span class="keyword">int</span> resource, List&lt;T&gt; objects)</span></span>; </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ArrayAdapter</span><span class="params">(Context context, <span class="keyword">int</span> resource, <span class="keyword">int</span> textViewResourceId, List&lt;T&gt; objects)</span></span>;</span><br></pre></td></tr></table></figure><ul><li>Context context: Context 上下文对象</li><li>int resource：Item 布局的资源 id</li><li>int textViewResourceId: Item 布局中相应 TextView 的 id</li><li>T[] objects: 需要适配的数据数组，数组类型数据</li><li><code>List&lt;T&gt; objects</code>: 需要适配的数据数组，List 类型数据</li></ul></li></ul><p>ListView 的优化：</p><ul><li><p>复用 convertView：在使用 ListView 展示数据时需要创建对应的 Item 条目展示每条数据。如果展示的数据有成千上万条，那么就需要创建成千上万个 Item, 这样会大大增加内存的消耗。解决办法是底部滑入的 Item 复用顶部划出的 Item</p></li><li><p>使用 ViewHolder 类：在加载 Item 布局时，会使用 findViewById(）方法找到 Item 布局中的各个控件，在每一次加载新的 Item 数据时都会进行控件寻找，这会产生耗时操作。解决办法是将要加载的子 View 放在 ViewHolder 类中，当第一次创建 convertView 时将这些控件找出，在第二次重用 convertView 时就可直接通过 convertView 中的 getTag(）方法获得这些控件</p></li><li><pre><code class="java">public View getView(int position, View convertView, ViewGroup parent) &#123;    ViewHolder holder;     if (convertView == null) &#123;         convertView = LayoutInflater.from(getApplicationContext()).inflate(R.layout.list_item, parent，false);        holder = new ViewHolder();         holder.mTextView = (TextView) convertView.findViewById(R.id.itern_tv);         holder.imageView = (ImageView) convertView.findViewById(R.id.itern_image);         convertView.setTag(holder);    &#125; else &#123;         holder = (ViewHolder) convertView.getTag();    &#125;    holder.mTextView.setText(names[position]);    holder.imageView.setBackgroundResource(icons[position]);    return convertView; &#125;class ViewHolder &#123;     TextView mTextView;     ImageView imageView;&#125;<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### BroadcastReceiver（广播接收者）</span><br><span class="line"></span><br><span class="line">通过广播接收者可以监听系统中的广播消息，并实现在不同组件之间的通信。</span><br><span class="line"></span><br><span class="line">##### 广播接收者入门</span><br><span class="line"></span><br><span class="line">广播接收者的静态注册：在清单文件进行注册并指定要接收的广播事件。静态注册的特点是无论应用程序是否处于运行状态，广播接收者都会对程序进行监听</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;xml</span><br><span class="line">&lt;application&gt; </span><br><span class="line">    &lt;!-- Exported 复选框用于选择是否接收当前程序之外的广播，Enabled 复选框用于选择广播接收者是否可以由系统实例化 --&gt;</span><br><span class="line">&lt;receiver</span><br><span class="line">android:name&#x3D;&quot;.MyReceiver&quot; </span><br><span class="line">android:enabled&#x3D;&quot;true&quot; </span><br><span class="line">android:exported&#x3D;&quot;true&quot;&gt;</span><br><span class="line">&lt;intent-filter&gt; </span><br><span class="line">&lt;action android:name&#x3D;&quot;android.provider.Telephony.SMS_RECEIVED&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;intent-filter&gt;</span><br><span class="line">    &lt;&#x2F;receiver&gt;</span><br><span class="line">&lt;&#x2F;application&gt;</span><br></pre></td></tr></table></figure>广播接收者的动态注册：动态注册的广播接收者的生命周期依赖于注册广播的组件，当组件销毁时，广播接收者也随之被移除</code></pre></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span> </span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedinstanceState)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>.onCreate(savedinstanceState); </span><br><span class="line">MyReceiver receiver = <span class="keyword">new</span> MyReceiver(); </span><br><span class="line">String action = <span class="string">&quot;android.provider.Telephony.SMS_RECEIVED&quot;</span>; </span><br><span class="line">IntentFilter intentFilter = <span class="keyword">new</span> IntentFilter(action);</span><br><span class="line">registerReceiver(receiver, intentfilter);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span> </span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>.onDestroy(); </span><br><span class="line"><span class="comment">// 当 Activity 销毁时取消注册 Broadca stReceiver</span></span><br><span class="line">unregisterReceiver(receiver);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建一个类继承自 BroadcastReceiver 类，重写 onReceive()方法，在方法中处理广播事件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyReceiver</span><span class="params">()</span></span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="meta">@Override</span> </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="自定义广播"><a href="#自定义广播" class="headerlink" title="自定义广播"></a>自定义广播</h5><p>自定义广播发送消息会储存到公共消息区中，公共消息区中如果存在对应的广播接收者，就会及时地接收这条信息。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent();</span><br><span class="line"><span class="comment">// 自定义广播的事件类型</span></span><br><span class="line">intent.setAction(<span class="string">&quot;Help_Stitch&quot;</span>);</span><br><span class="line"><span class="comment">// 发送广播</span></span><br><span class="line">sendBroadcast(intent);</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">&quot;.MyBroadcastReceiver&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;Help_Stitch&quot;</span>/&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="广播的类型"><a href="#广播的类型" class="headerlink" title="广播的类型"></a>广播的类型</h5><p>无序广播：发送广播时，所有监听这个广播的广播接收者都会接收到此广播消息，但接收和执行的顺序不确定。无法被拦截。</p><p>有序广播：按照接收者声明的优先级别被依次接收。通过 abortBroadcast()方法拦截有序广播。在 <code>&lt;intent-filter&gt;</code> 标签中使用 priority 属性设置优先级别，属性值越大优先级越高。如果两个广播接收者的优先级相同，则先注册的广播接收者优先级高。两个程序监听了同一个广播事件，同时都设置了优先级属性，则先安装的程序优先接收。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent();</span><br><span class="line">intent.setAction(<span class="string">&quot;Intercept_Stitch&quot;</span>);</span><br><span class="line"><span class="comment">// 发送有序广播，第 2 个参数指定接收者的权限</span></span><br><span class="line">sendOrderedBroadcast(intent , <span class="keyword">null</span>);</span><br></pre></td></tr></table></figure><p>指定广播接收者：保证一个广播接收者必须接收到此广播， 无论此广播接收者的优先级高低</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// receiver 即指定广播接收者</span></span><br><span class="line">sendOrderedBroadcast(intent, <span class="keyword">null</span>, receiver, <span class="keyword">null</span>, <span class="number">0</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br></pre></td></tr></table></figure><h3 id="Service（服务）"><a href="#Service（服务）" class="headerlink" title="Service（服务）"></a>Service（服务）</h3><p>Service（服务）是一个即使切换到另一个程序依旧运行在后台的用户组件，没有用户界面。</p><h5 id="服务的创建"><a href="#服务的创建" class="headerlink" title="服务的创建"></a>服务的创建</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="meta">@Override</span> </span><br><span class="line"><span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">application</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- enabled 属性表示系统是否能够实例化该组件，exported 属性表示该服务是否能够被其他应用程序组件调用或交互 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">service</span> </span></span><br><span class="line"><span class="tag"><span class="attr">android:name</span>=<span class="string">&quot;.MyService&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:enabled</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="服务的生命周期"><a href="#服务的生命周期" class="headerlink" title="服务的生命周期"></a>服务的生命周期</h5><ul><li><p>通过 startService()方法启动服务时，执行的生命周期方法为 onCreate()、onStartCommand()，然后服务处于运行状态，直到自身调用 stopSelf()方法或者其他组件调用 stopService()方法时服务停止，执行 onDestory()方法销毁服务</p></li><li><p>通过 bindService()方法启动服务时，执行的生命周期方法为 onCreate()、onBind()，然后服务处于运行状态，直到客户端调用 unBindService()方法执行 onUnbind()方法断开服务绑定，执行 onDestory()方法销毁服务</p></li></ul><h5 id="服务的启动方式"><a href="#服务的启动方式" class="headerlink" title="服务的启动方式"></a>服务的启动方式</h5><p>startService 方式启动：服务会长期在后台运行，并且服务的状态与开启者的状态没有关系，即使启动服务的组件已经被销毁，服务也会依旧运行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 开启服务</span></span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, MyService.class); </span><br><span class="line">startService(intent);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭服务</span></span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, MyService.class); </span><br><span class="line">stopService(intent);</span><br></pre></td></tr></table></figure><p>bindService 方式启动：服务与组件绑定，允许组件与服务交互，多个组件可以绑定一个服务，当组件销毁后服务也会随之解绑销毁</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">MyConn</span> <span class="keyword">implements</span> <span class="title">ServiceConnection</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 当服务连接时调用的方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceConnected</span><span class="params">(ComponentName name, IBinder service)</span> </span>&#123; </span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 当服务失去连接时调用的方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceDisconnected</span><span class="params">(ComponentName name)</span> </span>&#123; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 绑定服务</span></span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, MyService.class);</span><br><span class="line">MyConn myconn = <span class="keyword">new</span> MyConn();</span><br><span class="line"><span class="comment">// 第一个参数用于指定要启动的 Service</span></span><br><span class="line"><span class="comment">// 第二个参数为 ServiceConnection 对象，用于监听调用者与 Service 之间的连接状态</span></span><br><span class="line"><span class="comment">// 第三个参数指定为 0, 不自动创建 Service；指定为 BIND_AUTO_CREATE, 自动创建 Service</span></span><br><span class="line">bindService(intent, myconn, BIND_AUTO_CREATE);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解绑服务</span></span><br><span class="line">unbindService(myconn);</span><br></pre></td></tr></table></figure><h5 id="服务的通信"><a href="#服务的通信" class="headerlink" title="服务的通信"></a>服务的通信</h5><p>本地服务通信是指应用程序内部的通信，远程服务通信是指两个应用程序之间的通信。须保证服务是以绑定方式开启。</p><p>本地服务通信：Service 类的 onBind()方法返回一个 IBinder 对象，IBinder 对象会作为参数传递给 ServiceConnection 类中的 onServiceConnected(ComponentName name,IBinder service)方法，这样访问者就可以通过 IBinder 对象与 Service 进行通信。</p><p>远程服务通信：远程服务通信通过 AIDL(Android Interface Definition Language) 实现。</p><h3 id="ContentProvider（内容提供者）"><a href="#ContentProvider（内容提供者）" class="headerlink" title="ContentProvider（内容提供者）"></a>ContentProvider（内容提供者）</h3><h5 id="内容提供者简介"><a href="#内容提供者简介" class="headerlink" title="内容提供者简介"></a>内容提供者简介</h5><p>B 程序通过 Context 中的 getContentResolver()方法获取 ContentResolver 类访问 A 程序通过 ContentProvider 共享的数据。</p><p>ContentResolver 以 Uri 的形式对外提供数据增、删、改、查操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">content:&#x2F;&#x2F;com.example.mycontentprovider&#x2F;person</span><br></pre></td></tr></table></figure><ul><li>scheme：”content://“，是一个标准的前缀</li><li>authority：”com.example.mycontentprovider”，是在创建内容提供者时指定的 authorities 属性值，主要用来区分不同的应用程序，一般采用程序包名</li><li>path：”/person”，代表资源或者数据</li></ul><h5 id="内容提供者的创建"><a href="#内容提供者的创建" class="headerlink" title="内容提供者的创建"></a>内容提供者的创建</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyContentProvider</span> <span class="keyword">extends</span> <span class="title">ContentProvider</span> </span>&#123; </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyContentProvider</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 在内容提供者创建时调用</span></span><br><span class="line"><span class="meta">@Override</span> </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 返回指定 Uri 代表的数据的 MIME 类型</span></span><br><span class="line">    <span class="meta">@Override</span> </span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getType</span><span class="params">(Uri uri)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 增</span></span><br><span class="line"><span class="meta">@Override</span> </span><br><span class="line"><span class="function"><span class="keyword">public</span> Uri <span class="title">insert</span><span class="params">(Uri uri, ContentValues values)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 删</span></span><br><span class="line">    <span class="meta">@Override</span> </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(Uri uri, String selection, String[] selectionArgs)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 改</span></span><br><span class="line"><span class="meta">@Override</span> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Cursor <span class="title">query</span><span class="params">(Uri uri, String[] projection, String selection, String [] selectionArgs, String sortOrder)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 查</span></span><br><span class="line"><span class="meta">@Override</span> </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">update</span><span class="params">(Uri uri, ContentValues values, String selection, String[] select)</span> </span>&#123; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">application</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">provider</span> </span></span><br><span class="line"><span class="tag"><span class="attr">android:name</span>=<span class="string">&quot;.MyContentProvider&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:authorities</span>=<span class="string">&quot;com.example.mycontentprovider&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">android:enabled</span>=<span class="string">&quot;true&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">provider</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="内容提供者的使用"><a href="#内容提供者的使用" class="headerlink" title="内容提供者的使用"></a>内容提供者的使用</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将字符串转化成 Uri 对象</span></span><br><span class="line">Uri uri = Uri.parse(<span class="string">&quot;content://com.example.mycontentprovider/person&quot;</span>); </span><br><span class="line"><span class="comment">// 获取到 ContentResolver 对象</span></span><br><span class="line">ContentResolver resolver = context.getContentResolver(); </span><br><span class="line"><span class="comment">// 通过 ContentResolver 对象查询数据</span></span><br><span class="line">Cursor cursor = resolver.query(uri , <span class="keyword">new</span> String[]&#123;<span class="string">&quot;address&quot;</span>, <span class="string">&quot;date&quot;</span>, <span class="string">&quot;type&quot;</span>, <span class="string">&quot;body&quot;</span>&#125;, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>); </span><br><span class="line"><span class="keyword">while</span> (cursor.moveToNext()) &#123;</span><br><span class="line">String address = cursor.getString(<span class="number">0</span>); </span><br><span class="line"><span class="keyword">long</span> date = cursor.getLong(<span class="number">1</span>); </span><br><span class="line"><span class="keyword">int</span> type = cursor.getint(<span class="number">2</span>); </span><br><span class="line">String body = cursor.getString(<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line">cursor.close();</span><br></pre></td></tr></table></figure><p>工具类 UriMatcher 用于匹配 Uri：</p><ul><li>public UriMatcher(int code)：创建 UriMatcher 对象时调用，参数通常使用 UriMatcher.NO_MATCH, 表示路径不满足条件返回－1</li><li>public void addURI(String authority, String path, int code)：添加一组匹配规则，authority 即 Uri 的 authoritites 部分，path 即 Uri 的 path 部分， code 即 Uri 匹配成功后返回的匹配码</li><li>public int match(Uri uri)：匹配 Uri，与 addURI(）方法相对应，匹配成功则返回 addURI()方法中传入的参数 code 的值</li></ul><h5 id="内容观察者的使用"><a href="#内容观察者的使用" class="headerlink" title="内容观察者的使用"></a>内容观察者的使用</h5><p>B 程序操作 A 程序中的数据时，A 程序的 ContentProvider 调用 ContentResolver 的 notifyChange()方法向 “消息中心” 发送数据变化的消息，C 程序收到消息，就会触发 ContentObserver 的 onChange()方法。</p><p>在 ContentProvider 中调用 ContentResolver 的 notifyChange()方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 第一个参数表示更改内容的 Uri 对象 ， 第二个参数表示指定某个观察者接收消息</span></span><br><span class="line">getContext().getContentResolver().notifyChange(PersonDao.messageuri, <span class="keyword">null</span>);</span><br></pre></td></tr></table></figure><p>注册内容观察者：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ContentResolver resolver = getContentResolver(); </span><br><span class="line">Uri uri = Uri.parse(<span class="string">&quot;content://com.example.mycontentprovider/person&quot;</span>) ; </span><br><span class="line">resolver.registerContentObserver(uri, <span class="keyword">true</span>, <span class="keyword">new</span> MyObserver(<span class="keyword">new</span> Handler()));</span><br></pre></td></tr></table></figure><h3 id="网络编程"><a href="#网络编程" class="headerlink" title="网络编程"></a>网络编程</h3><h5 id="HTTP-协议简介"><a href="#HTTP-协议简介" class="headerlink" title="HTTP 协议简介"></a>HTTP 协议简介</h5><p>HTTP(Hyper Text Transfer Protocol)即超文本传输协议，是一种请求／响应式的协议。</p><h5 id="访问网络"><a href="#访问网络" class="headerlink" title="访问网络"></a>访问网络</h5><p>GET 方式提交数据：向服务器提交的参数跟在请求 URL 后面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将用户名和密码拼在指定资源路径后面， 并对用户名和密码进行编码</span></span><br><span class="line">String path = <span class="string">&quot;http://192.168.1.100:8080/web/LoginServlet?username=&quot;</span> + URLEncoder.encode(<span class="string">&quot;zhangsan&quot;</span>) + <span class="string">&quot;&amp;password=&quot;</span> + URLEncoder.encode(<span class="string">&quot;123&quot;</span>); </span><br><span class="line">URL url = <span class="keyword">new</span> URL(path);<span class="comment">// 创建 URL 对象</span></span><br><span class="line">HttpURLConnection conn = (HttpURLConnection) url.openConnection(); </span><br><span class="line">conn.setRequestMethod(<span class="string">&quot;GET&quot;</span>);<span class="comment">// 设置请求方式</span></span><br><span class="line">conn.setConnectTimeout(<span class="number">5000</span>);<span class="comment">// 设置超时时间</span></span><br><span class="line"><span class="keyword">int</span> responseCode = conn.getResponseCode();<span class="comment">// 获取状态码</span></span><br><span class="line"><span class="keyword">if</span> (responseCode == <span class="number">200</span>) &#123;<span class="comment">// 访问成功</span></span><br><span class="line">InputStream is = conn.getInputStream ();<span class="comment">//获取服务器返回的输入流</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>POST 方式提交数据：向服务器提交的参数在请求实体中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">String path = <span class="string">&quot;http://192.168.1.l00:8080/web/LoginServlet&quot;</span>; </span><br><span class="line">URL url = <span class="keyword">new</span> URL(path);</span><br><span class="line">HttpURLConnection conn = (HttpURLConnection) url.openConnection();</span><br><span class="line">conn.setConnectTimeout(<span class="number">5000</span>);<span class="comment">// 设置超时时间</span></span><br><span class="line">conn.setRequestMethod(<span class="string">&quot;POST&quot;</span>);<span class="comment">// 设置请求方式</span></span><br><span class="line"><span class="comment">// 准备数据并给参数进行编码</span></span><br><span class="line">String data = <span class="string">&quot;username=&quot;</span> + URLEncoder.encode(<span class="string">&quot;zhangsan&quot;</span>) + <span class="string">&quot;&amp;password=&quot;</span> + URLEncoder.encode (<span class="string">&quot;123&quot;</span>);</span><br><span class="line"><span class="comment">// 设置请求头数据提交方式，这里是以 form 表单的方式提交</span></span><br><span class="line">conn.setRequestProperty(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;applicationlx-www-form-urlencoded&quot;</span>);</span><br><span class="line"><span class="comment">// 设置请求头，设置提交数据的长度</span></span><br><span class="line">conn.setRequestProperty(<span class="string">&quot;Content-Length&quot;</span>, data.length() + <span class="string">&quot;&quot;</span>); </span><br><span class="line"><span class="comment">// post 方式，实际上是浏览器把数据写给了服务器</span></span><br><span class="line">conn.setDoOutput(<span class="keyword">true</span>); <span class="comment">// 设置允许向外写数据</span></span><br><span class="line">OutputStream os = conn.getOutputStream();<span class="comment">// 利用输出流往服务器写数据</span></span><br><span class="line">os.write(data.getBytes());<span class="comment">// 将数据写给服务器</span></span><br><span class="line"><span class="keyword">int</span> code = conn.getResponseCode();<span class="comment">// 获取状态码</span></span><br><span class="line"><span class="keyword">if</span> ( code == <span class="number">200</span>) &#123;<span class="comment">// 请求成功</span></span><br><span class="line">InputStream is = conn.getInputStream();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Handler 消息机制：首先在 UI 主线程创建一个 Handler 对象，然后在子线程中调用 Hanlder 的 sendMessage()方法，这个消息会存放在 UI 线程的 MessageQueue 中，通过 Looper 对象取出 MessageQueue 中的消息，最后分发给 Hanlder 的 handleMessage()方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在主线程中创建 Handler 对象时，系统已经默认存在一个 Looper 对象</span></span><br><span class="line"><span class="keyword">private</span> Handler handler = <span class="keyword">new</span> Handler()&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(android.os.Message msg)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Thread() &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Message msg = <span class="keyword">new</span> Message();</span><br><span class="line">        <span class="comment">// what 字段携带一些整型数据</span></span><br><span class="line">msg.what = CHANGE_UI;</span><br><span class="line">        <span class="comment">// obj 字段携带一个 Object 对象</span></span><br><span class="line">msg.obj = bitmap;</span><br><span class="line">handler.sendMessage(msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;.start();</span><br></pre></td></tr></table></figure><h5 id="开源项目"><a href="#开源项目" class="headerlink" title="开源项目"></a>开源项目</h5><p>AsyncHttpClient</p><p>SmartImageView</p><h3 id="高级编程"><a href="#高级编程" class="headerlink" title="高级编程"></a>高级编程</h3><h5 id="图形图像处理"><a href="#图形图像处理" class="headerlink" title="图形图像处理"></a>图形图像处理</h5><p>Bitmap 类：图像处理</p><table><thead><tr><th>方法名称</th><th>功能描述</th></tr></thead><tbody><tr><td>createBitmap(int width, int height, Config config)</td><td>创建位图，width 代表要创建的图片的宽度，height 代表高度，Config 是 Bitmap 的内部类，用于指定 Bitmap 的配置信息</td></tr><tr><td>createBitmap(int colors[], int offset, int stride, int width, int height, Config config)</td><td>使用颜色数组创建以个指定宽高的位图，颜色数组的个数为 width x height</td></tr><tr><td>createBitmap(Bitmap src)</td><td>使用源位图创建一个新的 Bitmap</td></tr><tr><td>createBitmap(Bitmap source, int x, int y, int width, int height)</td><td>从源位图的指定坐标开始 “挖取” 指定宽高的一块图像来创建新的 Bitmap 对象</td></tr><tr><td>createBitmap(Bitmap source, int x, int y, int width, int height, Matrix m, boolean filter)</td><td>从源位图的指定坐标开始 “挖取” 指定宽高的一块图像来创建新的 Bitmap 对象， 并按照 Matrix 规则进行变换</td></tr><tr><td>isRecycled()</td><td>判断 Bitmap 对象是否被回收</td></tr><tr><td>recycle()</td><td>回收 Bitmap 对象</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Bitmap.Config config = Config.ARGB_4444; </span><br><span class="line">Bitmap bitmap = Bitmap.createBitmap (width, height, config);</span><br></pre></td></tr></table></figure><p>BitmapFactory 类：用于从数据源来解析、创建 Bitmap 对象</p><table><thead><tr><th>方法名称</th><th>功能描述</th></tr></thead><tbody><tr><td>decodeFile(String pathName)</td><td>从指定文件中解析、创建 Bitmap 对象</td></tr><tr><td>decodeStream(InputStream is)</td><td>从指定输入流中解析、创建 Bitmap 对象</td></tr><tr><td>decodeResource(Resources res, int id)</td><td>根据给定的资源 id，从指定资源中解析、创建 Bitmap 对象</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Bitmap bitmap = BitmapFactory.decodeResource(getResources(), R.drawable.ic_launcher);</span><br></pre></td></tr></table></figure><p>Paint 类：描述图形的颜色和风格</p><table><thead><tr><th>方法名称</th><th>功能描述</th></tr></thead><tbody><tr><td>Paint()</td><td>创建一个 Paint 对象，并使用默认属性</td></tr><tr><td>Paint(int flags)</td><td>创建一个 Paint 对象，并使用指定属性</td></tr><tr><td>setARGB(int a, int r, int g, int b)</td><td>设置颜色，各参数值均为 0-255 之间的整数，几个参数分别用于表示透明度、红色、绿色和蓝色的值</td></tr><tr><td>setColor(int color)</td><td>设置颜色</td></tr><tr><td>setAlpha(int a)</td><td>设置透明度</td></tr><tr><td>setAntiAlias(boolean aa)</td><td>指定是否使用抗锯齿功能，如果使用会使绘图速度变慢</td></tr><tr><td>setDither(boolean dither)</td><td>指定是否使用图像抖动处理，如果使用会使图像颜色更加平滑、饱满、清晰</td></tr><tr><td>setShadowLayer(float radius, float dx, float dy, int color)</td><td>设置阴影，参数 radius 为阴影的角度；dx 和 dy 为阴影在 x 轴和 y 轴上的距离，color 为阴影的颜色</td></tr><tr><td>setTextAlign(Align align)</td><td>设置绘制文本时的文字对齐方式， 参数值为 Align.CENTER、Align.LEFT 或 Align.RIGHT</td></tr><tr><td>setTextSize(float textSize)</td><td>设置绘制文本时的文字大小</td></tr><tr><td>setFakeBoldText(boolean fakeBoldT ext)</td><td>设置绘制文字时是否为粗体文字</td></tr><tr><td>setXfermode(Xfermode xfermode)</td><td>设置图形重叠时的处理方式，如合并、取交集或并集，经常用来制作橡皮的擦除效果</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Paint paint = <span class="keyword">new</span> Paint(); </span><br><span class="line">paint.setColor(Color.RED);</span><br></pre></td></tr></table></figure><p>Canvas 类：绘制图形</p><table><thead><tr><th>方法名称</th><th>功能描述</th></tr></thead><tbody><tr><td>drawRect(Rect r, Paint paint)</td><td>使用画笔画出指定矩形</td></tr><tr><td>drawOval(RectF oval, Paint paint)</td><td>使用画笔画出指定椭圆</td></tr><tr><td>drawCircle(float ex, float cy, float radius, Paint paint)</td><td>使用画笔在指定位置画出指定半径的圆</td></tr><tr><td>drawline(float startX, float startY, float stopX, float stopY, Paint paint)</td><td>使用画笔在指定位置画线</td></tr><tr><td>drawRoundRect(RectF rect, float rx, float ry, Paint paint)</td><td>使用画笔绘制指定圆角矩形，其中 rx 表示 x 轴圆角半径，ry 表示 y 轴圆角半径</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Canvas 类在创建时需要继承自 View 类，并且在该类中重写 onDraw() 方法</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>.onDraw(canvas); </span><br><span class="line">Paint paint = <span class="keyword">new</span> Paint();</span><br><span class="line">paint.setColor(Color.RED); </span><br><span class="line">Rect r = <span class="keyword">new</span> Rect(<span class="number">40</span>, <span class="number">40</span>, <span class="number">200</span>, <span class="number">100</span>);</span><br><span class="line">canvas.drawRect(r, paint);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Matrix 类：给图片添加特效</p><table><thead><tr><th>方法名称</th><th>功能描述</th></tr></thead><tbody><tr><td>Matrix()</td><td>创建一个唯一的 Matrix 对象</td></tr><tr><td>setRotate(float degrees)</td><td>将 Matrix 对象围绕 (0, 0) 旋转 degrees 度</td></tr><tr><td>setRotate(float degrees, float px, float py)</td><td>将 Matrix 对象图绕指定位置 (px, py) 旋转 degrees 度</td></tr><tr><td>setScale(float sx, float sy)</td><td>对 Matrix 对象进行缩放， 参数 sx 代表 x 轴上的缩放比例 ，sy 代表 y 轴上的缩放比例</td></tr><tr><td>setScale(float sx, float sy, float px, float py)</td><td>让 Matrix 对象以 (px, py) 为轴心，在 x 轴上缩放 sx, 在 y轴上缩放 sy</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Matrix matrix = <span class="keyword">new</span> Matrix();</span><br><span class="line">matrix.setRotate(<span class="number">30</span>)</span><br></pre></td></tr></table></figure><h5 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h5><p>补间动画：通过对 View 中的内容进行一系列的图形变换来实现动画效果。以 XML 形式定义的动画放置在 <code>res/anim</code></p><ul><li><p>透明度渐变动画 (AlphaAnimation)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span> </span><br><span class="line">&lt;alpha</span><br><span class="line">android:interpolator=&quot;@android:anim/linear_interpolator&quot; </span><br><span class="line">android:repeatMode=&quot;reverse&quot;</span><br><span class="line">android:repeatCount=&quot;infinite&quot; </span><br><span class="line">android:duration=&quot;lOOO&quot; </span><br><span class="line">android:fromAlpha=&quot;l.0&quot; </span><br><span class="line">android:toAlpha=&quot;0.0&quot;/&gt; </span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>interpolator: 控制动画的变化速度，值为 <code>＠android:anim/linear_interpolator</code> 匀速改变、<code>＠android:anim/accelerate_interpolator</code> 开始慢，后来加速</li><li>repeatMode: 指定动画重复的方式，值为 reverse 反向、restart 重新开始</li><li>repeatCount: 指定动画重复次数，可以为正整数，为 infinite 无限循环</li><li>duration: 指定动画播放时长，单位 ms</li><li>fromAlpha: 指定动画开始时的透明度，0.0 为完全透明， 1.0 为不透明</li><li>toAlpha: 指定动画结束时的透明度</li></ul></li><li><p>旋转动画 (RotateAnimation)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;l.0&quot; encoding=&quot;utf-8&quot;?&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">&lt;rotate</span><br><span class="line">android:fromDegrees=&quot;O&quot; </span><br><span class="line">android:toDegrees= &quot;360&quot; </span><br><span class="line">android:pivotX=&quot;50%&quot;</span><br><span class="line">android:pivotY=&quot;50%&quot;</span><br><span class="line">android:repeatMode=&quot;reverse&quot; </span><br><span class="line">android:repeatCount=&quot;infinite&quot; </span><br><span class="line">android:duration=&quot;l000&quot;/&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>fromDegrees: 指定动画开始时的角度</li><li>toDegrees: 指定动画结束时的角度</li><li>pivotX: 指定轴心的 x 坐标</li><li>pivotY: 指定轴心的 y 坐标</li></ul></li><li><p>缩放动画 (ScaleAnimation)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;l.0&quot; encoding=&quot;utf-8&quot;?&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">&lt;scale</span><br><span class="line">android:repeatMode=&quot;reverse&quot; </span><br><span class="line">android:repeatCount=&quot;infinite&quot;</span><br><span class="line">android:duration=&quot;3000&quot; </span><br><span class="line">android:fromXScale=&quot;1.0&quot; </span><br><span class="line">android:fromYScale=&quot;1.0&quot; </span><br><span class="line">android:toXScale=&quot;0.5&quot; </span><br><span class="line">android:toYScale=&quot;0.5&quot; </span><br><span class="line">android:pivotX=&quot;50%&quot;</span><br><span class="line">android:pivotY=&quot;50%&quot;/&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>fromXScale: 指定动画开始时 x 轴上的缩放系数，值为 1.0 表示不变化</li><li>fromYScale: 指定动画开始时 y 轴上的缩放系数</li><li>toXScale： 指定动画结束时 x 轴上的缩放系数</li><li>toYScale: 指定动画结束时 y 轴上的缩放系数</li></ul></li><li><p>平移动画 (TranslateAnimation)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;l.0&quot; encoding=&quot;utf-8&quot;?&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">set</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">translate</span> </span></span><br><span class="line"><span class="tag"><span class="attr">android:fromXDelta</span>=<span class="string">&quot;0.0&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">android:fromYDelta</span>=<span class="string">&quot;0.0&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">android:toXDelta</span>=<span class="string">&quot;lOO&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">android:toYDelta</span>=<span class="string">&quot;0.0&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">android:repeatCount</span>=<span class="string">&quot;infinite&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">android:repeatMode</span>=<span class="string">&quot;reverse&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:duration</span>=<span class="string">&quot;4000&quot;</span>/&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>fromXDelta: 指定动画开始时 View 的 x 轴坐标，这里的坐标是相对于 View 的所在位置的坐标，0.0 表示在 View 最开始的地方</li><li>fromYDelta: 指定动画开始时 View 的 y 轴坐标</li><li>toXDelta: 指定动画结束时 View 的 x 轴坐标</li><li>toYDelta: 指定动画结束时 View 的 y 轴坐标</li></ul></li><li><p>在代码中定义 4 种补间动画时，需要用到 AlphaAnimation、ScaleAnimation、TranslateAnimation 和 RotateAnimation 类</p></li></ul><p>逐帧动画：一张一张地播放事先准备好的静态图像。在 <code>res/drawable</code> 目录下创建逐帧动画的 XML 文件并在 <code>&lt;animation-list&gt;</code> 节点的 <code>&lt;item&gt;</code> 子节点中指定图片出现的顺序以及每帧的持续时间</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">animation-list</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">&quot;@drawable/img0l&quot;</span> <span class="attr">android:duration</span>=<span class="string">&quot;200&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">&quot;@drawable/img02&quot;</span> <span class="attr">android:duration</span>=<span class="string">&quot;200&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">&quot;@drawable/img03&quot;</span> <span class="attr">android:duration</span>=<span class="string">&quot;200&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">&quot;@drawable/img04&quot;</span> <span class="attr">android:duration</span>=<span class="string">&quot;200&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">&quot;@drawable/img05&quot;</span> <span class="attr">android:duration</span>=<span class="string">&quot;200&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">&quot;@drawable/img06&quot;</span> <span class="attr">android:duration</span>=<span class="string">&quot;200&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">item</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">animation-list</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在代码中定义逐帧动画需要用到 AnimationDrawable 中的 addFrame() 方法来添加图片</p><h5 id="多媒体"><a href="#多媒体" class="headerlink" title="多媒体"></a>多媒体</h5>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;Android-基础入门&quot;&gt;&lt;a href=&quot;#Android-基础入门&quot; class=&quot;headerlink&quot; title=&quot;Android 基础入门&quot;&gt;&lt;/a&gt;Android 基础入门&lt;/h3&gt;&lt;h5 id=&quot;Android-简介&quot;&gt;&lt;a href=&quot;#Android-简介&quot; class=&quot;headerlink&quot; title=&quot;Android 简介&quot;&gt;&lt;/a&gt;Android 简介&lt;/h5&gt;&lt;p&gt;Android 是一款基于 Linux 平台的开源操作系统，主要用于移动设备中，由 Google 公司和开放手机联盟领导及开发。Android 一词最早出现于法国作家利尔亚当在 1886 年发表的科幻小说《未来夏娃》中，将外表像人的机器起名为 Android。从 Android 1.5 版本开始， Android 用甜点作为系统版本的代号。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Android" scheme="https://vanehsiung.netlify.app/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Hexo</title>
    <link href="https://vanehsiung.netlify.app/2020/12/10/Hexo/"/>
    <id>https://vanehsiung.netlify.app/2020/12/10/Hexo/</id>
    <published>2020-12-10T14:50:12.000Z</published>
    <updated>2021-02-22T04:23:01.796Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a><span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvaW5kZXguaHRtbA==">Hexo<i class="fa fa-external-link-alt"></i></span></h3><p>Hexo 是一个快速、简洁且高效的博客框架。</p><a id="more"></a><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><ul><li><p>安装 Git：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop install git</span><br></pre></td></tr></table></figure></li><li><p>安装 node.js：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop install nodejs</span><br></pre></td></tr></table></figure></li><li><p>安装 Hexo：-g 表示全局安装，会将 Hexo 命令加入环境变量中。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li></ul><h5 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init [folder]</span><br><span class="line">cd &lt;folder&gt;</span><br><span class="line">npm install # 不必执行，在执行 hexo init 的过程中就已经自动安装好了项目依赖。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── node_modules&#x2F;&#x2F;依赖安装目录</span><br><span class="line">├── scaffolds&#x2F;&#x2F;模板文件夹，Hexo的模板是指在新建的文章文件中默认填充的内容。</span><br><span class="line">|   ├── draft.md&#x2F;&#x2F;草稿模板</span><br><span class="line">|   ├── page.md&#x2F;&#x2F;页面模板</span><br><span class="line">|   └── post.md&#x2F;&#x2F;文章模板</span><br><span class="line">├── source&#x2F;&#x2F;资源文件夹</span><br><span class="line">|   └── _posts&#x2F;&#x2F;文章目录</span><br><span class="line">├── themes&#x2F;&#x2F;主题文件夹，Hexo 会根据主题来生成静态页面。</span><br><span class="line">|   └── landscape&#x2F;&#x2F;默认主题</span><br><span class="line">├── .gitignore&#x2F;&#x2F;指定不纳入git版本控制的文件</span><br><span class="line">├── _config.yml&#x2F;&#x2F;站点配置文件</span><br><span class="line">├── db.json            </span><br><span class="line">├── package.json&#x2F;&#x2F;应用程序的信息</span><br><span class="line">└── package-lock.json</span><br></pre></td></tr></table></figure><p>source：资源文件夹是存放用户资源的地方。除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。</p><h5 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h5><p>您可以在 <code>_config.yml</code> 中修改大部分的配置。</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>title</code></td><td align="left">网站标题</td></tr><tr><td align="left"><code>subtitle</code></td><td align="left">网站副标题</td></tr><tr><td align="left"><code>description</code></td><td align="left">网站描述</td></tr><tr><td align="left"><code>keywords</code></td><td align="left">网站的关键词。支援多个关键词。</td></tr><tr><td align="left"><code>author</code></td><td align="left">您的名字</td></tr><tr><td align="left"><code>language</code></td><td align="left">网站使用的语言。</td></tr><tr><td align="left"><code>timezone</code></td><td align="left">网站时区。Hexo 默认使用您电脑的时区。如 <code>Asia/Shanghai</code>。</td></tr><tr><td align="left"><code>url</code></td><td align="left">网址 http://<code>or</code>https://</td></tr><tr><td align="left"><code>root</code></td><td align="left">网站根目录</td></tr><tr><td align="left"><code>theme</code></td><td align="left">当前主题名称。值为<code>false</code>时禁用主题</td></tr><tr><td align="left"><code>deploy</code></td><td align="left">部署部分的设置</td></tr></tbody></table><h5 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h5><ul><li><p>version 显示 Hexo 版本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo version</span><br></pre></td></tr></table></figure></li><li><p>list 列出网站资料：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo list</span><br></pre></td></tr></table></figure></li><li><p>新建一篇文章：如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br><span class="line">hexo n [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure></li><li><p>Hexo 有三种默认布局：</p><table><thead><tr><th>布局</th><th>路径</th></tr></thead><tbody><tr><td>post</td><td>source/_posts</td></tr><tr><td>page</td><td>source</td></tr><tr><td>draft</td><td>source/_drafts</td></tr></tbody></table></li><li><p>预览草稿，publish 发表草稿：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo server --draft</span><br><span class="line">hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure></li><li><p>clean 清除缓存文件 (db.json) 和已生成的静态文件 (public)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure></li><li><p>generate 生成静态文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure></li><li><p>启动 hexo 的内置 Web 服务器：该命令将会调用 <span class="exturl" data-url="aHR0cHM6Ly93d3cubWFya2Rvd25ndWlkZS5vcmcvYmFzaWMtc3ludGF4">Markdown<i class="fa fa-external-link-alt"></i></span> 引擎解析项目中的博客内容生成网页资源，资源将会存于内存中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br><span class="line">hexo s --debug# 开启调试模式（--debug）</span><br><span class="line">hexo s --port 8000# 添加 -p &#x2F; --port 参数来设置 Web 服务监听的端口号</span><br><span class="line">hexo s --static# 加 -s &#x2F; --static 参数，本地改动不触发 hexo 实时解析更新。</span><br></pre></td></tr></table></figure></li><li><p>deploy 部署网站：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h5 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h5></li><li><p>Front-matter： 是文件最上方以 <code>---</code> 分隔的区域，用于指定个别文件的变量</p>  <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">layout:</span> <span class="comment"># 布局</span></span><br><span class="line"><span class="attr">title:</span> <span class="comment"># 标题</span></span><br><span class="line"><span class="attr">date:</span> <span class="comment"># 建立日期</span></span><br><span class="line"><span class="attr">updated:</span> <span class="comment"># 更新日期</span></span><br><span class="line"><span class="attr">comments:</span> <span class="comment"># 开启文章的评论功能</span></span><br><span class="line"><span class="attr">tags:</span><span class="comment"># 标签</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">标签1</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">标签2</span></span><br><span class="line"><span class="attr">categories:</span> [<span class="string">分类1</span>, <span class="string">分类2</span>]<span class="comment"># 分类, 不适用与分页</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="comment"># 覆盖文章网址</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>  标签是一种列表结构，而分类是一种树结构。</p></li><li><p>文本居中标签：在引用单行文本时使用</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;blockquote class&#x3D;&quot;blockquote-center&quot;&gt;blah blah blah&lt;&#x2F;blockquote&gt;# HTML方式</span><br><span class="line"></span><br><span class="line">&#123;% centerquote %&#125;blah blah blah&#123;% endcenterquote %&#125;# 标签方式</span><br><span class="line"></span><br><span class="line">&#123;% cq %&#125; blah blah blah &#123;% endcq %&#125;# 标签别名</span><br></pre></td></tr></table></figure></li><li><p>引用块</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure></li><li><p>代码块</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">​&#96;&#96;&#96; [language] [title] [url] [link text]</span><br><span class="line">code snippet</span><br><span class="line">​&#96;&#96;&#96;</span><br></pre></td></tr></table></figure><ul><li><code>langugae</code>：语言名称，引导渲染引擎正确解析并高亮显示关键字</li><li><code>title</code>：代码块标题，将会显示在左上角</li><li><code>url</code>：链接地址，如果没有指定 link text 则会在右上角显示 link</li><li><code>link text</code>：链接名称，指定 url 后有效，将会显示在右上角</li><li>如果设置语言为 diff，可以在代码前添加 <code>+</code> 和 <code>-</code> 来使用如上所示的高亮增删行提示效果，在展示代码改动痕迹时比较实用。</li></ul></li><li><p>note 标签：通过 note 标签可以为段落添加背景色</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note [class] %&#125;</span><br><span class="line">文本内容 (支持行内标签)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><ul><li>支持的 class 种类包括 default、primary、success、info、warning、danger</li></ul></li><li><p>label 标签：通过 label 标签可以为文字添加背景色</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label [class]@text  %&#125;</span><br></pre></td></tr></table></figure><ul><li>支持的 class 种类包括 default、primary、success、info、warning、danger</li></ul></li><li><p>button 按钮：通过 button 标签可以快速添加带有主题样式的按钮</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% button &#x2F;path&#x2F;to&#x2F;url&#x2F;, text, icon [class], title %&#125;</span><br><span class="line">&#123;% btn &#x2F;path&#x2F;to&#x2F;url&#x2F;, text, icon [class], title %&#125;</span><br></pre></td></tr></table></figure></li><li><p>tab 标签：tab 标签用于快速创建 tab 选项卡</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs [Unique name], [index] %&#125;</span><br><span class="line">  &lt;!-- tab [Tab caption]@[icon] --&gt;</span><br><span class="line">  标签页内容（支持行内标签）</span><br><span class="line">  &lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><ul><li>Unique name: 全局唯一的 Tab 名称，将作为各个标签页的 id 属性前缀</li><li>index: 当前激活的标签页索引，如果未定义则默认选中显示第一个标签页，如果设为 - 1 则默认隐藏所有标签页</li><li>Tab caption: 当前标签页的标题，如果不指定则会以 Unique name 加上索引作为标题</li><li>icon: 在标签页标题中添加 Font awesome 图标</li></ul></li><li><p>引用站内链接</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% post_path slug %&#125;</span><br><span class="line">&#123;% post_link slug [title] %&#125;</span><br></pre></td></tr></table></figure><ul><li><code>slug</code> 表示 <code>_post</code> 目录下的 Markdown 文件名。</li><li>post_path 标签将会渲染为文章的地址，即 permalink；而 post_link 标签将会渲染为链接，可以通过 title 指定链接标题。</li></ul></li><li><p>插入 Swig 代码：通过 raw 标签来禁止 Markdown 引擎渲染标签内的内容。该标签通常用于在页面内引入三方脚本实现特殊功能。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure></li><li><p>插入 Gist</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gist gist_id [filename] %&#125;</span><br></pre></td></tr></table></figure><ul><li>gist_id: Gist 仓库页面 url 中最后一段随机字符串</li><li>filename: Gist 中的文件名，如果 Gist 中只有一个文件，可以不用指定 filename，如果 Gist 中有多个文件，可以在标签内输入 filename 来指定只引入某个文件，如果没有指定 filename，将会引入 Gist 中的所有文件。</li></ul></li><li><p>插入图片：</p><ul><li><p>Markdown 并不会保存插入的图片资源本身，只是记录了获取资源的链接。</p></li><li><p>相对路径引用的标签插件</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img slug [title] %&#125;</span><br></pre></td></tr></table></figure><ul><li><p>slug 是资源文件夹下的图片名</p></li><li><p>Embedding an image using markdown：allows you to embed an image in markdown without using asset_img tag plugin.</p>  <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">marked:</span></span><br><span class="line">  <span class="attr">prependRoot:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">postAsset:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>  <code>![](image.jpg)</code> will be rendered as <code>&lt;img src=&quot;/2020/01/02/foo/image.jpg&quot;&gt;</code>.</p></li></ul></li></ul></li><li><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0QwbjlYMW4vaGV4by1ibG9nLWVuY3J5cHQ=">文章加密<i class="fa fa-external-link-alt"></i></span></p><ul><li><p>Install</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure></li><li><p>Quick start: Add the “password” value to your post’s front matter like</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">password: mikemessi</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p><span class="exturl" data-url="aHR0cHM6Ly9zdXlpbi1ibG9nLmNsdWIvMjAxOS8zS1pNQkFGLw==">Hexo 添加文章时自动打开编辑器<i class="fa fa-external-link-alt"></i></span></p><ul><li><p>在 Hexo 目录下的 scripts 目录中创建一个 JavaScript 脚本文件。通过这个脚本，我们用其来监听 <code>hexo new</code> 这个动作，并在检测到 <code>hexo new</code> 之后，执行编辑器打开的命令。</p></li><li><p>将下列内容写入你的脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var spawn &#x3D; require(&#39;child_process&#39;).exec;</span><br><span class="line"></span><br><span class="line">hexo.on(&#39;new&#39;, function(data)&#123;</span><br><span class="line">  spawn(&#39;start  &quot;markdown编辑器绝对路径.exe&quot; &#39; + data.path);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>文章置顶</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">sticky: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h5 id="资源文件夹"><a href="#资源文件夹" class="headerlink" title="资源文件夹"></a>资源文件夹</h5></li></ul><p>资源（Asset）代表 source 文件夹中除了文章以外的所有文件。</p><p><strong>文章资源文件夹</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>当资源文件管理功能打开后，Hexo将会在你每一次通过 <code>hexo new [layout] &lt;title&gt;</code> 命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个文章文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们。</p><h5 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h5><p><strong>持续集成（Continuous Integration，简称 CI）</strong></p><p>Simply Push to Deploy：热部署，只需要将代码 push 到 Git 远程仓库即可自动构建及更新。</p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cubmV0bGlmeS5jb20v">Netlify<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21hcmtldHBsYWNlL2FjdGlvbnMvaGV4by1hY3Rpb24=">GitHub Action<i class="fa fa-external-link-alt"></i></span>：</p><ul><li><p>Add your ssh key pair</p><ul><li><p>Run the following terminal command, replacing the email with one connected to your GitHub account.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;username@example.com&quot;</span><br></pre></td></tr></table></figure><p>Windows 下自定义 ssh key 文件需写成 <code>GIT\BlogSrc/.ssh/id_rsa</code></p></li><li><p>In Github Pages repo: Add the contents of the <strong>public key（id_rsa.pub）</strong> within your repositories deploy keys menu. You can find this option by going to <code>Settings &gt; Deploy Keys</code>, you can name the public key whatever you want, but you do <strong>need to give it write access</strong>.</p></li><li><p>In hexo source code repo: Add the contents of the <strong>private key（id_rsa）</strong> to the <code>Settings &gt; Secrets</code> menu as <code>DEPLOY_KEY</code>.</p></li></ul></li><li><p>Configure github workflows：Create a workflow .yml file in your .github/workflows directory.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span> [<span class="string">push</span>]</span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">A</span> <span class="string">job</span> <span class="string">to</span> <span class="string">deploy</span> <span class="string">blog.</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@v1</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">submodules:</span> <span class="literal">true</span> <span class="comment"># Checkout private submodules(themes or something else).</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Caching dependencies to speed up workflows. (GitHub will remove any cache entries that have not been accessed in over 7 days.)</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Cache</span> <span class="string">node</span> <span class="string">modules</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/cache@v1</span></span><br><span class="line">      <span class="attr">id:</span> <span class="string">cache</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">        <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.os</span> <span class="string">&#125;&#125;-node-$&#123;&#123;</span> <span class="string">hashFiles(&#x27;**/package-lock.json&#x27;)</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">restore-keys:</span> <span class="string">|</span></span><br><span class="line">          <span class="string">$&#123;&#123;</span> <span class="string">runner.os</span> <span class="string">&#125;&#125;-node-</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Dependencies</span></span><br><span class="line">      <span class="attr">if:</span> <span class="string">steps.cache.outputs.cache-hit</span> <span class="type">!=</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">npm</span> <span class="string">ci</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Deploy hexo blog website.</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">      <span class="attr">id:</span> <span class="string">deploy</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">sma11black/hexo-action@v1.0.3</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">deploy_key:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DEPLOY_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">user_name:</span> <span class="string">your</span> <span class="string">github</span> <span class="string">username</span>  <span class="comment"># (or delete this input setting to use bot account)</span></span><br><span class="line">        <span class="attr">user_email:</span> <span class="string">your</span> <span class="string">github</span> <span class="string">useremail</span>  <span class="comment"># (or delete this input setting to use bot account)</span></span><br><span class="line">        <span class="attr">commit_msg:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.head_commit.message</span> <span class="string">&#125;&#125;</span>  <span class="comment"># (or delete this input setting to use hexo default settings)</span></span><br><span class="line">    <span class="comment"># Use the output from the `deploy` step(use for test action)</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Get</span> <span class="string">the</span> <span class="string">output</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">echo</span> <span class="string">&quot;$<span class="template-variable">&#123;&#123; steps.deploy.outputs.notify &#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>一键部署</strong></p><ul><li><p>新建一个空的 repository（没有init任何内容）。你的 repository 必须直接命名为 <code>&lt;你的 GitHub 用户名.github.io&gt;</code>。从而能通过 <code>&lt;你的 GitHub 用户名.github.io&gt;</code> 域名直接访问你的blog。</p></li><li><p>安装 hexo-deployer-git。</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>修改<code>_config.yml</code>配置。</p>  <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:yourname/yourname.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></li><li><p>生成站点文件并推送至远程库。执行 <code>hexo clean</code> &amp;  <code>hexo deploy</code>。</p></li><li><p>登入 Github，在库设置（Repository Settings）中将默认分支设置为<code>_config.yml</code>配置中的分支名称。稍等片刻（Blog 不会立马加载出来，需多刷新几下），您的站点就会显示在您的Github Pages中。</p></li><li><p>这是如何发生的：当执行 <code>hexo deploy</code> 时，Hexo 会将 <code>public</code> 目录中的文件和目录推送至 <code>_config.yml</code> 中指定的远端仓库和分支中，并且<strong>完全覆盖</strong>该分支下的已有内容。</p></li><li><p>部署分支与写作分支：<code>hexo d</code> 部署到 GitHub 的是 hexo 编译后的文件，不包含源文件。可以利用git的分支管理，将源文件上传到 GitHub。一个好的实践是放在两个不同的 Git 仓库中。</p></li></ul><h5 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h5><p>创建 Hexo 主题非常容易，您只要在 <code>themes</code> 文件夹内，新增一个任意名称的文件夹，并修改 <code>_config.yml</code> 内的 <code>theme</code> 设定，即可切换主题。</p><ul><li><code>_config.yml</code>：主题的配置文件。和 Hexo 配置文件不同，主题配置文件修改时会自动更新，无需重启 Hexo Server。</li><li><code>languages</code>：语言文件夹。</li><li><code>layout</code>：布局文件夹。</li><li><code>scripts</code>：脚本文件夹。</li><li><code>source</code>：资源文件夹。</li></ul><p>在 GitHub 搜索 Hexo 即可找到流行的 <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3RoZW1lcy8=">Hexo 主题<i class="fa fa-external-link-alt"></i></span>。各主题都有相应的使用文档。</p><h3 id="NexT"><a href="#NexT" class="headerlink" title="NexT"></a><span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzLw==">NexT<i class="fa fa-external-link-alt"></i></span></h3><h5 id="Getting-Started"><a href="#Getting-Started" class="headerlink" title="Getting Started"></a>Getting Started</h5><p><strong>Installation</strong></p><ul><li><p>Installation</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd hexo-site</span><br><span class="line">npm install hexo-theme-next</span><br></pre></td></tr></table></figure></li><li><p>Usage, theme config file</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure></li><li><p>Update</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd hexo-site</span><br><span class="line">npm update hexo-theme-next</span><br></pre></td></tr></table></figure></li></ul><p><strong>Configuration</strong></p><p>Installed through npm</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp node_modules/hexo-theme-next/_config.yml _config.next.yml</span><br></pre></td></tr></table></figure><h5 id="Theme-Settings"><a href="#Theme-Settings" class="headerlink" title="Theme Settings"></a>Theme Settings</h5><p><em>Choosing Scheme</em>: </p><p>By using Scheme NexT gives you different views. And nearly all config can be used by those Schemes. </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># next/_config.yml</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Muse</span></span><br></pre></td></tr></table></figure><p><em>Configuring Favicon</em>: </p><p>By default the Hexo site use NexT favicons in <code>hexo-site/themes/next/source/images/</code> directory with different size for different device. </p><p>You can replace them with your own favicons.</p><p>For example, you can put your favicons in <code>hexo-site/source/images/</code> directory. Then you need to rename them and change the settings in favicon section in theme config file.</p><p><em>Creative Commons</em>:</p><p>NexT supports the display of <em>Creative Commons 4.0 International License</em> in sidebar and post.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># next/_config.yml</span></span><br><span class="line"><span class="attr">creative_commons:</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">by-nc-sa</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">language:</span> <span class="string">en</span></span><br></pre></td></tr></table></figure><p>通行的版权协议是一种限制性的协议，就是说，只有它明文许可你可以做的事，你才能做，否则就是侵权行为。</p><p>而”开放内容许可证”（open content licenses）只明文禁止使用者不能做的事，除此以外，可以随意使用这些作品。创作共用许可证（Creative Commons licenses，简称cc），就是这样一种许可证。</p><p>使用创作共用许可证，作者可以选择保留四种权利：</p><ol><li>署名（Attribution，简写为by）：必须提到原作者。</li><li>非商业用途（Noncommercial，简写为nc）：不得用于盈利性目的。</li><li>禁止演绎（No Derivative Works，简写为nd）：不得修改原作品。</li><li>相同方式共享（Share Alike，简写为sa）：如果允许修改原作品，那么必须使用相同的许可证发布。</li></ol><p><em>Configuring Menu Items</em>:</p><p>Menu settings items have format <code>Key: /link/ || icon</code> which contains 3 values:</p><ul><li>Key → is the name of menu item (home, archives, etc.).</li><li>/link/ → is the target link to relative url inside your site.</li><li>icon → is the name of <span class="exturl" data-url="aHR0cHM6Ly9mb250YXdlc29tZS5jb20v">Font Awesome icon<i class="fa fa-external-link-alt"></i></span>.</li></ul><p>To customize menu items, edit the following content in theme config file:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br></pre></td></tr></table></figure><p><span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9kb2NzL3RoZW1lLXNldHRpbmdzL2N1c3RvbS1wYWdlcy5odG1s">Google Calendar Page<i class="fa fa-external-link-alt"></i></span></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">schedule:</span> <span class="string">/schedule/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-calendar</span></span><br></pre></td></tr></table></figure><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvLWdlbmVyYXRvci1zaXRlbWFw">sitemap<i class="fa fa-external-link-alt"></i></span>：为了让博文被google或百度检索，需要使用hexo的sitemap功能。 </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sitemap:</span> <span class="string">/sitemap.xml</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-sitemap</span></span><br></pre></td></tr></table></figure><ul><li><p>Install</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure></li><li><p>Hexo Config</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">sitemap.xml</span></span><br></pre></td></tr></table></figure><p>Except home and archives, all custom pages under menu section need to be created manually!</p></li></ul><p><strong>Sidebar Setting</strong></p><p><em>Configuring Avatar</em>：</p><p>Put your avatar under site directory <code>source/uploads/</code> (create directory if it doesn’t exists).And then change option to <code>url: /uploads/avatar.png</code>.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/uploads/avatar.png</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>点击头像回到首页：</p><p>主要是将<code>&lt;img class=&quot;site-author-image&quot; ... /&gt;</code>加入到<code>&lt;a href=&quot;/&quot;&gt;&lt;/a&gt;</code>。</p><p><em>Sidebar Social Links</em>：</p><ul><li><p>Edit the <code>social</code> section in theme config file as following:</p>  <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/yourname</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">  <span class="attr">E-Mail:</span> <span class="string">mailto:yourname@example.com</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-envelope</span></span><br></pre></td></tr></table></figure></li><li><p>取消社交图标前的小圆点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># create hexo-site&#x2F;source&#x2F;_data&#x2F;styles.styl</span><br><span class="line">.links-of-author a,</span><br><span class="line">.links-of-author .exturl &#123;</span><br><span class="line">  &amp;:before &#123;</span><br><span class="line">    display: none;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><em>Sidebar Blogrolls</em> (友链):</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">links:</span></span><br><span class="line">  <span class="attr">Title1:</span> <span class="string">https://example.com/</span></span><br></pre></td></tr></table></figure><p><em>Sidebar TOC</em>:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">expand_all:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">max_depth:</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><p><strong>Footer</strong></p><p><em>Site Footer Icon</em>:</p><p>By default NexT shows red heart icon between year and copyright information in the footer. </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">icon:</span></span><br><span class="line">    <span class="attr">animated:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><em>Site Copyright Name</em>:</p><p>By default NexT shows the name of author from site config file. </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">copyright:</span> <span class="string">YourName</span></span><br></pre></td></tr></table></figure><p><em>Site Platform Information</em>:</p><p>By default NexT shows Hexo and Theme &amp; scheme information.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">powered:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p><em>Site Beian Information</em>:</p><p>Beian information is for Chinese users.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">beian:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">icp:</span> <span class="string">京ICP备</span> <span class="number">1234567890</span><span class="string">号-1</span></span><br><span class="line">    <span class="attr">gongan_id:</span> <span class="number">1234567890</span></span><br><span class="line">    <span class="attr">gongan_num:</span> <span class="string">京公网安备</span> <span class="number">1234567890</span><span class="string">号</span></span><br><span class="line">    <span class="attr">gongan_icon_url:</span> <span class="string">/uploads/beian.png</span></span><br></pre></td></tr></table></figure><p><strong>Post Settings</strong></p><p><em>Preamble Text</em>:</p><p>You can use following ways to show summary of articles and a Read More button.</p><p>Use <code>&lt;!-- more --&gt;</code> in your article to break your article manually, which is recommended by Hexo. (recommended)</p><p>If you have added <code>description</code> and set its value to your article summary in front-matter, NexT excerpts <code>description</code> as preamble text in homepage by default. Without <code>description</code>, the full contents would be the preamble text in homepage.</p><p><em>Post Wordcount</em>:</p><ul><li><p>Installation</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd hexo-site</span><br><span class="line">npm install hexo-word-counter</span><br><span class="line">hexo clean</span><br></pre></td></tr></table></figure></li><li><p>Hexo Config</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">false</span><span class="comment"># By default NexT shows the number of all posts words in footer section.</span></span><br><span class="line">  <span class="attr">total_time:</span> <span class="literal">false</span><span class="comment"># By default NexT shows the estimated reading time of all posts in footer section. </span></span><br></pre></td></tr></table></figure></li></ul><p><em>Donate Settings</em>:</p><ul><li><p>Get your WeChat / Alipay receive money QRcode image(s) and put into <code>source/images</code> .</p></li><li><p>Set needed values in <code>theme config file</code>:</p>  <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">reward_settings:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">animation:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">comment:</span> <span class="string">Buy</span> <span class="string">me</span> <span class="string">a</span> <span class="string">coffee</span></span><br><span class="line"></span><br><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="attr">wechatpay:</span> <span class="string">/images/wechatpay.png</span></span><br><span class="line">  <span class="attr">alipay:</span> <span class="string">/images/alipay.png</span></span><br></pre></td></tr></table></figure></li></ul><p><em>Follow Me</em>:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">follow_me:</span></span><br><span class="line">  <span class="attr">WeChat:</span> <span class="string">/images/wechat_channel.jpg</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-weixin</span></span><br><span class="line">  <span class="attr">RSS:</span> <span class="string">/atom.xml</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-rss</span></span><br></pre></td></tr></table></figure><ul><li>安装RSS插件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-generator-feed</span><br></pre></td></tr></table></figure><ul><li>配置站点配置文件(/_config.yml)的Extensions</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">plugin:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo-generator-feed</span></span><br><span class="line"><span class="comment"># Feed Atom</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure><ul><li>编辑主题配置文件(/theme/next/_config.yml)的<code>social links</code>，开启RSS的页面功能</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">rss:</span> <span class="string">/atom.xml</span></span><br></pre></td></tr></table></figure><ul><li>关注RSS：把 <code>https://vanehsiung.github.io/atom.xml</code> 复制到RSS阅读器上，就能关注了。</li></ul><p><strong>Custom Pages</strong></p><p><em>Custom Page Support</em>:</p><ul><li><p>Adding New Page</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd hexo-site</span><br><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure></li><li><p>Setting Front-matter Values</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">    ---</span><br><span class="line">    title: Tags</span><br><span class="line">    date: title: 2020-11-14 22:50:2</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">    ---</span><br></pre></td></tr></table></figure></li><li><p>Editting Menu</p>  <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br></pre></td></tr></table></figure></li></ul><p><em>Custom 404 Page</em>:</p><ul><li><p>Create a new page called 404</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd hexo-site</span><br><span class="line">hexo new page 404</span><br><span class="line">---</span><br><span class="line">title: 404</span><br><span class="line">permalink: &#x2F;404.html# 在 Github Docs 中 Github Pages 章有写</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li><li><p>Make sure relative_link is disabled in site config file</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></li><li><p>Whether users can be redirected to the 404 page depends on the settings of the website hosting service or web server, not Hexo. </p></li><li><p><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmdpdGh1Yi5jb20vY24vZnJlZS1wcm8tdGVhbUBsYXRlc3QvZ2l0aHViL3dvcmtpbmctd2l0aC1naXRodWItcGFnZXMvY3JlYXRpbmctYS1jdXN0b20tNDA0LXBhZ2UtZm9yLXlvdXItZ2l0aHViLXBhZ2VzLXNpdGU=">为 GitHub Pages 站点创建自定义 404 页面<i class="fa fa-external-link-alt"></i></span></p></li></ul><p><strong>Misc Theme Settings</strong></p><p><em>Mobile Devices Adaptation</em>:</p><p>reduce padding/margin indents on devices with narrow width</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mobile_layout_economy:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><em>Codeblock Style</em>:</p><p>NexT uses the <span class="exturl" data-url="aHR0cHM6Ly9oaWdobGlnaHRqcy5vcmcv">Highlight.js<i class="fa fa-external-link-alt"></i></span> and <span class="exturl" data-url="aHR0cHM6Ly9wcmlzbWpzLmNvbS8=">Prism<i class="fa fa-external-link-alt"></i></span> package to support code highlight</p><ul><li><p>Read Hexo’s documentation on <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc3ludGF4LWhpZ2hsaWdodA==">Syntax Highlighting<i class="fa fa-external-link-alt"></i></span> first, and set it up in site config file（在 <code>_config.yml</code> 中开启 Highlight 或 Prism）</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p>Preview all available Code Highlight themes here: <span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0LmpzLm9yZy9oaWdobGlnaHQv">NexT Highlight Theme Preview<i class="fa fa-external-link-alt"></i></span></p></li><li><p>Change the value of theme and prism to choose the highlight style you like</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span></span><br><span class="line">  <span class="attr">light:</span> <span class="string">xcode</span></span><br></pre></td></tr></table></figure><p>NexT supports the copy-and-paste functionality of codeblock</p></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">style:</span> <span class="string">mac</span><span class="comment"># Mac Panel风格代码块</span></span><br></pre></td></tr></table></figure><p><em>Back To Top</em>:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">back2top:</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><em>Fonts Customization</em>：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  </span><br><span class="line">  <span class="attr">host:</span> <span class="string">https://fonts.loli.net</span></span><br><span class="line">  </span><br><span class="line">  <span class="attr">global:</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Architects</span> <span class="string">Daughter,</span> <span class="string">Ma</span> <span class="string">Shan</span> <span class="string">Zheng</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">codes:</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Share</span> <span class="string">Tech</span> <span class="string">Mono</span></span><br></pre></td></tr></table></figure><ul><li><p>host：查看字体与使用字体的网址是不一样的；可能不能查看字体，但可以使用字体</p><ul><li><p>查看 <span class="exturl" data-url="aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9mb250cw==">Google Fonts<i class="fa fa-external-link-alt"></i></span>，使用 Google Fonts <code>https://fonts.googleapis.com</code>，以下为镜像</p><ul><li><p><code>https://fonts.loli.net</code></p></li><li><p><code>https://fonts.googleapis.cnpmjs.org</code></p></li><li><p><code>https://fonts.proxy.ustclug.org</code></p></li></ul></li></ul></li><li><p>查看<span class="exturl" data-url="aHR0cDovL3d3dy5nb29nbGVmb250cy5jbi9lbmdsaXNo">谷歌字体中文版<i class="fa fa-external-link-alt"></i></span>，使用 <code>https://fonts.font.im</code></p></li><li><p>技巧：先放 latin 文字，再放 chinese 文字，就可以分别定制英文与中文（有些中文字体包含英文字母）。手机无法显示自定义的中文字体，但可以显示自定义的英文字体。</p></li></ul><p><strong>SEO</strong></p><p><em>SEO Setting</em>:</p><p>Next provides useful options for better Search Engine Optimization (SEO).</p><p>By default a canonical link tag is created in Hexo after you have set up your URL <code>url: http://example.com</code> in site config file.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># theme config file</span></span><br><span class="line"><span class="attr">disable_baidu_transformation:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">index_with_subtitle:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">exturl:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><em>Webmaster Tools</em>:</p><ul><li><p>Google Webmaster Tools</p><ul><li><p>Login to <span class="exturl" data-url="aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS93ZWJtYXN0ZXJzL3Rvb2xz">Google Webmaster Tools<i class="fa fa-external-link-alt"></i></span> and go to verification methods and choose <code>HTML Tag</code>, you will get some code:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name&#x3D;&quot;google-site-verification&quot; content&#x3D;&quot;XXXXXXXXXXXXXXXXXXXXXXX&quot;&gt;</span><br></pre></td></tr></table></figure></li><li><p>Copy <code>XXXXXXXXXXXXXXXXXXXXXXX</code> value of <code>content</code> key.Edit theme config file and add or change <code>google_site_verification</code> section:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">google_site_verification:</span> <span class="string">XXXXXXXXXXXXXXXXXXXXXXX</span></span><br></pre></td></tr></table></figure></li><li><p>submit sitemap</p></li><li><p>That the new console says ‘couldnt fetch’ is a bug in the console. Pending is the real status!</p></li></ul></li></ul><ul><li><p>Bing Webmaster Tools</p><ul><li><p>Login to <span class="exturl" data-url="aHR0cHM6Ly93d3cuYmluZy5jb20vd2VibWFzdGVyLw==">Bing Webmaster Tools<i class="fa fa-external-link-alt"></i></span> and go to verification methods and choose <code>HTML Tag</code>, you will get some code:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name&#x3D;&quot;msvalidate.01&quot; content&#x3D;&quot;XXXXXXXXXXXXXXXXXXXXXXX&quot;&gt;</span><br></pre></td></tr></table></figure></li><li><p>Copy <code>XXXXXXXXXXXXXXXXXXXXXXX</code> value of <code>content</code> key. Edit theme config file and add or change <code>bing_site_verification</code> section:</p>  <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">bing_site_verification:</span> <span class="string">XXXXXXXXXXXXXXXXXXXXXXX</span></span><br></pre></td></tr></table></figure></li><li><p>submit sitemap</p></li><li><p>Bing 收录最快，立马就可以看到</p></li></ul></li><li><p>Baidu Webmaster Tools</p><ul><li><p>Login to <span class="exturl" data-url="aHR0cHM6Ly96aXl1YW4uYmFpZHUuY29tL3NpdGUvIy8=">Baidu Webmaster Tools<i class="fa fa-external-link-alt"></i></span> and go to verification methods and choose <code>HTML Tag</code>, you will get some code:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name&#x3D;&quot;baidu-site-verification&quot; content&#x3D;&quot;XXXXXXXXXXXXXXXXXXXXXXX&quot;&gt;</span><br></pre></td></tr></table></figure></li><li><p>Copy <code>XXXXXXXXXXXXXXXXXXXXXXX</code> value of <code>content</code> key.Edit theme config file and add or change <code>baidu_site_verification</code> section:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">baidu_site_verification:</span> <span class="string">XXXXXXXXXXXXXXXXXXXXXXX</span></span><br></pre></td></tr></table></figure></li><li><p>Push the url to baidu automatically</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">baidu_push:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p>submit sitemap</p></li></ul></li></ul><h5 id="Third-party-Services"><a href="#Third-party-Services" class="headerlink" title="Third-party Services"></a>Third-party Services</h5><p><strong>Comment Systems</strong></p><p><em>LiveRe (Korea)</em>:</p><ul><li><p>Create an account or log into <span class="exturl" data-url="aHR0cHM6Ly9saXZlcmUuY29tLw==">LiveRe<i class="fa fa-external-link-alt"></i></span>, click on the <code>installation</code> button and select the free city version, then click on the <code>install now</code> button.</p></li><li><p>Copy the <code>data-uid</code> field in the installation code to get your LiveRe UID.</p></li><li><p>Add the obtained LiveRe UID to the <code>livere_uid</code> section in the theme config file as following:</p>  <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">livere_uid:</span> </span><br></pre></td></tr></table></figure></li></ul><p>*Valine (China)*：</p><ul><li><p>Create an account or log into <span class="exturl" data-url="aHR0cHM6Ly9sZWFuY2xvdWQuY24v">LeanCloud<i class="fa fa-external-link-alt"></i></span>, and then click on the bottom left corner to create the application in dashboard.</p></li><li><p>Go to the application you just created, select <code>Settings → App Keys</code> in the lower left corner, and you will see your APP ID and APP Key.</p></li><li><p>Edit configurations in <code>valine</code> section in the theme config file as following:</p>  <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">appId:</span> </span><br><span class="line">  <span class="attr">appKey:</span> </span><br></pre></td></tr></table></figure></li><li><p>评论数据管理：请自行登录<code>Leancloud应用</code>管理。具体步骤：<code>登录</code>&gt;<code>选择你创建的应用</code>&gt;<code>存储</code>&gt;选择Class <code>Comment</code></p></li></ul><p><strong>Statistics and Analytics</strong></p><p><em>Analytics Tools</em>:</p><ul><li><p>Baidu Analytics (China)</p><ul><li><p>Login to <span class="exturl" data-url="aHR0cHM6Ly90b25namkuYmFpZHUuY29tLw==">Baidu Analytics<i class="fa fa-external-link-alt"></i></span> and locate to site code getting page.</p></li><li><p>Copy the script ID after <code>hm.js?</code>.</p></li><li><p>Edit theme config file and change section <code>baidu_analytics</code> to your script ID.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">baidu_analytics:</span> </span><br></pre></td></tr></table></figure></li></ul></li><li><p>Google Analytics</p><ul><li><p>Create an account and log into <span class="exturl" data-url="aHR0cHM6Ly9hbmFseXRpY3MuZ29vZ2xlLmNvbS8=">Google Analytics<i class="fa fa-external-link-alt"></i></span>.</p></li><li><p>Edit theme config file and fill <code>tracking_id</code> under section <code>google_analytics</code> with your Google track ID. Google track ID always starts with <code>UA-</code> (最新版 Google Analytics 是 <code>G-</code>).</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">google_analytics:</span></span><br><span class="line">  <span class="attr">tracking_id:</span> <span class="string">G-XXXXXXXX</span></span><br><span class="line">  <span class="attr">only_pageview:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><p><em>Counting Tools</em>:</p><p>Busuanzi Counting (China), Edit busuanzi_count option in theme config file.</p><p>不蒜子是基于域名来进行统计计算的。数据比百度统计多很多。网络不好的话，数据与图标不一定显示得出来。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><strong>Search Services</strong></p><p><em>Local Search</em>:</p><p>This search method is recommended for most users.</p><ul><li><p>Installation</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb</span><br></pre></td></tr></table></figure></li><li><p>Hexo Config</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br></pre></td></tr></table></figure></li><li><p>NexT Config</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>External Libraries</strong></p><p><em>PJAX</em>：</p><ul><li><p>You can enable it by setting value <code>pjax</code> to <code>true</code> in <code>theme config file</code>.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pjax:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p>It listens to every click on links you want (by default all of them).When an internal link is clicked, Pjax fetches the page’s HTML via AJAX.</p></li><li><p>Please use the absolute path of the image or <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdGFnLXBsdWdpbnMjSW5jbHVkZS1Bc3NldHM=">Hexo asset_img tag<i class="fa fa-external-link-alt"></i></span> in your posts, otherwise the images may fail to load during Pjax refresh.</p></li><li><p>例子：添加音乐播放器并保持跳转时不中断播放状态；fireworks 特效更流畅，不存在点击链接时的卡顿现象（点击链接时不会触发fireworks）。</p></li></ul><p><em>Fancybox</em>:</p><p>A jQuery lightbox script for displaying images, videos and more.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><a href="https://github.com/ApoorvSaxena/lozad.js"><em>Lazyload</em></a>:</p><p>It delays loading of images in long web pages. Images outside of viewport will not be loaded before user scrolls to them.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">lazyload:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><em>Progress Bar</em>:</p><p>NProgress will automatically monitor your Ajax requests, event loop lag, document ready state and elements on your page to decide on the progress.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">nprogress:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">spinner:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p><em>Canvas Ribbon</em>：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">canvas_ribbon:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">size:</span> <span class="number">300</span><span class="comment"># The width of the ribbon.</span></span><br><span class="line">  <span class="attr">alpha:</span> <span class="number">0.6</span><span class="comment"># The transparency of the ribbon.</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">-1</span><span class="comment"># The display level of the ribbon.</span></span><br></pre></td></tr></table></figure><p><em>粒子漂浮聚合</em>：</p><p>该功能由 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvdGhlbWUtbmV4dC1jYW52YXMtbmVzdA==">theme-next-canvas-nest<i class="fa fa-external-link-alt"></i></span> 插件提供：</p><ul><li><p>Create a file named <code>footer.njk </code> in <code>hexo/source/_data</code> directory, Edit this file and add the following content</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script color&#x3D;&quot;0,0,255&quot; opacity&#x3D;&quot;0.5&quot; zIndex&#x3D;&quot;-1&quot; count&#x3D;&quot;99&quot; src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;canvas-nest.js@1&#x2F;dist&#x2F;canvas-nest.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></li><li><p>In the NexT <code>_config.yml</code>, uncomment <code>footer</code> under the <code>custom_file_path</code> section.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="attr">footer:</span> <span class="string">source/_data/footer.njk</span></span><br></pre></td></tr></table></figure><h5 id="Tag-Plugins"><a href="#Tag-Plugins" class="headerlink" title="Tag Plugins"></a>Tag Plugins</h5></li></ul><p><a href="https://github.com/mermaid-js/mermaid"><strong>Mermaid</strong></a></p><ul><li>Settings  <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mermaid:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li>Usage  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% mermaid type %&#125;</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure><h5 id="Advanced-Settings"><a href="#Advanced-Settings" class="headerlink" title="Advanced Settings"></a>Advanced Settings</h5></li></ul><p><strong>Custom Files</strong></p><ul><li><p>uncomment under the section in <code>theme config file</code>.<code>stylecustom_file_path</code>。</p>  <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="attr">head:</span> <span class="string">source/_data/head.njk</span></span><br><span class="line">  <span class="attr">header:</span> <span class="string">source/_data/header.njk</span></span><br><span class="line">  <span class="string">...</span></span><br></pre></td></tr></table></figure></li><li><p>Edit in site root directory and add files:<code>source/_data/...</code>。</p></li><li><p>Then use it。</p></li><li><p>Stylus 是 CSS 的预处理框架，给 CSS 添加了可编程的特性。Stylus支持三种注释，单行注释（<code>//</code>)，多行注释(<code>/* */</code>)。</p></li><li><p>Nunjucks 是 jinja2 的 javascript 的实现，可以使用 <code>&#123;#` and `#&#125;</code> 来写注释，渲染时将会去除所有的注释。</p></li><li><p>不要直接修改 model 文件，而要使用 custom file，方便之后升级。</p></li></ul><p><strong>Front Matter</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">photos: &#x2F;uploads&#x2F;png.png</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="Misc-Settings"><a href="#Misc-Settings" class="headerlink" title="Misc Settings"></a>Misc Settings</h3><p>想要什么功能可以搜一下，看是否有现成的 model 可以使用。</p><p><strong>网易云音乐</strong></p><ul><li>在网页版云音乐中找到歌曲，点击生成外链播放器</li><li>根据个人喜好选择播放器尺寸和播放模式</li><li>将获取到的 iframe 代码添加到页面中</li></ul><p><strong><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0RJWWdvZC9BUGxheWVy">Aplayer<i class="fa fa-external-link-alt"></i></span> 音频播放器</strong></p><ul><li><p>借助 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01vZVBsYXllci9oZXhvLXRhZy1hcGxheWVy">hexo-tag-aplayer<i class="fa fa-external-link-alt"></i></span> 插件，可以通过标签的形式方便快捷的插入音频组件。</p></li><li><p>Installation</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-tag-aplayer</span><br></pre></td></tr></table></figure></li><li><p>Usage</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer &quot;title&quot; &quot;author&quot; &quot;url&quot; [&quot;picture_url&quot;, &quot;narrow&quot;, &quot;autoplay&quot;, &quot;width:xxx&quot;, &quot;lrc:xxx&quot;] %&#125;</span><br></pre></td></tr></table></figure><ul><li>title: 曲目标题</li><li>author: 曲目作者</li><li>url: 音乐文件 URL 地址</li><li>picture_url: (可选) 音乐对应的图片地址</li><li>narrow: （可选）播放器袖珍风格</li><li>autoplay: (可选) 自动播放，移动端浏览器暂时不支持此功能</li><li>width:xxx: (可选) 播放器宽度 (默认: 100%)</li><li>lrc:xxx: （可选）歌词文件 URL 地址</li></ul></li><li><p>当开启 Hexo 的 文章资源文件夹功能时，可直接引用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer &quot;Caffeine&quot; &quot;Jeff Williams&quot; &quot;caffeine.mp3&quot; &quot;picture.jpg&quot; &quot;lrc:caffeine.txt&quot; %&#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0RJWWdvZC9EUGxheWVy">Dpalyer<i class="fa fa-external-link-alt"></i></span> 视频播放器</strong></p><ul><li><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01vZVBsYXllci9oZXhvLXRhZy1kcGxheWVy">Installation<i class="fa fa-external-link-alt"></i></span></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-dplayer --save</span><br></pre></td></tr></table></figure></li><li><p>Usage</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% dplayer &quot;url&#x3D;video-url&quot; &quot;pic&#x3D;image-url&quot; ... [&quot;key&#x3D;value&quot;] %&#125;</span><br></pre></td></tr></table></figure></li><li><p>部分重要 key</p><ul><li>播放器<ul><li>autoplay：是否开启视频自动播放，默认为 <code>fasle</code></li><li>loop：是否开启视频循环播放，默认为 <code>false</code></li><li>screenshot：是否开启截图，默认为 <code>false</code></li><li>mutex：是否禁止多个播放器同时播放，默认为 <code>true</code></li><li>dmunlimited：是否开启海量弹幕模式，默认为 <code>false</code></li><li>preload：预加载模式，可选 <code>note</code> <code>metadata</code> <code>auto</code></li><li>theme：主题色</li><li>lang：语言，可选 <code>en</code> <code>zh-cn</code> <code>zh-tw</code></li><li>logo：左上角的 Logo</li><li>volume：默认音量，默认为 0.7</li><li>width：播放器宽度</li><li>height：播放器长度</li></ul></li><li>视频<ul><li>url：视频链接</li><li>pic：视频封面</li><li>thumbnails：视频缩略图，可以使用 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01vZVBsYXllci9EUGxheWVyLXRodW1ibmFpbHM=">DPlayer-thumbnails<i class="fa fa-external-link-alt"></i></span> 生成</li><li>vidtype：视频类型，可选 <code>auto</code> <code>hls</code> <code>flv</code> <code>dash</code> 或其他自定义类型</li></ul></li><li>字幕<ul><li>suburl：字幕链接</li><li>subtype：字幕类型，可选 <code>webvtt</code> <code>ass</code>，目前只支持 <code>webvtt</code></li><li>subbottom：字幕距离播放器底部的距离，如 <code>10px</code> <code>10%</code></li><li>subcolor：字幕颜色</li></ul></li><li>弹幕<ul><li>id：弹幕 id</li><li>api：弹幕 api</li><li>token：弹幕后端验证 token</li><li>addition：额外外挂弹幕</li><li>dmuser：弹幕用户名</li><li>maximum：弹幕最大数量</li></ul></li></ul></li></ul><p><strong>看板娘</strong></p><p>该功能由 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0VZSE4vaGV4by1oZWxwZXItbGl2ZTJk">hexo-helper-live2d<i class="fa fa-external-link-alt"></i></span> 插件支持</p><ul><li><p>Installation</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure></li><li><p>Config：在站点配置文件中设置，主题配置文件中设置没用</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">log:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-shizuku</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacity:</span> <span class="number">0.7</span></span><br></pre></td></tr></table></figure></li><li><p>Models：可以从 <span class="exturl" data-url="aHR0cHM6Ly9odWFqaTgudG9wL3Bvc3QvbGl2ZTJkLXBsdWdpbi0yLjAv">hexo live2d 模型预览<i class="fa fa-external-link-alt"></i></span> 里找到你喜欢的角色，然后根据 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3hpYXpleXUvbGl2ZTJkLXdpZGdldC1tb2RlbHM=">live2d-widget-models<i class="fa fa-external-link-alt"></i></span> 中提供的方法来下载模型数据.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install live2d-widget-model-shizuku</span><br></pre></td></tr></table></figure><p><a href="https://github.com/next-theme/hexo-next-fireworks"><strong>Fireworks</strong></a></p></li></ul><p>一个鼠标点击动画特效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install next-theme/hexo-next-fireworks</span><br></pre></td></tr></table></figure><p><a href="https://github.com/suyin-long/activate-power-mode"><strong>activate-power-mode</strong></a></p><p>一个为博客添加酷炫打字特效的插件</p><ul><li><p>编辑 <code>/hexo-site/source/_data/footer.njk</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;suyin-long&#x2F;activate-power-mode@1.0&#x2F;dist&#x2F;activate-power-mode.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">POWERMODE.colorful &#x3D; true; &#x2F;&#x2F; make power mode colorful</span><br><span class="line">POWERMODE.shake &#x3D; false; &#x2F;&#x2F; turn off shake</span><br><span class="line">document.body.addEventListener(&#39;input&#39;, POWERMODE);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></li><li><p>取消<code>footer: source/_data/footer.njk</code>的注释</p></li></ul><p><strong>搞怪网页标题</strong></p><ul><li><p>编辑 <code>/hexo-site/source/_data/head.njk</code>，添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;# 搞怪网页标题 #&#125; &#123;% if theme.title_trick.enable %&#125;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  var OriginTitile &#x3D; document.title;</span><br><span class="line">  var titleTime;</span><br><span class="line">  document.addEventListener(&quot;visibilitychange&quot;, function() &#123;</span><br><span class="line">    if (document.hidden) &#123;</span><br><span class="line">      document.title &#x3D; &quot;&#123;&#123; theme.title_trick.leave &#125;&#125;&quot;;</span><br><span class="line">      clearTimeout(titleTime);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      document.title &#x3D; &quot;&#123;&#123; theme.title_trick.enter &#125;&#125;&quot;;</span><br><span class="line">      titleTime &#x3D; setTimeout(function() &#123;</span><br><span class="line">        document.title &#x3D; OriginTitile;</span><br><span class="line">      &#125;, 2000);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></li><li><p>在主题配置文件中添加</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># a trick on website title</span></span><br><span class="line"><span class="attr">title_trick:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">leave:</span> <span class="string">&quot;(つェ⊂)我藏好了哦~&quot;</span></span><br><span class="line">  <span class="attr">enter:</span> <span class="string">&quot;(*´∇｀*) 被你发现啦~&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>我先是放在 <code>sorce/_data/head.njk</code> 中，问题是改变一次标题后就只显示网址。我认为 script 可能在 <code>&lt;title&gt;</code> 之前加载，所以就放在 <code>source/_data/header.njk</code>，正常运行。</p></li></ul><p><a href="https://github.com/next-theme/hexo-next-three"><strong>Hexo NexT Three</strong></a></p><ul><li><p>Install</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install next-theme/hexo-next-three</span><br></pre></td></tr></table></figure></li><li><p>Configure</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># JavaScript 3D library.</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/hexo-next-three</span></span><br><span class="line"><span class="attr">three:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">defer:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">cdn:</span></span><br><span class="line">  <span class="attr">waves:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">cdn:</span></span><br><span class="line">  <span class="attr">lines:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">cdn:</span></span><br><span class="line">  <span class="attr">sphere:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">cdn:</span></span><br></pre></td></tr></table></figure><p><a href="https://github.com/jiangtj-lab/hexo-cake-moon-menu"><strong>hexo-cake-moon-menu</strong></a></p></li><li><p>How to use</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cake-moon-menu</span><br></pre></td></tr></table></figure></li><li><p>Config: In hexo <code>_config.yml</code> </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">moon_menu:</span></span><br><span class="line">  <span class="attr">back2top:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-chevron-up</span></span><br><span class="line">    <span class="attr">func:</span> <span class="string">back2top</span></span><br><span class="line">    <span class="attr">order:</span> <span class="number">-1</span></span><br><span class="line">  <span class="attr">back2bottom:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fas</span> <span class="string">fa-chevron-down</span></span><br><span class="line">    <span class="attr">func:</span> <span class="string">back2bottom</span></span><br><span class="line">    <span class="attr">order:</span> <span class="number">-2</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>permalink</strong></p><ul><li><p>默认的文章 url 地址为 <code>http://yoursite.com/:year/:month/:day/:title/</code>，这种 url 格式层级太多，并且如果文章标题是中文的话可能会发生转义而出现一堆乱码，不利于搜索引擎的爬取分析，因此建议在站点配置中修改 <code>permalink</code> 的格式来简化页面 url，并尽量采用英文命名 Markdown 文件。(这个根据个人选择，我认为有更有组织的文件结构更重要)</p></li><li><p>这个 front matter 必须是 html 文件，文件会生成到 public 根目录。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">permalink: &#x2F;post-name.html</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li></ul><p><strong>robots.txt</strong></p><p>robots.txt（统一小写）是一种存放于网站根目录下的ASCII编码的文本文件，它通常告诉网络搜索引擎的漫游器（又称网络蜘蛛），此网站中的哪些内容是不应被搜索引擎的漫游器获取的，哪些是可以被漫游器获取的。</p><p><span class="exturl" data-url="aHR0cDovL3Rvb2wuY2hpbmF6LmNvbS9yb2JvdHMv">robots.txt在线生成器<i class="fa fa-external-link-alt"></i></span></p><h3 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h3><p>CDN 的全称是(Content Delivery Network)，即内容分发网络。其目的是通过在现有的 Internet 中增加一层新的CACHE(缓存)层，将网站的内容发布到最接近用户的网络“边缘”的节点，使用户可以就近取得所需的内容，提高用户访问网站的响应速度。从技术上全面解决由于网络带宽小、用户访问量大、网点分布不均等原因，提高用户访问网站的响应速度。</p><img data-src="/2020/12/10/Hexo/CDN.webp" class="" title="CDN"><h5 id="CDN-工作原理"><a href="#CDN-工作原理" class="headerlink" title="CDN 工作原理"></a>CDN 工作原理</h5><p>传统访问过程：</p><img data-src="/2020/12/10/Hexo/CDN1.webp" class="" title="CDN"><ol><li>用户输入访问的域名，操作系统向 LocalDns 查询域名的ip地址</li><li>LocalDns 向 ROOT DNS 查询域名的授权服务器（这里假设LocalDns缓存过期）</li><li>ROOT DNS 将域名授权 dns 记录回应给 LocalDns</li><li>LocalDns 得到域名的授权 dns 记录后，继续向域名授权 dns 查询域名的 ip 地址</li><li>域名授权 dns 查询域名记录后，回应给 LocalDns</li><li>LocalDns 将得到的域名 ip 地址，回应给用户端</li><li>用户得到域名 ip 地址后，访问站点服务器</li><li>站点服务器应答请求，将内容返回给客户端</li></ol><p>CDN 访问过程：</p><img data-src="/2020/12/10/Hexo/CDN2.webp" class="" title="CDN"><ol><li>用户输入访问的域名，操作系统向 LocalDns 查询域名的 ip 地址</li><li>LocalDns 向 ROOT DNS 查询域名的授权服务器（这里假设LocalDns缓存过期）</li><li>ROOT DNS 将域名授权 dns 记录回应给 LocalDns</li><li>LocalDns 得到域名的授权 dns 记录后，继续向域名授权 dns 查询域名的 ip 地址</li><li>域名授权 dns 查询域名记录后（一般是CNAME），回应给 LocalDns</li><li>LocalDns 得到域名记录后，向智能调度 DNS 查询域名的 ip 地址</li><li>智能调度 DNS 根据一定的算法和策略，将最适合的 CDN 节点 ip 地址回应给 LocalDns</li><li>LocalDns 将得到的域名 ip 地址，回应给用户端</li><li>用户得到域名 ip 地址后，访问站点服务器</li><li>CDN 节点服务器应答请求，将内容返回给客户端</li></ol><h5 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h5><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8xZGFlNmUxNjgwZmY=">CDN加速原理<i class="fa fa-external-link-alt"></i></span></p><h3 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h3><p>npm makes it easy for JavaScript developers to share and reuse code, and it makes it easy to update the code that you’re sharing.</p><p>基本：</p><ul><li><p>package.json 和 package-lock.json</p><ul><li>package.json 执行 npm init 命令生成，描述项目模块信息</li><li>package-lock.json 执行 npm install 命令生成，描述模块来源及依赖信息，可删除</li></ul></li><li><p>安装模块：读取 package.json 并下载模块到 <code>node_modules</code> 的目录，模块分为两类 dependencies 和devDependencies，分别对应生产环境需要的安装包和开发环境需要的安装包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install &lt;package_name&gt;</span><br><span class="line"></span><br><span class="line"># 在安装模块的时候，可以通过指定参数来修改 package.json 文件</span><br><span class="line">npm install &lt;package_name&gt; --save</span><br><span class="line">npm install &lt;package_name&gt; --save-dev</span><br></pre></td></tr></table></figure></li><li><p>更新模块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm update</span><br></pre></td></tr></table></figure></li><li><p>卸载模块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall &lt;package_name&gt;</span><br><span class="line"></span><br><span class="line"># 卸载模块的同时，也从 package.json 文件中移除</span><br><span class="line">$ npm uninstall --save &lt;package_name&gt;</span><br></pre></td></tr></table></figure><p>解决问题：</p></li><li><p>Ubuntu 安装最新 LTS 版本：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25vZGVqcy9oZWxwL3dpa2kvSW5zdGFsbGF0aW9u">官方教程<i class="fa fa-external-link-alt"></i></span>，Windows 版本更好</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p &#x2F;usr&#x2F;local&#x2F;lib&#x2F;nodejs</span><br><span class="line">sudo tar -xJvf node-$VERSION-$DISTRO.tar.xz -C &#x2F;usr&#x2F;local&#x2F;lib&#x2F;nodejs</span><br><span class="line">vi ~&#x2F;.profile</span><br><span class="line"># Nodejs</span><br><span class="line">VERSION&#x3D;v10.15.0</span><br><span class="line">DISTRO&#x3D;linux-x64</span><br><span class="line">export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;nodejs&#x2F;node-$VERSION-$DISTRO&#x2F;bin:$PATH</span><br><span class="line">. ~&#x2F;.profile# Refresh profile</span><br><span class="line">sudo ln -s &#x2F;usr&#x2F;local&#x2F;lib&#x2F;nodejs&#x2F;node-$VERSION-$DISTRO&#x2F;bin&#x2F;node  &#x2F;usr&#x2F;bin&#x2F;node</span><br></pre></td></tr></table></figure></li><li><p>查看 npm 配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config list -l</span><br><span class="line">npm config ls</span><br></pre></td></tr></table></figure></li><li><p>配置镜像：淘宝镜像不好用，特对对于 update</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https:&#x2F;&#x2F;registry.npmjs.org --global</span><br></pre></td></tr></table></figure></li><li><p>配置 NPM 不做严格的 SSL 校验</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set strict-ssl false</span><br></pre></td></tr></table></figure></li><li><p>npm ERR! Unexpected end of JSON input while parsing near …</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm cache clean --force</span><br></pre></td></tr></table></figure></li><li><p>npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents：不管</p></li><li><p>npm ERR! code EINTEGRITY</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">grep -ir &quot;sha1-WYr+VHVbKGilMw0q&#x2F;51Ou1Mgm2U&quot; ~&#x2F;.npm# wanted sha1</span><br><span class="line">npm cache clean --force</span><br><span class="line">grep -ir &quot;sha1-WYr+VHVbKGilMw0q&#x2F;51Ou1Mgm2U&quot; ~&#x2F;.npm</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></li><li><p>getaddrinfo EAI_AGAIN registry.npmjs.org：网络问题，重新运行 <code>npm install</code></p></li><li><p>升级为最新稳定版本的 node.js：超慢</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo npm cache clean -f</span><br><span class="line">sudo npm install -g n# n 是 Node版本管理控制器</span><br><span class="line">sudo n stable</span><br></pre></td></tr></table></figure><p><span class="exturl" data-url="aHR0cHM6Ly93d3cua2FuY2xvdWQuY24vc2hlbGx3YXkvbnBtLWRvYw==">NPM 中文文档<i class="fa fa-external-link-alt"></i></span></p></li></ul><h3 id="Great-Blogs"><a href="#Great-Blogs" class="headerlink" title="Great Blogs"></a>Great Blogs</h3><p><span class="exturl" data-url="aHR0cDovL3llYXJpdG8uY24vdGFncy9IZXhvLw==">yearito<i class="fa fa-external-link-alt"></i></span> ，<span class="exturl" data-url="aHR0cHM6Ly9zdXlpbi1ibG9nLmNsdWIvMjAyMC8zMjNFSDJZLw==">suyin<i class="fa fa-external-link-alt"></i></span> ，<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnlsZWFvLmNvbS9jYXRlZ29yaWVzL0hleG8lRTYlOEElOTglRTglODUlQkUv">yleao<i class="fa fa-external-link-alt"></i></span> ，<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmRsemhhbmcuY29tL3Bvc3RzLzM2Lz9oaWdobGlnaHQ9aGV4bw==">dlzhang<i class="fa fa-external-link-alt"></i></span></p><h3 id="Version"><a href="#Version" class="headerlink" title="Version"></a>Version</h3><table><thead><tr><th>Name</th><th>Version</th></tr></thead><tbody><tr><td>npm</td><td>7.0.8</td></tr><tr><td>hexo</td><td>5.2.0</td></tr><tr><td>hexo-theme-next</td><td>8.0.2</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;Hexo&quot;&gt;&lt;a href=&quot;#Hexo&quot; class=&quot;headerlink&quot; title=&quot;Hexo&quot;&gt;&lt;/a&gt;&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvaW5kZXguaHRtbA==&quot;&gt;Hexo&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Hexo" scheme="https://vanehsiung.netlify.app/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Microservices</title>
    <link href="https://vanehsiung.netlify.app/2020/11/26/Microservices/"/>
    <id>https://vanehsiung.netlify.app/2020/11/26/Microservices/</id>
    <published>2020-11-26T06:17:19.000Z</published>
    <updated>2021-02-22T04:23:01.796Z</updated>
    
    <content type="html"><![CDATA[<p>定义：“微服务架构”这个术语描述这样一种特定的软件设计方法，即以若干组可独立部署的服务的方式进行软件应用系统的设计。</p><a id="more"></a><h3 id="单体应用"><a href="#单体应用" class="headerlink" title="单体应用"></a>单体应用</h3><p>一个单体应用系统（即服务端应用系统，一个单个可执行的逻辑程序）是以一个单个单元的方式来构建的。处理用户请求的所有逻辑都运行在一个单个的进程内。通过精心设计，就能在开发人员的笔记本电脑上运行和测试这样的应用系统，并且使用一个部署流水线来确保变更被很好地进行了测试，然后部署到生产环境中。但是渐渐地，特别是随着越来越多的应用系统正被部署到云端，软件变更受到了很大的限制，应用系统的一个很小的部分的一处变更，也需要将整个单体应用系统进行重新构建和部署。这导致了微服务架构风格的诞生：以构建一组小型服务的方式来构建应用系统。</p><h5 id="单体应用架构"><a href="#单体应用架构" class="headerlink" title="单体应用架构"></a>单体应用架构</h5><p>一个单体应用，往往将应用所有功能都打包在一起：</p><p>当用户访问量变大导致一台服务器无法支撑时，就加服务器加负载均衡：</p><p>之后把静态文件独立出来，通过 CDN 等进行加速，提升单体应用的整体响应：</p><h3 id="微服务"><a href="#微服务" class="headerlink" title="微服务"></a>微服务</h3><p>微服务架构风格这种开发方法，是以开发一组小型服务的方式来开发一个独立的应用系统的。其中每个小型服务都运行在自己的进程中，并经常采用HTTP资源API这样轻量的机制来相互通信。这些服务围绕业务功能进行构建，并能通过全自动的部署机制来进行独立部署。这些微服务可以使用不同的语言来编写，并且可以使用不同的数据存储技术。对这些微服务我们仅做最低限度的集中管理。</p><h5 id="微服务架构"><a href="#微服务架构" class="headerlink" title="微服务架构"></a>微服务架构</h5><p>微服务架构，核心是为了解决应用微服务之后的服务治理问题。</p><p>第一个问题就是服务发现问题，解决方法是服务注册中心：</p><p>第二个问题是服务配置管理的问题，解决方案是配置中心：</p><p>以上是应用内部的服务治理，当客户端或外部应用调用服务的时候就需要使用到服务网关提供统一的服务入口，最终形成典型微服务架构：</p><h3 id="微服务架构的九大特性"><a href="#微服务架构的九大特性" class="headerlink" title="微服务架构的九大特性"></a>微服务架构的九大特性</h3><p>不存在微服务架构风格的正式定义。但是可以描述所见到的能够被贴上微服务标签的那些架构的共性。</p><h5 id="特性一：“组件化”与“多服务”"><a href="#特性一：“组件化”与“多服务”" class="headerlink" title="特性一：“组件化”与“多服务”"></a>特性一：“组件化”与“多服务”</h5><p>微服务架构也会使用软件库，但其将自身软件进行组件化的主要方法是将软件分解为诸多服务。</p><ul><li>组件定义：一个组件就是一个可以独立更换和升级的软件单元。</li><li>软件库定义：它能被链接到一段程序，且能通过内存中的函数来进行调用。是进程内的组件。</li><li>服务：是进程外的组件，它们通过诸如web service请求或远程过程调用这样的机制来进行通信。</li></ul><p>以使用服务（而不是以软件库）的方式来实现组件化的原因是：</p><ul><li>服务可被独立部署。如果一个应用系统由在单个进程中的多个软件库所组成，那么对任一组件做一处修改，都不得不重新部署整个应用系统。但是如果该应用系统被分解为多个服务，那么对于一个服务的多处修改，仅需要重新部署这一个服务。</li><li>能获得更加显式的组件接口。通过使用显式的远程调用机制，服务能更容易地避免客户端破坏组件的封装，从而导致组件间出现过度紧密的耦合。</li></ul><p>不足：</p><ul><li>比起进程内调用，远程调用更加昂贵。</li><li>如果需要修改组件间的职责分配，那么当跨越进程边界时，这种组件行为的改动会更加难以实现。</li></ul><h5 id="特性二：围绕“业务功能”组织团队"><a href="#特性二：围绕“业务功能”组织团队" class="headerlink" title="特性二：围绕“业务功能”组织团队"></a>特性二：围绕“业务功能”组织团队</h5><p>康威定律：</p><blockquote><p>任何设计（广义上的）系统的组织，都会产生这样一个设计，即该设计的结构与该组织的沟通结构相一致。</p><footer><strong>Melvyn Conway</strong></footer></blockquote><p>当在寻求将一个大型应用系统分解成几部分时，公司管理层往往会聚焦在技术层面上。这会导致组建用户界面团队、服务器端团队和数据库团队。</p><p>当团队沿着这些技术线分开后，即使要实现软件一个简单的变更，也会导致跨团队的项目时延和预算审批。在这种情况下，聪明的团队会进行局部优化，直接把代码逻辑塞到他们能访问到的任意应用系统中。</p><p>微服务根据业务功能来将系统分解为若干服务。这些服务针对该业务领域提供多层次广泛的软件实现，包括用户界面、持久性存储以及任何对外的协作性操作。因此，团队是跨职能的。</p><h5 id="特性三：“做产品”而不是“做项目”"><a href="#特性三：“做产品”而不是“做项目”" class="headerlink" title="特性三：“做产品”而不是“做项目”"></a>特性三：“做产品”而不是“做项目”</h5><p>项目模型：目标是交付某一块软件。一旦完工后，软件就被移交给维护团队，构建该软件的项目团队就会被解散。</p><p>微服务模型（产品理念）：一个团队在一个产品的整个生命周期中都应该保持对其拥有。这会使开发人员每天都会关注软件是如何在生产环境下运行的，并且增进他们与用户的联系，因为他们必须承担某些支持工作。</p><h5 id="特性四：“智能端点”与“傻瓜管道”"><a href="#特性四：“智能端点”与“傻瓜管道”" class="headerlink" title="特性四：“智能端点”与“傻瓜管道”"></a>特性四：“智能端点”与“傻瓜管道”</h5><p>当在不同的进程之间构建各种通信结构时，许多产品和方法强调将大量的智能特性纳入通信机制本身。</p><p>微服务社区主张智能端点和傻瓜管道。使用微服务所构建的各个应用的目标，都是尽可能地实现“高内聚和低耦合”——他们拥有自己的领域逻辑，并且更多地是像经典Unix的“过滤器”那样来工作。这些应用通过使用一些简单的REST风格的协议来进行编制，而不去使用复杂的协议。</p><p>微服务最常用的两种协议是：带有资源API的HTTP“请求－响应”协议，和轻量级的消息发送协议。对于前一种协议的最佳表述是：</p><blockquote><p>Be of the web, not behind the web</p><footer><strong>Ian Robinson</strong></footer></blockquote><h5 id="特性五：“去中心化”地治理技术"><a href="#特性五：“去中心化”地治理技术" class="headerlink" title="特性五：“去中心化”地治理技术"></a>特性五：“去中心化”地治理技术</h5><p>使用中心化的方式来对开发进行治理，其中一个后果，就是趋向于在单一技术平台上制定标准。我们更喜欢根据工作的不同来选用合理的工具。</p><h5 id="特性六：“去中心化”地管理数据"><a href="#特性六：“去中心化”地管理数据" class="headerlink" title="特性六：“去中心化”地管理数据"></a>特性六：“去中心化”地管理数据</h5><p>去中心化地管理数据，其表现形式多种多样。从最抽象的层面看，这意味着各个系统对客观世界所构建的概念模型，将彼此各不相同。微服务趋向使用“实战检验”的标准而非“强制执行”的标准。</p><p>如同在概念模型上进行去中心化的决策一样，微服务也在数据存储上进行去中心化的决策。单体应用在逻辑上各自使用一个单独的数据库来持久化数据，但是各家企业往往喜欢一系列单体应用共用一个单独的数据库。微服务更喜欢让每一个服务来管理其自有数据库。这种方法被称作“多语种持久化”。</p><h5 id="特性七：“基础设施”自动化"><a href="#特性七：“基础设施”自动化" class="headerlink" title="特性七：“基础设施”自动化"></a>特性七：“基础设施”自动化</h5><p>基础设施自动化技术已经得到长足的发展。云的演进，特别是AWS的发展，已经降低了构建、部署和运维微服务的操作复杂性。</p><p>构建流水线：</p><p>部署在单块系统和微服务上没什么区别。然而，两者在运维领域的情况却截然不同：</p><h5 id="特性八：“容错”设计"><a href="#特性八：“容错”设计" class="headerlink" title="特性八：“容错”设计"></a>特性八：“容错”设计</h5><p>使用各个微服务来替代组件，其结果是各个应用程序需要设计成能够容忍这些服务所出现的故障。</p><p>因为各个服务可以在任何时候发生故障，所以两件事就变得很重要，即能够快速地检测出故障，且在可能的情况下能够自动恢复服务。</p><h5 id="特性九：“演进式”设计"><a href="#特性九：“演进式”设计" class="headerlink" title="特性九：“演进式”设计"></a>特性九：“演进式”设计</h5><p>微服务的从业者们将服务的分解，视作一个额外的工具，来让应用开发人员能够控制应用系统中的变化，而无须减少变化的发生。</p><p>要将软件系统分解为各个组件时，决定切分应用系统时应该遵循的原则是：一个组件的关键属性，是具有独立更换和升级的特点。</p><p>这种强调可更换性的特点，是模块化设计一般性原则的一个特例，通过“变化模式”来驱动进行模块化的实现。将那些同时发生变化的东西，放到同一个模块中；很少发生变化的部分，放到不同的服务中。如果发现需要同时反复变更两个服务，这就是它们需要被合并信号。</p><h3 id="微服务框架"><a href="#微服务框架" class="headerlink" title="微服务框架"></a>微服务框架</h3><ul><li>Spring Cloud</li></ul><ul><li>Dubbo</li></ul><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><span class="exturl" data-url="aHR0cHM6Ly9tYXJ0aW5mb3dsZXIuY29tL2FydGljbGVzL21pY3Jvc2VydmljZXMuaHRtbA==">Microservices<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC83MjkzYjE0ODAyOGY=">微服务入门这一篇就够了<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;定义：“微服务架构”这个术语描述这样一种特定的软件设计方法，即以若干组可独立部署的服务的方式进行软件应用系统的设计。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Architecture" scheme="https://vanehsiung.netlify.app/tags/Architecture/"/>
    
  </entry>
  
  <entry>
    <title>Linux Deploy</title>
    <link href="https://vanehsiung.netlify.app/2020/11/24/Linux-Deploy/"/>
    <id>https://vanehsiung.netlify.app/2020/11/24/Linux-Deploy/</id>
    <published>2020-11-24T07:44:19.000Z</published>
    <updated>2021-02-22T04:23:01.796Z</updated>
    
    <content type="html"><![CDATA[<p>这是一篇旧文章，做个记录。</p><a id="more"></a><h3 id="通过-Linux-Deploy-在-Android-上安装-Linux"><a href="#通过-Linux-Deploy-在-Android-上安装-Linux" class="headerlink" title="通过 Linux Deploy 在 Android 上安装 Linux"></a>通过 Linux Deploy 在 Android 上安装 Linux</h3><h5 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h5><p>一个 Root 了的 Android 手机</p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuYnVzeWJveC5uZXQv">Busy Box<i class="fa fa-external-link-alt"></i></span>：Linux Deploy 支撑软件。</p><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21lZWZpay9saW51eGRlcGxveS9yZWxlYXNlcw==">Linux deploy<i class="fa fa-external-link-alt"></i></span>：Linux 系统支撑软件。</p><h5 id="安装-Busy-Box"><a href="#安装-Busy-Box" class="headerlink" title="安装 Busy Box"></a>安装 Busy Box</h5><p>点击安装，等待程序自行运行，在界面中输出 <code>## END</code> 后退出程序。</p><h5 id="Linux-deploy"><a href="#Linux-deploy" class="headerlink" title="Linux deploy"></a>Linux deploy</h5><ul><li>点击左图左上角部分，选择 <strong>设置</strong>，在设置界面中找到PATH变量，赋予其值 <code>/system/xbin</code>。</li><li>建议开启 <strong>锁定Wifi</strong> 功能。</li><li>接着退回主界面，点击右下角部分。</li><li><strong>发行版</strong> 看个人喜好选择，Debian 系（Debian，Kaili，Ubuntu）较热门。</li><li><strong>架构</strong> 默认。</li><li><strong>源</strong> 默认。如果下的慢的话，就仿照默认的源换为国内的源，如 <span class="exturl" data-url="aHR0cDovL21pcnJvcnMudXN0Yy5lZHUuY24v">USTC MIRRORS<i class="fa fa-external-link-alt"></i></span>，但是不要特意去换源，官方的源用的了的话官方的源最好。</li><li><strong>安装路径</strong> ：安装在手机自带的存储空间中，则在路径开头加上<code>$&#123;ENV_DIR&#125;</code>；安装在 <strong>sdcard</strong> 中，加上<code>$&#123;EXTERNAL_STORAGE&#125;</code>。</li><li><strong>文件系统</strong> ：推荐 <code>ext4</code>。</li><li><strong>用户名</strong> 和 <strong>密码</strong> 自定义。</li><li><strong>DNS</strong> 默认。</li><li><strong>本地化</strong> ：简体中文可以选择 <code>zh_CN.UTF-8</code>，建议选择 <code>en_US.UTF-8</code> 。</li><li><strong>挂载列表</strong>：添加访问手机内容的目录，<strong>手机目录：挂载点</strong>，如 <code>/sdcard:/mnt</code>，之后会自动挂载。</li><li>**开启<code>SSH</code>**。</li><li><strong>图形界面功能</strong>，需要的话就选 <code>XFce</code> 为桌面，XFce`是轻量级桌面环境。</li><li>退出系统设置界面，点击主界面右上角，选择安装。<br>  等待程序自行安装Linux系统，开始时会自动创造一个4G左右大小的img文件，这个是默认的大小，你可以根据你手机的容量自定义，创造文件需要一点时间，屏幕会很安静，再然后会安装各种东西，屏幕会输出很多信息，根据你的源的速度，等待时间不等，看到 <code>&lt;&lt;&lt;deploy</code> 则安装完毕。如果中间没有 <code>failed</code> 则安装成功。安装失败的话就需要重新安装，换个快一点的网，或者好一点的源。</li><li> <strong>注意：安装完毕后要先点击停止按钮，再按启动按钮</strong>。这个很重要，不然你就得重装了。</li></ul><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ul><li><p>Andorid 端用 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Nvbm5lY3Rib3QvY29ubmVjdGJvdC9yZWxlYXNlcw==">ConnectBox<i class="fa fa-external-link-alt"></i></span></p></li><li><p>Windows用  <span class="exturl" data-url="aHR0cHM6Ly93d3cuY2hpYXJrLmdyZWVuZW5kLm9yZy51ay9+c2d0YXRoYW0vcHV0dHkvbGF0ZXN0Lmh0bWw=">putty<i class="fa fa-external-link-alt"></i></span> ，图形界面用 <span class="exturl" data-url="aHR0cHM6Ly93d3cucmVhbHZuYy5jb20vZW4vY29ubmVjdC9kb3dubG9hZC92aWV3ZXIv">VNC Viewer<i class="fa fa-external-link-alt"></i></span>。VNC Viewer 直接搜主机IP就行，VNC Server 在你选择安装图形界面功能时就自动安装了，不需要再安装 vnc4server。</p></li><li><p>Linux 输入<code>ssh username@hostname</code>就行。</p></li></ul><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul><li><p>安装后如果用 vnc viewer 只有一个点的话，可以换一个发行版，我尝试的 CentOS 有这个问题。</p></li><li><p>Linux连的时候出现 <code>WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!</code>：</p>   <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -R + 输入服务器的IP</span><br></pre></td></tr></table></figure></li><li><p>altarch 架构的手机 CentOS 系统换源</p>   <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cp CentOS-7-armhfp.repo CentOS-Base.repo</span><br><span class="line">mv CentOS-7-armhfp.repo CentOS-7-armhfp.repo.backup</span><br><span class="line">vi CentOS-Base.repo</span><br><span class="line">baseurl=https://mirrors.ustc.edu.cn/centos-altarch/7.6.1810/os/armhfp/</span><br><span class="line">yum makecache</span><br><span class="line">yum update</span><br></pre></td></tr></table></figure></li><li><p><strong>如果你之前没有安装VNC的话，现在又想装：</strong></p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install tigervnc-server</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;这是一篇旧文章，做个记录。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Unix" scheme="https://vanehsiung.netlify.app/tags/Unix/"/>
    
  </entry>
  
  <entry>
    <title>Conversation</title>
    <link href="https://vanehsiung.netlify.app/2020/11/21/Conversation/"/>
    <id>https://vanehsiung.netlify.app/2020/11/21/Conversation/</id>
    <published>2020-11-21T10:37:12.000Z</published>
    <updated>2021-02-22T04:23:01.792Z</updated>
    
    <content type="html"><![CDATA[<img data-src="/2020/11/21/Conversation/The%20Silent%20League.jpg" class="" title="The Silent League"><blockquote class="blockquote-center"><p>Just a little conversation<br>About give me your picture<br>On the cover of a magazine<br>On the cover of a magazine<br>Just a little conversation<br>But how long it might take one?<br>To get along with such thing?<br>To get along with such thing?<br>But everybody knows<br>It’s easier to fall apart<br>Just a little conversation<br>About give me your picture<br>On the cover of a magazine<br>On the cover of a magazine</p></blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=298 height=52 src="//music.163.com/outchain/player?type=2&id=3716423&auto=0&height=32"></iframe>]]></content>
    
    
      
      
    <summary type="html">&lt;img data-src=&quot;/2020/11/21/Conversation/The%20Silent%20League.jpg&quot; class=&quot;&quot; title=&quot;The Silent League&quot;&gt;

&lt;blockquote class=&quot;blockquote-center</summary>
      
    
    
    
    
    <category term="Lyrics" scheme="https://vanehsiung.netlify.app/tags/Lyrics/"/>
    
  </entry>
  
  <entry>
    <title>FreeBSD</title>
    <link href="https://vanehsiung.netlify.app/2020/11/17/FreeBSD/"/>
    <id>https://vanehsiung.netlify.app/2020/11/17/FreeBSD/</id>
    <published>2020-11-17T11:55:35.000Z</published>
    <updated>2021-02-22T04:23:01.792Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>FreeBSD 計劃的目標在於提供可作任意用途的軟體而不附帶任何限制條文。 我們之中許多人對程式碼 (以及計畫本身) 都有非常大的投入， 因此，當然不介意偶爾有一些資金上的補償，但我們並沒打算堅決地要求得到這類資助。 我們認為我們的首要“使命”是為任何人提供程式碼， 不管他們打算用這些程式碼做什麼， 因為這樣程式碼將能夠被更廣泛地使用，從而發揮其價值。 我認為這是自由軟體最基本的，同時也是我們所倡導的一個目標。</p><p>我們程式碼樹中，有若干是以 GNU 通用公共授權條款 (GPL) 或者 GNU 較寬鬆通用公共授權條款 (LGPL) 發佈的那些程式碼帶有少許的附加限制，還好只是強制性的要求開放程式碼而不是別的。 由於使用 GPL 的軟體在商業用途上會增加若干複雜性，因此，如果可以選擇的話， 我們會比較喜歡使用限制相對更寬鬆的 BSD 版權來發佈軟體。</p><footer><strong>Jordan Hubbard</strong><cite><span class="exturl" data-url="aHR0cHM6Ly93d3cuZnJlZWJzZC5vcmcvZG9jL3poX1RXL2Jvb2tzL2hhbmRib29rLw==">FreeBSD Handbook<i class="fa fa-external-link-alt"></i></span></cite></footer></blockquote><a id="more"></a><h3 id="Install-FreeBSD"><a href="#Install-FreeBSD" class="headerlink" title="Install FreeBSD"></a>Install FreeBSD</h3><h5 id="BIOS"><a href="#BIOS" class="headerlink" title="BIOS"></a>BIOS</h5><p>Disable unused and unwanted options.</p><h5 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h5><ul><li><p>To put the image on the pendrive we will use the dd tool available on almost any Mac OS X (macOS) and Linux system. For Windows You will have to download it from here – <span class="exturl" data-url="aHR0cDovL3d3dy5jaHJ5c29jb21lLm5ldC9kZA==">dd for windows<i class="fa fa-external-link-alt"></i></span>( bs=1M on Linux/Windows ).（可用 Rufus 替代）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dd if=FreeBSD-11.1-RELEASE-amd64-memstick.img of=/dev/da1 bs=1m</span><br></pre></td></tr></table></figure></li><li><p>When we have a new machine there is always a problem with new name for it. The RFC 1178 <span class="exturl" data-url="aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzExNzg=">Choosing a Name for Your Computer<i class="fa fa-external-link-alt"></i></span> from 1990 year tries to address that issue </p></li></ul><ul><li>We will use ZFS because we want to use Boot Environments with sysutils/beadm port.<ul><li>Hit [ENTER] on the <code>Pool Type/Disks</code> to select target disk to install FreeBSD on.</li><li>Now (in FreeBSD 12.x) it is possible to install FreeBSD on GELI encrypted root on ZFS pool without any additional partitions or filesystems. You need to select is <code>Yes</code> for the <code>Encryption</code> part .</li><li>I advice using <code>GPT (BIOS+UEFI)</code> as it will support both system types so when you are running BIOS system now and will move the disk to other system that boots with UEFI it will also just work out of the box.</li><li>We will set SWAP size to <code>0</code> (no SWAP) as it will not be needed. If we will need SWAP in the future, then we will create ZVOL on ZFS and use it as a SWAP device.</li></ul></li></ul><img data-src="/2020/11/17/FreeBSD/freebsd-install-03.png" class="" title="FreeBSD"><ul><li>Select services as shown below.</li></ul><img data-src="/2020/11/17/FreeBSD/freebsd-11-1-laptop-install-23.png" class="" title="FreeBSD"><ul><li>Enable all security hardening features as shown below.</li></ul><img data-src="/2020/11/17/FreeBSD/freebsd-11-1-laptop-install-24.png" class="" title="FreeBSD"><h3 id="X11-Window-System"><a href="#X11-Window-System" class="headerlink" title="X11 Window System"></a>X11 Window System</h3><p>X 最初設計是以網路為中心，採用 “client-server” 架構。在此架構下 “X 伺服器” 在有鍵盤、螢幕、滑鼠的電腦上運作。該伺服器負責的工作包含管理顯示、處理來自鍵盤、滑鼠的輸入及來自其他設備)的輸入或輸出。</p><p>每個 X 應用程式，如 XTerm、Firefox 都是 “客戶端”。</p><p>視窗管理程式規定螢幕上的視窗該長什麼樣、要如何移動滑鼠指標、 要用什麼鍵來在視窗切換、每個視窗的標題列長相，及是否該有關閉按鈕，等等。視窗管理程式負責滑鼠指標的聚焦政策。 聚焦政策指的是如何決定使用中及接收鍵盤輸入的視窗。通常較為人熟悉的聚焦政策叫做 “click-to-focus”，這個模式中，滑鼠點選到的視窗便會處於作用中 (Active) 的狀態。</p><p>KDE 與 GNOME 會被稱作桌面環境是因為包含了完整常用桌面作業的應用程式。</p><h5 id="BIOS-or-UEFI"><a href="#BIOS-or-UEFI" class="headerlink" title="BIOS or UEFI"></a>BIOS or UEFI</h5><p>If you find a device that is not supported by any ‘accelerated’driver like <code>intel</code> or <code>nvidia</code>. You would use <code>vesa</code> driver (Video Electronics Standards Association) while booting in BIOS mode and You will use <code>scfb</code> driver (System Console Frame Buffer) while booting on UEFI mode. This can be checked by </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sysctl machdep.bootmethod</span><br></pre></td></tr></table></figure><h5 id="Packages"><a href="#Packages" class="headerlink" title="Packages"></a>Packages</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pkg install xorg</span><br></pre></td></tr></table></figure><h5 id="Xorg-Configuration"><a href="#Xorg-Configuration" class="headerlink" title="Xorg Configuration"></a>Xorg Configuration</h5><ul><li><p>顯示卡、顯示器以及輸入裝置會自動偵測，無須任何手動設置。除非自動設置失敗，否則請勿建立 xorg.conf 或執行 -configure 步驟。</p></li><li><p>加入要執行 Xorg 的使用者到 <code>video</code> 或 <code>wheel</code> 群組，以便在可用時能開啟 3D 加速。要加入使用者 <em><code>jru</code></em> 到任一個可用的群組：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pw groupmod video -m jru || pw groupmod wheel -m jru</span><br></pre></td></tr></table></figure></li><li><p>Login Class(可解决中文乱码，powershell 字符显示方形)</p><p>  Add this login class to the <code>/etc/login.conf</code> file.</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">video:\</span><br><span class="line">        :charset=UTF-8:\</span><br><span class="line">        :lang=en_US.UTF-8:\</span><br><span class="line">        :tc=default:</span><br></pre></td></tr></table></figure><p>  Rebuild the login class database.</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cap_mkdb /etc/login.conf</span><br></pre></td></tr></table></figure><p>  Lets set the login class to video for the vuk user.</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pw usermod -L video -n vuk</span><br></pre></td></tr></table></figure><p>  How the account looks after setting the login class.</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo grep vuk /etc/master.passwd</span><br><span class="line">vuk:&#123;REMOVED&#125;:1000:1000:video:0:0:vuk:/home/vuk:/bin/sh</span><br></pre></td></tr></table></figure><p>  Now logout and login again to make that work. View the changes through the <code>locale</code> command.</p></li><li><p>显卡驱动：使用多檔，每一個檔案只設定一個指定項目會較傳統使用單一 <code>/etc/X11/xorg.conf</code> 設定來的簡單。完整路徑為 <code>/usr/local/etc/X11/xorg.conf.d/</code>。（安装 intel 显卡驱动与 nvidia 驱动难，scfb 与 vesa 驱动无法调整分辨率）</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /usr/local/etc/X11/xorg.conf.d/driver-intel.conf</span><br><span class="line">Section &quot;Device&quot;</span><br><span class="line">    Identifier &quot;Card0&quot;</span><br><span class="line">    Driver     &quot;scfb&quot;</span><br><span class="line">    BusID    &quot;PCI:0:2:0&quot;</span><br><span class="line">EndSection</span><br></pre></td></tr></table></figure><p>  若有多張顯示卡，可取消註解 <code>BusID</code> identifier 然後設定為想要的顯示卡，顯示卡的 Bus ID 清單可以使用 <code>pciconf -lv | grep -B3 display</code> 取得。</p></li><li><p>手動設定</p><ul><li><p>設定檔可由 Xorg 根據偵測到的硬體產生，這個檔案對一開始自訂設定很有幫助。</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Xorg -configure</span><br></pre></td></tr></table></figure></li><li><p>設定檔會儲存至 <code>/root/xorg.conf.new</code>，做任何需要的更改，然後使用以下指令測試該檔案：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Xorg -config /root/xorg.conf.new</span><br></pre></td></tr></table></figure><p>  在新設定檔調整與測試過後，便可分開成較小的檔案放置到正常的位置 <code>/usr/local/etc/X11/xorg.conf.d/</code>。</p></li></ul></li></ul><h5 id="Install-Desktop-Enviroment"><a href="#Install-Desktop-Enviroment" class="headerlink" title="Install Desktop Enviroment"></a>Install Desktop Enviroment</h5><ul><li><p>FreeBSD 桌面发行版</p><ul><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuZ2hvc3Ric2Qub3JnLw==">GhostBSD<i class="fa fa-external-link-alt"></i></span> 是 FreeBSD 桌面发行版，注意使用 Official 版本，不能直接使用 FreeBSD 源升级。</li><li><span class="exturl" data-url="aHR0cHM6Ly9ub21hZGJzZC5vcmcv">nomadbsd<i class="fa fa-external-link-alt"></i></span> 是个非常漂亮的 FreeBSD 桌面发行版 ，德国产。</li><li>可以在虚拟机里面安装 FreeBSD 桌面发行版，然后找到自己想用的桌面工具，再定制自己的 FreeBSD 桌面。</li></ul></li><li><p>Install Desktop Environment</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo pkg install gnome3</span><br><span class="line">sudo pkg install gnome3-lite</span><br><span class="line">sudo pkg install x11/kde5</span><br><span class="line">sudo pkg install xfce</span><br><span class="line">sudo pkg install mate</span><br></pre></td></tr></table></figure></li><li><p>Install/Enable Display Manager: You have to decide how You want to start your X11 Window Server, you may login in plan text console and then type <code>xinit</code> or <code>startx</code> to read your <code>~/.xinitrc</code> configuration and daemons (The difference between <code>xinit</code> and <code>startx</code> is that <code>startx</code> command executes <code>xinit</code> command with arguments.) or You may want to use X11 Login manager such as <code>xdm/sddm/slim</code> with <code>~/.xsession</code> configuration to load after successful login. </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo pkg install xdm</span><br><span class="line">sudo pkg install slim# xfce,mate，slim 有个 slim-themes 软件包</span><br><span class="line">sudo pkg install x11/sddm# kde</span><br></pre></td></tr></table></figure><p>While <code>xinit</code> run commands based on the <code>~/.xinitrc</code> file the XDM login manager looks for the <code>~/.xsession</code> file. As You will be loading same stuff regardless of the startup method we will create a link of <code>~/.xsession</code> pointing to the <code>~/.xinitrc</code> file. This way either method You choose You will always end with started X11 session.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s ~/.xinitrc ~/.xsession</span><br></pre></td></tr></table></figure><p>One more case about the <code>~/.xinitrc</code> (or <code>~/.xsession</code>) file. It is interpreted as a shell script (and yes you can do <code>if/then/else/fi</code> and <code>case/esac</code> or <code>for/while</code> POSIX shell scripting in it) but it does not need to be executable. The last command in this file MUST NOT to be put in the background (must be without the <code>&amp;</code> char at the end) because the X11 session will end.</p></li><li><p>Setting</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/ttys# xdm</span><br><span class="line">ttyv8   &quot;/usr/local/bin/xdm -nodaemon&quot;  xterm  on secure</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/fstab# gnome, kde</span><br><span class="line">proc           /proc       procfs  rw  0   0</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/rc.conf</span><br><span class="line">moused_enalbe=&quot;YES&quot;</span><br><span class="line">dbus_enable=&quot;YES&quot;# gnome, kde, xfce</span><br><span class="line">hald_enable=&quot;YES&quot;# gnome, kde, mate</span><br><span class="line">gdm_enalbe=&quot;YES&quot;# gnome 启动</span><br><span class="line">sddm_enable=&quot;YES&quot;# kde 启动</span><br><span class="line">slim_enable=&quot;YES&quot;# xfce,mate</span><br><span class="line">gnome_enable=&quot;YES&quot;# gnome 服务</span><br></pre></td></tr></table></figure></li><li><p>slim Usage(Failed to execute login command)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo vi ~/.xinitrc</span><br><span class="line">exec mate-session# mate</span><br><span class="line">exec xfce4-session# xfce</span><br></pre></td></tr></table></figure><h5 id="Components"><a href="#Components" class="headerlink" title="Components"></a>Components</h5></li><li><p>Window Manager: <span class="exturl" data-url="aHR0cDovL29wZW5ib3gub3JnL3dpa2kvTWFpbl9QYWdl">Openbox<i class="fa fa-external-link-alt"></i></span>…</p></li><li><p>Status Bar: Also known as information bar, the place on the screen that would provide You needed information such as current date and time, CPU, RAM and storage usage, current network information or battery status.</p><ul><li><p>While <code>Xmobar</code> is nice solution it comes with about 2 GB of dependencies of Haskell and Haskell libraries.</p></li><li><p>While <code>Polybar</code> can look very nice on screenshots it is a lot more heavy on resources and is limited only to modules/features that were implemented in it.</p><img data-src="/2020/11/17/FreeBSD/openbox-polybar.jpg" class="" title="FreeBSD"></li><li><p>I have used <code>Conky</code> for quite long time but after recent tests I made <code>Dzen2</code> is a lot less on resources then Conky while doing the same thing. </p></li></ul></li><li><p>Task Bar: A taskbar is an element of a graphical user interface which has various purposes. It typically shows which programs are currently running.</p><ul><li><p>You can use classic taskbar like <code>XFCE Panel</code> used in the XFCE desktop environment.</p><img data-src="/2020/11/17/FreeBSD/taskbar-xfce.png" class="" title="FreeBSD"></li><li><p>You can also configure <code>Tint2</code> that way. But it only shows applications that are active on the current desktop.</p><img data-src="/2020/11/17/FreeBSD/taskbar-tint-classic.jpg" class="" title="FreeBSD"></li><li><p>One of the greatest taskbars of all time was/is the Mac OS X Dock (now macOS Dock).  It also has an indicator showing if application is launched. Currently the best and lightest solution for providing the dock-like functionality on open desktops seems to be <code>Plank</code>.</p><img data-src="/2020/11/17/FreeBSD/taskbar-plank-eos.png" class="" title="FreeBSD"></li></ul></li><li><p>Application Launcher: While not being any crucial role of the desktop environment it have its uses and sometimes save time.</p><p>Lets start with resources, the <code>Rofi</code> implementation of application launcher uses almost 3 times more RAM  then <code>Dmenu</code> solution.</p><ul><li><p>Desktop with Dmenu launched and with <code>alc</code> characters inserted to ‘filter’ commands in the search of a calculator application.</p><img data-src="/2020/11/17/FreeBSD/launcher-dmenu-run.jpg" class="" title="FreeBSD"></li><li><p>The Rofi requires simple command.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rofi -show run -theme solarized_alternate -font &quot;Monaco 8&quot;</span><br></pre></td></tr></table></figure><img data-src="/2020/11/17/FreeBSD/launcher-rofi.jpg" class="" title="FreeBSD"></li></ul></li><li><p>Blue Light Spectrum Suppress: Automatically adjusts color temperature of the screen according to your current time in your location.</p><ul><li><p>While <span class="exturl" data-url="aHR0cHM6Ly9qdXN0Z2V0Zmx1eC5jb20v">F.lux<i class="fa fa-external-link-alt"></i></span>  (closed source) does not provide a native binary for FreeBSD it does offer such binary for Linux and as FreeBSD provides Linux Binary Compatibility its possible to use it on FreeBSD. To use F.lux just start it in the <code>~/.xinitrc</code> or <code>~/.xsession</code> file like that.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/path/to/bin/xflux -l 33.54321 -g 11.12345 &amp;</span><br></pre></td></tr></table></figure><p>Of course 33.54321 is latitude and 11.12345 is longitude of your localization.</p></li><li><p><code>Redshift</code> is the solution that I propose to use as open source blue light spectrum suppressor. Similarly like with the F.lux to start Redshift just put it in the <code>~/.xinitrc</code> or <code>~/.xsession</code> file like that.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redshift -l 33.54321:11.12345 -g 0.9 &amp;</span><br></pre></td></tr></table></figure></li><li><p>Someone else suggested trying <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FtaXIvc2N0ZA==">sctd<i class="fa fa-external-link-alt"></i></span> which is sct but rewritten/modified to be a daemon that will automatically change the color temperature during the day (or night). The sctd uses smaller about of RAM memory, uses less libraries and size of these libraries is smaller then what redshfit needs. </p></li></ul></li></ul><h3 id="Binary-套件"><a href="#Binary-套件" class="headerlink" title="Binary 套件"></a>Binary 套件</h3><p>搜寻软件：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZnJlZWJzZC5vcmcvcG9ydHMvaW5kZXguaHRtbA==">FreeBSD Ports<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly93d3cuZnJlc2hwb3J0cy5vcmcv">FreshPorts<i class="fa fa-external-link-alt"></i></span></p><p>因編譯選項不同，有些 Port 會有多個版本可使用。</p><ul><li><p><span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnVzdGMuZWR1LmNuL2hlbHAvZnJlZWJzZC1wa2cuaHRtbA==">USTC Mirrors<i class="fa fa-external-link-alt"></i></span>：注意使用 Latest 源，有很多流行软件。创建 <code>/usr/local/etc/pkg/repos/FreeBSD.conf</code> 覆盖官方源 <code>/etc/pkg/FreeBSD.conf</code> 配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /usr/local/etc/pkg/repos/FreeBSD.conf</span><br><span class="line">FreeBSD: &#123;</span><br><span class="line">  url: &quot;pkg+http://mirrors.ustc.edu.cn/freebsd-pkg/$&#123;ABI&#125;/latest&quot;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sudo pkg update -f# 更新索引</span><br></pre></td></tr></table></figure></li><li><p><span class="exturl" data-url="aHR0cDovL21pcnJvcnMuMTYzLmNvbS9mcmVlYnNkLXBrZy9GcmVlQlNEJTNhMTIlM2FhbWQ2NC9sYXRlc3Qv">163 Mirrors<i class="fa fa-external-link-alt"></i></span></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url: &quot;pkg+http:&#x2F;&#x2F;mirrors.163.com&#x2F;freebsd-pkg&#x2F;$&#123;ABI&#125;&#x2F;latest&quot;,</span><br></pre></td></tr></table></figure></li><li><p>要啟動 (Bootstrap) 系統，請執行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /usr/sbin/pkg</span><br></pre></td></tr></table></figure></li><li><p>當升級原使用舊版 pkg_* 工具的既有系統時，必須將資料庫轉換成新的格式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pkg2ng</span><br></pre></td></tr></table></figure></li><li><p>Update the available remote repositories as listed in pkg.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pkg update</span><br></pre></td></tr></table></figure></li><li><p>Search for a package</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pkg search perl</span><br></pre></td></tr></table></figure></li><li><p>在指定要安裝的套件時，最好使用 Port 來源來指定該應用程式，Port 來源是指應用程式在 Port 樹中的路徑</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pkg search -o perl</span><br></pre></td></tr></table></figure></li><li><p>Install a package: Installing must specify a unique origin or version otherwise it will try installing all matches</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pkg install perl-5.14</span><br></pre></td></tr></table></figure></li><li><p>列出已經安裝的 Port 中有那些已過時</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pkg version -l &quot;&lt;&quot;</span><br></pre></td></tr></table></figure></li><li><p>Upgrade from remote repository</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pkg upgrade</span><br></pre></td></tr></table></figure></li><li><p>Delete an installed package</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pkg delete perl-5.14</span><br></pre></td></tr></table></figure></li><li><p>Remove unneeded dependencies</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pkg autoremove</span><br></pre></td></tr></table></figure></li><li><p>List installed packages</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pkg info</span><br></pre></td></tr></table></figure></li><li><p>Display information about installed packages</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pkg info perl-5.14</span><br></pre></td></tr></table></figure></li><li><p>Show the pkg-message of a package</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pkg info -D perl-5.14</span><br></pre></td></tr></table></figure></li><li><p>要查詢已安在系統上的軟體是否有任何已知的漏洞</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pkg audit -F</span><br></pre></td></tr></table></figure></li><li><p>因為相依所安裝的套件稱作自動 (Automatic) 套件，而非自動套件即套件被安裝的原因不是因為其他套件所相依</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pkg prime-list# deprecated</span><br></pre></td></tr></table></figure></li><li><p>Clean the local cache of fetched remote packages</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pkg clean</span><br></pre></td></tr></table></figure></li><li><p>Packages</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pkg install linux-sublime3</span><br><span class="line">sudo pkg install mysql180-server mysql180-client</span><br></pre></td></tr></table></figure></li></ul><h3 id="Port-套件"><a href="#Port-套件" class="headerlink" title="Port 套件"></a>Port 套件</h3><p>優點：</p><ul><li>可更改編譯選項</li><li>部份軟體的授權條款中禁止以 Binary 格式發佈。 這種軟體必須以原始碼發佈並由終端使用者編譯。</li><li>原始碼可套用自訂的修補。</li></ul><p>Port 中並不含實際的原始碼，在編譯 Port 解壓縮時會自動下載的原始碼到 <code>/usr/ports/distfiles</code>。</p><ul><li><p><span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnVzdGMuZWR1LmNuL2hlbHAvZnJlZWJzZC1wb3J0cy5odG1s">USTC Mirrors<i class="fa fa-external-link-alt"></i></span>：在 <code>/etc/make.conf</code> 中添加以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MASTER_SITE_OVERRIDE?&#x3D;http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;freebsd-ports&#x2F;distfiles&#x2F;$&#123;DIST_SUBDIR&#125;&#x2F;</span><br></pre></td></tr></table></figure></li><li><p><span class="exturl" data-url="aHR0cDovL21pcnJvcnMuMTYzLmNvbS9mcmVlYnNkLXBvcnRzL2Rpc3RmaWxlcy8=">163 Mirrors<i class="fa fa-external-link-alt"></i></span></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MASTER_SITE_OVERRIDE?&#x3D;http:&#x2F;&#x2F;mirrors.163.com&#x2F;freebsd-ports&#x2F;distfiles&#x2F;$&#123;DIST_SUBDIR&#125;&#x2F;</span><br></pre></td></tr></table></figure></li><li><p>安裝 Port 套件集：下載壓縮後的 Port 套件集快照 (Snapshot) 到 /var/db/portsnap</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo portsnap fetch</span><br></pre></td></tr></table></figure></li><li><p>第一次執行 Portsnap 時，要先解壓縮快照到 /usr/ports</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo portsnap extract</span><br></pre></td></tr></table></figure></li><li><p>執行以下指令來更新 /usr/ports</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo portsnap fetch</span><br><span class="line">sudo portsnap update</span><br></pre></td></tr></table></figure></li><li><p>要找到 Port 所在的分類</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo whereis lsof</span><br></pre></td></tr></table></figure></li><li><p>使用 Port 套件集內建的搜尋機制來找軟體</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo cd /usr/ports</span><br><span class="line">sudo make search name=lsof</span><br><span class="line">sudo make quicksearch name=lsof# 不接受多資訊</span><br></pre></td></tr></table></figure></li><li><p>若要進行更有深度的搜尋</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo make search key=string</span><br><span class="line">sudo make quicksearch key=string</span><br></pre></td></tr></table></figure></li><li><p>一次設定所有Port 編譯選項</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make config-recursive</span><br></pre></td></tr></table></figure></li><li><p>重新進入 Port 的編譯選項清單</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo make config# or</span><br><span class="line">sudo make showconfig# or</span><br><span class="line">sudo make rmconfig</span><br></pre></td></tr></table></figure></li><li><p>編譯並安裝 Port</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo cd /usr/ports/sysutils/lsof</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure></li><li><p>編譯在 /usr/ports Port 並安裝到 /usr/home/example/local</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make WRKDIRPREFIX=../ports PREFIX=../local install</span><br></pre></td></tr></table></figure></li><li><p>安裝過程中會建立工作用的子目錄用來儲存編譯時暫存的檔案。可移除此目錄來節省磁碟空間並漸少往後升級新版 Port 時造成問題</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make clean</span><br></pre></td></tr></table></figure></li><li><p>移除已安裝的 Port</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo cd /usr/ports/sysutils/lsof</span><br><span class="line">sudo make deinstall</span><br></pre></td></tr></table></figure></li><li><p>Example</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/ports/java/linux-oracle-jdk18</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>安裝後的注意事項：</p></li><li><p>大部份應用程式安裝會在 <code>/usr/local/etc</code> 安裝至少一個預設的設定檔。</p></li><li><p>應用程式提供的文件會安裝到 <code>/usr/local/share/doc</code>。</p></li><li><p>部份應用程式會以服務的方式執行，在啟動應用程式前前需要加入設定到 <code>/etc/rc.conf</code>。這些應用程式通常會安裝啟動 Script 到 <code>/usr/local/etc/rc.d</code>。</p></li></ul><h3 id="Linux®-Binary-相容性"><a href="#Linux®-Binary-相容性" class="headerlink" title="Linux® Binary 相容性"></a>Linux® Binary 相容性</h3><p>FreeBSD 提供 Linux® Binary 的相容性，允許使用者在 FreeBSD 系統上不需要修改就可以安裝和執行大部份的 Linux® Binary。</p><p>最好不要直接安装 Linux 的软件，而使用 FreeBSD 源中的 Linux 软件，一般以 <code>linux-package</code> 命名。</p><ul><li><p>載入 Linux® 核心模組</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo kldload linux</span><br></pre></td></tr></table></figure></li><li><p>對 64-位元的相容性</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo kldload linux64</span><br></pre></td></tr></table></figure></li><li><p>確認模組已載入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo kldstat</span><br></pre></td></tr></table></figure></li><li><p>安裝基本的 Linux® 程式庫和 Binary</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pkg install emulators/linux_base-c7</span><br></pre></td></tr></table></figure></li><li><p>Add the following line</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/fstab</span><br><span class="line">linprocfs   /compat/linux/proclinprocfsrw00</span><br><span class="line">linsysfs    /compat/linux/syslinsysfsrw00</span><br><span class="line">tmpfs    /compat/linux/dev/shmtmpfsrw,mode=177700</span><br></pre></td></tr></table></figure></li><li><p>開機時開啟 Linux® 相容性</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/rc.conf</span><br><span class="line">linux_enable=&quot;YES&quot;</span><br></pre></td></tr></table></figure></li><li><p>安裝 Linux® ELF Binary</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo brandelf -t Linux my-linux-elf-binary</span><br></pre></td></tr></table></figure></li><li><p>安裝以 Linux® RPM 為基礎的應用程式,需先安裝 archivers/rpm4 套件或 Port</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo pkg install rpm4</span><br><span class="line">sudo cd /compat/linux</span><br><span class="line">sudo rpm2cpio &lt; /path/to/linux.archive.rpm | cpio -id</span><br></pre></td></tr></table></figure></li></ul><h5 id="手動安裝其他程式庫"><a href="#手動安裝其他程式庫" class="headerlink" title="手動安裝其他程式庫"></a>手動安裝其他程式庫</h5><ul><li><p>在 Linux® 系統，可使用 ldd 來找出應用程式需要哪個共用程式庫</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ldd linuxdoom</span><br><span class="line">libXt.so.3 (DLL Jump 3.1) =&gt; /usr/X11/lib/libXt.so.3.1.0</span><br></pre></td></tr></table></figure></li><li><p>複製 Linux® 系統輸出結果中最後一欄需要的的檔案到 FreeBSD 系統的 /compat/linux。 複製完後，建立符號連結 (Symbolic link) 至輸出結果第一欄的名稱</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;compat&#x2F;linux&#x2F;usr&#x2F;X11&#x2F;lib&#x2F;libXt.so.3.1.0</span><br><span class="line">&#x2F;compat&#x2F;linux&#x2F;usr&#x2F;X11&#x2F;lib&#x2F;libXt.so.3 -&gt; libXt.so.3.1.0</span><br></pre></td></tr></table></figure><h3 id="自訂核心"><a href="#自訂核心" class="headerlink" title="自訂核心"></a>自訂核心</h3></li></ul><h5 id="為何要編譯自訂的核心"><a href="#為何要編譯自訂的核心" class="headerlink" title="為何要編譯自訂的核心?"></a>為何要編譯自訂的核心?</h5><p> 自訂核心有許多項優點，如：</p><ul><li>加速開機，因為自訂的核心只需要偵測您系統上存在的硬體，所以讓啟動所花的過程更流暢快速。</li><li>減少記憶體使用，自訂的核心通常會比 <code>GENERIC</code> 核心使用更少的記憶體，這很重要，因為核心必須一直存放在實體記憶體內。</li><li>支援額外的硬體，自訂的核心可以增加一些 <code>GENERIC</code> 核心沒有提供的硬體支援。</li></ul><h5 id="偵測系統硬體"><a href="#偵測系統硬體" class="headerlink" title="偵測系統硬體"></a>偵測系統硬體</h5><ul><li><p> <code>dmesg</code>  or <code>/var/run/dmesg.boot</code> or <code>/var/log/messages</code></p></li><li><p><code>pciconf -lv</code></p></li><li><p>在 man指令加上 -k 旗標可列出有包含指定裝置品牌或名稱的手冊頁面清單：<code>man -k Intel</code></p></li></ul><h5 id="設定檔"><a href="#設定檔" class="headerlink" title="設定檔"></a>設定檔</h5><p><code>/usr/src/sys</code> 下子目錄代表著支援的硬體架構 (Architecture)，每個支援的硬體架構中會有 <code>conf</code> 子目錄，裡面含有供該架構使用的 <code>GENERIC</code> 核心設定檔。</p><p>說明在<code>GENERIC</code> 同目錄的 <code>NOTES</code> 檔案中。所有架構通用選項，參考 <code>/usr/src/sys/conf/NOTES</code>。</p><h3 id="备份与恢复"><a href="#备份与恢复" class="headerlink" title="备份与恢复"></a><span class="exturl" data-url="aHR0cHM6Ly93d3cuZnJlZWJzZC5vcmcvZG9jL2hhbmRib29rL2JhY2t1cC1iYXNpY3MuaHRtbA==">备份与恢复<i class="fa fa-external-link-alt"></i></span></h3><h5 id="dump-amp-restore"><a href="#dump-amp-restore" class="headerlink" title="dump &amp; restore"></a>dump &amp; restore</h5><p>FreeBSD 系统的备份就是对系统文件的打包，然后放到一个安全的地方，使用的打包工具是 <code>dump</code>；FreeBSD 系统的恢复就是把你保存好的系统文件从安全的地方里面拿出来放到你的硬盘上去，使用的恢复工具是 <code>restore</code>；</p><ul><li><p>需要备份的目录：</p><ul><li><code>/</code> 这个目录存放很多基本工具，包括内核，需要备份；</li><li><code>/home</code> 用户数据，需要备份；</li><li><code>/usr</code> 很多工具以及系统的源代码都放在这里面，需要备份；</li><li><code>/usr/local</code> 所有安装的软件基本上都在这里，需要备份；</li><li><code>/var</code> 系统的日志，ports系统的数据库，需要备份；</li></ul></li><li><p>备份方法：以 <code>/</code> 目录为例，把移动硬盘挂载在 <code>/mnt/fender_01</code> 目录，<code>/</code> 目录对应硬盘上面的 <code>/dev/ad12s1a</code> 分区，备份整个目录的命令如下：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dump -0Lauf /mnt/fender_01/dump/ad12sa1.dump /dev/ad12s1a</span><br></pre></td></tr></table></figure><ul><li>-0 备份所有的文件系统中的内容，也就是不使用增量备份；</li><li>-f 指定备份结果存放的文件名；</li><li>-a 告诉 dump 不考虑备份的介质的大小问题，早期备份使用磁带，dump 会预先计算一下需要的空间，使用这个选项告诉 dump 忽略这个问题；</li><li>-u 告诉 dump 更新一下 /etc/dumpdates，这个文件记录了你在系统上搜有的备份活动；</li><li>-L 备份已经挂载的文件系统时需要，这个选项会使用 UFS2 的 snapshot 功能来保证文件系统的一致性。</li></ul></li><li><p>恢复方法</p><ul><li><p>恢复 <code>/</code> 以外的目录：以恢复  <code>/home</code> 目录为例，重启系统进入单用户模式，挂载 <code>/tmp</code> 分区，挂载移动硬盘，这时备份生成的文件保存在 <code>/mnt/01/dump/dev/ad12s1h.dump</code>，格式化 <code>/dev/ad12s1h</code>：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">newfs -U /dev/ad12s1h# -U 选型来打开 softupdate</span><br></pre></td></tr></table></figure><p>  挂载这个分区，例如 <code>/mnt/02/</code>，恢复目录：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /mnt/02</span><br><span class="line">restore -rf /mnt/01/dump/ad12s1h.dump</span><br></pre></td></tr></table></figure></li><li><p>恢复 <code>/</code>：因为 restore 在 <code>/</code> 目录中，所以不能使用上面方法恢复 <code>/</code> 目录。解决办法是使用 freebsd_livefs_cd 启动系统。</p></li></ul></li><li><p>备份 MBR</p><ul><li><p>备份</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=/dev/da0 of=/path/to/mbr.img bs=512 count=1</span><br></pre></td></tr></table></figure></li><li><p>恢复</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=/path/to/mbr.img of=/dev/da0 bs=512 count=1</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>参考：<span class="exturl" data-url="aHR0cDovL2Jsb2cuY2hpbmF1bml4Lm5ldC91aWQtMjAzMDYxNjYtaWQtMzE2MDM3Lmh0bWw=">FreeBSD dump 备份<i class="fa fa-external-link-alt"></i></span></p><h5 id="rsync（remote-sync）"><a href="#rsync（remote-sync）" class="headerlink" title="rsync（remote sync）"></a>rsync（remote sync）</h5><p>可以在本地计算机与远程计算机之间，或者两个本地目录之间同步文件，且仅传输有变动的部分。</p><ul><li><p>将源目录同步到目标目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rsync -r source1 source2 destination# -r 表示递归，即包含子目录</span><br><span class="line">rsync -a source/ destination# -a 除了可以递归同步以外，还可以同步元信息（比如修改时间、权限等）</span><br></pre></td></tr></table></figure></li><li><p>排除文件：同步时排除某些文件或目录，这时可以用 <code>--exclude</code> 参数指定排除模式，多个排除模式，可以用多个 <code>--exclude</code> 参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -av --exclude dir source/ destination# 排除所有 TXT 文件</span><br></pre></td></tr></table></figure></li><li><p>增量备份：除了源目录与目标目录直接比较，rsync 还支持使用基准目录，即将源目录与基准目录之间变动的部分，同步到目标目录。<code>--link-dest</code> 参数用来指定同步时的基准目录。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -a --delete --link-dest /compare/path /source/path /target/path</span><br></pre></td></tr></table></figure></li><li><p>远程同步：rsync 默认使用 SSH 进行远程登录和数据传输</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rsync -av source/ username@remote_host:destination# 将本地内容同步到远程服务器</span><br><span class="line">rsync -av username@remote_host:source/ destination# 将远程内容同步到本地</span><br></pre></td></tr></table></figure></li><li><p>使用 rsync 来备份系统</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -aH --delete --exclude dir --link-dest /compare/path source destination</span><br></pre></td></tr></table></figure><ul><li><code>-H</code> 选项用来保持硬链接</li><li>默认情况下，rsync 只确保源目录的所有内容（明确排除的文件除外）都复制到目标目录。它不会使两个目录保持相同，并且不会删除文件。如果你想让那些在源目录里被删除的文件在目标目录里也被删除，那么你可以加上 <code>--delete</code> 选项来删除。<code>--delete</code> 参数会使得 <code>destination</code> 成为 <code>source</code> 的一个镜像。</li></ul></li></ul><p>参考：<span class="exturl" data-url="aHR0cDovL3d3dy5ydWFueWlmZW5nLmNvbS9ibG9nLzIwMjAvMDgvcnN5bmMuaHRtbA==">rsync 用法教程<i class="fa fa-external-link-alt"></i></span>，<span class="exturl" data-url="aHR0cHM6Ly9saW51eC5jbi9hcnRpY2xlLTgyMzctMS5odG1s">使用 rsync 来备份 Linux 系统<i class="fa fa-external-link-alt"></i></span></p><h3 id="Z-檔案系統-ZFS"><a href="#Z-檔案系統-ZFS" class="headerlink" title="Z 檔案系統 (ZFS)"></a>Z 檔案系統 (ZFS)</h3><p>ZFS 的設計目標主要有三個：</p><ul><li>資料完整性：所有資料都會有一個資料的校驗碼 (checksum)，資料寫入時會計算校驗碼然後一併寫入，往後讀取資料時會再計算一次校驗碼，若校驗碼與當初寫入時不相符，便可偵測到資料錯誤，此時若有可用的資料備援 (Data redundancy)，ZFS 會嘗試自動修正錯誤。</li><li>儲存池：實體的儲存裝置都會先被加入到一個儲存池 (Pool)，這個共用的儲存池可用來配置儲存空間，儲存池的空間可被所有的檔案系統使用且透過加入新的儲存裝置來增加空間。</li><li>效能：提供多個快取機制來增加效能。先進、以記憶體為基礎的讀取快取可使用 ARC。第二層以磁碟為基礎的讀取快取可使用 L2ARC，以磁碟為基礎的同步寫入快取則可使用 ZIL。</li></ul><h3 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h3><h5 id="Screen-resolution-on-FreeBSD-on-VirtualBox"><a href="#Screen-resolution-on-FreeBSD-on-VirtualBox" class="headerlink" title="Screen resolution on FreeBSD on VirtualBox"></a>Screen resolution on FreeBSD on VirtualBox</h5><p>问题描述：在virtualbox虚拟机下，无法改变桌面分辨率为1366x768</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage setextradata &quot;FreeBSD&quot; VBoxInternal2/EfiGraphicsResolution 1366x768</span><br></pre></td></tr></table></figure><h5 id="Disable-the-Forward-Back-buttons-on-my-mouse"><a href="#Disable-the-Forward-Back-buttons-on-my-mouse" class="headerlink" title="Disable the Forward/Back buttons on my mouse"></a>Disable the Forward/Back buttons on my mouse</h5><p>问题描述：浏览网页时，鼠标滑轮滚动浏览器就会前进后退。</p><p><span class="exturl" data-url="aHR0cHM6Ly91bml4LnN0YWNrZXhjaGFuZ2UuY29tL3F1ZXN0aW9ucy8yMDU1MC9ob3ctdG8tZGlzYWJsZS10aGUtZm9yd2FyZC1iYWNrLWJ1dHRvbnMtb24tbXktbW91c2U=">Salved<i class="fa fa-external-link-alt"></i></span>：</p><ul><li><p>执行下面命令后，上下滑动鼠标滑轮，看看映射到那些button，一般是buttons 8 and 9</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo xev | grep -A2 ButtonPress</span><br></pre></td></tr></table></figure></li><li><p>then disable button 8 and 9（前提是有上面的问题，否则就不要禁）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo vi ~/.Xmodmap</span><br><span class="line">pointer = 1 2 3 4 5 6 7 0 0 0 0 0</span><br></pre></td></tr></table></figure></li><li><p>test it with the command,command automatically when you log in; if yours doesn’t, arrange for it to run when X starts.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo xmodmap ~/.Xmodmap</span><br></pre></td></tr></table></figure><h5 id="Install-chinese-font"><a href="#Install-chinese-font" class="headerlink" title="Install chinese font"></a>Install chinese font</h5></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pkg install zh-CJKUnifonts# CJK（中日韩统一表意文字）</span><br></pre></td></tr></table></figure><h5 id="设单使用模式为不安全"><a href="#设单使用模式为不安全" class="headerlink" title="设单使用模式为不安全"></a>设单使用模式为不安全</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/ttys</span><br><span class="line">console noneunknown off insecure</span><br></pre></td></tr></table></figure><h5 id="No-space-left-on-device"><a href="#No-space-left-on-device" class="headerlink" title="No space left on device"></a>No space left on device</h5><p>问题描述：使用 pkg update 时提示这个问题。原因是 /tmp is too small。</p><p><span class="exturl" data-url="aHR0cHM6Ly9mb3J1bXMuZnJlZWJzZC5vcmcvdGhyZWFkcy9uby1zcGFjZS1sZWZ0LW9uLWRldmljZS42MTIzMi8=">Salved<i class="fa fa-external-link-alt"></i></span>: </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/fstab</span><br><span class="line">tmpfs/tmptmpfsrw,size=25600000000# size 以Byte为单位</span><br></pre></td></tr></table></figure><h5 id="VirtualBox™-guest-additions"><a href="#VirtualBox™-guest-additions" class="headerlink" title="VirtualBox™ guest additions"></a>VirtualBox™ guest additions</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo cd /usr/ports/emulators/virtualbox-ose-additions &amp;&amp; make install clean</span><br><span class="line"></span><br><span class="line">sudo vi /etc/rc.conf</span><br><span class="line">vboxguest_enable=&quot;YES&quot;</span><br><span class="line">vboxservice_enable=&quot;YES&quot;</span><br><span class="line">vboxservice_flags=&quot;--disable-timesync&quot;# 若有使用 ntpd或 ntpdate，便可關閉主機時間同步功能</span><br></pre></td></tr></table></figure><h5 id="Fish"><a href="#Fish" class="headerlink" title="Fish"></a>Fish</h5><p>Fish 是”the <strong>f</strong>riendly <strong>i</strong>nteractive <strong>sh</strong>ell”的简称，最大特点就是方便易用。</p><p>Fish 会自动在光标后面给出建议，表示可能的选项，颜色为灰色。如果采纳建议，可以按下<code>→</code>或<code>Control + F</code>。如果只采纳一部分，可以按下<code>Alt + →</code>。</p><p>输入命令时，Fish 会自动显示匹配的上一条历史记录。如果没有匹配的历史记录，Fish 会猜测可能的结果，自动补全各种输入。</p><h5 id="How-to-start-things-at-boot-time"><a href="#How-to-start-things-at-boot-time" class="headerlink" title="How to start things at boot time"></a><span class="exturl" data-url="aHR0cDovL3d3dy5mcmVlYnNkZGlhcnkub3JnLw==">How to start things at boot time<i class="fa fa-external-link-alt"></i></span></h5><ul><li><p>主流的桌面环境都自带应用程序自启动设置程序。</p></li><li><p>These directories are defined in <code>/etc/defaults/rc.conf</code>（主要是运行脚本）</p><ul><li><p>Default startup directory is <code>/usr/local/etc/rc.d/</code>. if you need the files to be executed in a specific order, try numbering the files. For example:</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">000This.Will.Run.First.sh</span><br><span class="line">020This.Will.Run.Next.sh</span><br><span class="line">030And.Then.This.sh</span><br></pre></td></tr></table></figure></li><li><p>deprecated: <code>/etc/rc.local</code>        </p></li></ul></li></ul><ul><li><p>DSBAutostart is a Qt program that allows you to add commands to be executed at session start.</p><p>（本质就是在 <code>.xinitrc</code> 调用程序指令，GUI 程序开机启动都需放入 <code>.xinitrc</code>，在 Xorg 启动后运行）</p><ul><li><p>Installation</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/ports/x11/dsbautostart &amp;&amp; make install distclean</span><br></pre></td></tr></table></figure></li><li><p>Usage</p><ul><li><p>Manual</p><ul><li><p>Setup: Add the following command to your <code>~/.xinitrc</code>, or to your window manager’s startup script (e.g. <code>~/.config/openbox/autostart.sh</code>)</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh ~&#x2F;.config&#x2F;DSB&#x2F;autostart.sh&amp;</span><br></pre></td></tr></table></figure></li><li><p><code>~/.config/DSB/autostart.sh</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Plank&amp;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>GUI: <code>Setting -&gt; DSBAutostart -&gt; Add Command</code>, example <code>plank</code>, then <code>Save</code> and <code>Quit</code></p></li></ul></li></ul></li></ul><h5 id="FreeBSD-Insall-Oracle-JDK"><a href="#FreeBSD-Insall-Oracle-JDK" class="headerlink" title="FreeBSD Insall Oracle JDK"></a>FreeBSD Insall Oracle JDK</h5><ul><li>安装 Linux Compact</li><li>在 <code>/usr/ports/java/linux-oracle-jdk18</code> 运行 <code>sudo make install</code></li><li>根据提示在 <span class="exturl" data-url="aHR0cHM6Ly93d3cub3JhY2xlLmNvbS9qYXZhL3RlY2hub2xvZ2llcy9vcmFjbGUtamF2YS1hcmNoaXZlLWRvd25sb2Fkcy5odG1s">Oracle Java Archive<i class="fa fa-external-link-alt"></i></span> 下载需要的 JDK 版本安装包，复制到 <code>/usr/ports/distfiles</code></li><li>在 <code>/usr/ports/java/linux-oracle-jdk18</code> 运行 <code>sudo make install</code>，安装成功</li></ul><h5 id="FreeBSD-Install-Python-and-pip"><a href="#FreeBSD-Install-Python-and-pip" class="headerlink" title="FreeBSD Install Python and pip"></a>FreeBSD Install Python and pip</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo pkg install python</span><br><span class="line"></span><br><span class="line">python --version</span><br><span class="line">Python 3.7.9</span><br><span class="line"></span><br><span class="line">sudo pkg install py37-pip</span><br></pre></td></tr></table></figure><h5 id="简化启动"><a href="#简化启动" class="headerlink" title="简化启动"></a>简化启动</h5><p>FreeBSD 默认启动过程相当详细，包含大量调试信息以及内核消息。</p><ul><li>Add the <code>boot_mute=YES</code> option to the <code>/boot/loader.conf</code> file. </li><li>Add <code>autoboot_delay=2</code> parameter to the <code>/boot/loader.conf</code> file.</li><li>Add <code>rc_startmsgs=&quot;NO&quot;</code> to your <code>/etc/rc.conf</code> file.</li></ul><h5 id="连接网络"><a href="#连接网络" class="headerlink" title="连接网络"></a>连接网络</h5><p>If You will have attached LAN cable and your interface is <code>em0</code> (check <code>ifconfig</code> command output) then <code>dhclient em0</code> command should grant You the working connection to the Internet – assuming that You have DHCP server on that network. </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ifconfig em0 up</span><br><span class="line">dhclient em0</span><br></pre></td></tr></table></figure><p>To test the network connectivity use the <code>ping</code> command.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping -c 3 freebsd.org</span><br></pre></td></tr></table></figure><p>If You would like to connect to the World with wireless connection then here are the needed commands. First lets check what wireless card You have.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl net.wlan.devices</span><br></pre></td></tr></table></figure><p>We will now create <code>wlan</code> virtual device on top of our <code>iwn0</code> device and bring it up.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ifconfig wlan0 create wlandev iwn0</span><br><span class="line">ifconfig wlan0 up</span><br></pre></td></tr></table></figure><p>We can scan for existing nearby WiFi access points if needed.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig wlan0 scan</span><br></pre></td></tr></table></figure><p>Now we need to add the desired WiFi network to the <code>/etc/wpa_supplicant.conf</code> file as shown below.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">network&#x3D;&#123;</span><br><span class="line">  ssid&#x3D;&quot;WIFI-NETWORK-NAME&quot;</span><br><span class="line">  psk&#x3D;&quot;PASSWORD&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Then You may connect to it using the <code>wpa_supplicant</code> daemon. Hit the <code>[CTRL]+[Z]</code> key combination to put the process into suspended state. Then we type the <code>bg</code> command to put it back into running state, but in the background so we can continue to type next commands.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpa_supplicant -i wlan0 -c /etc/wpa_supplicant.conf</span><br></pre></td></tr></table></figure><p>Now we will request for the IP address from the access point DHCP server.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dhclient wlan0</span><br></pre></td></tr></table></figure><h5 id="How-To-Add-and-Remove-Users-on-FreeBSD"><a href="#How-To-Add-and-Remove-Users-on-FreeBSD" class="headerlink" title="How To Add and Remove Users on FreeBSD"></a>How To Add and Remove Users on FreeBSD</h5><ul><li><p>Add a User: <code>adduser</code></p></li><li><p>Grant Sudo Privileges: On FreeBSD, users that are members of the <code>wheel</code> group are allowed to use <code>sudo</code>. This is due to the following line in the default <strong>sudoers</strong> file, <code>/usr/local/etc/sudoers</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%wheel ALL&#x3D;(ALL) NOPASSWD: ALL</span><br></pre></td></tr></table></figure></li><li><p>Remove a User: <code>rmuser</code></p></li><li><p>Lock a User Account: <code>pw lock username</code></p></li><li><p>Unlock a User: <code>pw unlock username</code></p></li></ul><h3 id="参见"><a href="#参见" class="headerlink" title="参见"></a>参见</h3><p>NetBSD: <span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLmh1YXdlaWNsb3VkLmNvbS9OZXRCU0Qv">huaweicloud<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLmFsaXl1bi5jb20vbmV0YnNkLz9zcG09YTJjNmguMTM2NTExMDQuMC4wLjRkODQzYmY0QXpKWVRY">aliyun<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuLw==">tsinghua<i class="fa fa-external-link-alt"></i></span></p><p>OpenBSD: <span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLmh1YXdlaWNsb3VkLmNvbS9PcGVuQlNELw==">huaweicloud<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLmFsaXl1bi5jb20vb3BlbmJzZC8/c3BtPWEyYzZoLjEzNjUxMTA0LjAuMC4xNGRiNWE1MHFGblhsNg==">aliyun<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuLw==">tsinghua<i class="fa fa-external-link-alt"></i></span></p><p>一篇好文：<span class="exturl" data-url="aHR0cHM6Ly9teS5vc2NoaW5hLm5ldC9xaWhoL2Jsb2cvNzg3NDM=">FreeBSD的现状和未来<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly92ZXJtYWRlbi53b3JkcHJlc3MuY29tL2ZyZWVic2QtZGVza3RvcC8=">FreeBSD Desktop<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuZnJlZWJzZC5vcmcvZG9jL3poX1RXL2Jvb2tzL2hhbmRib29rLw==">FreeBSD 使用手冊<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;&lt;p&gt;FreeBSD 計劃的目標在於提供可作任意用途的軟體而不附帶任何限制條文。 我們之中許多人對程式碼 (以及計畫本身) 都有非常大的投入， 因此，當然不介意偶爾有一些資金上的補償，但我們並沒打算堅決地要求得到這類資助。 我們認為我們的首要“使命”是為任何人提供程式碼， 不管他們打算用這些程式碼做什麼， 因為這樣程式碼將能夠被更廣泛地使用，從而發揮其價值。 我認為這是自由軟體最基本的，同時也是我們所倡導的一個目標。&lt;/p&gt;
&lt;p&gt;我們程式碼樹中，有若干是以 GNU 通用公共授權條款 (GPL) 或者 GNU 較寬鬆通用公共授權條款 (LGPL) 發佈的那些程式碼帶有少許的附加限制，還好只是強制性的要求開放程式碼而不是別的。 由於使用 GPL 的軟體在商業用途上會增加若干複雜性，因此，如果可以選擇的話， 我們會比較喜歡使用限制相對更寬鬆的 BSD 版權來發佈軟體。&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;Jordan Hubbard&lt;/strong&gt;&lt;cite&gt;&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly93d3cuZnJlZWJzZC5vcmcvZG9jL3poX1RXL2Jvb2tzL2hhbmRib29rLw==&quot;&gt;FreeBSD Handbook&lt;i class=&quot;fa fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="Unix" scheme="https://vanehsiung.netlify.app/tags/Unix/"/>
    
  </entry>
  
</feed>
